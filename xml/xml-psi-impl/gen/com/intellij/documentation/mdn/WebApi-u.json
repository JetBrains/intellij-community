{
  "license": {
    "name": "CC-BY-SA 2.5",
    "url": "https://creativecommons.org/licenses/by-sa/2.5/"
  },
  "author": {
    "name": "Mozzila Contributors",
    "url": "https://github.com/mdn/content"
  },
  "lang": "en-us",
  "symbols": {
    "uievent": {
      "url": "$MDN_URL$/web/api/uievent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>UIEvent</code></strong> interface represents simple user interface events.</p>\n<p><code>UIEvent</code> derives from <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a>. Although the <a href=\"$MDN_URL$/Web/API/UIEvent/initUIEvent\"><code>UIEvent.initUIEvent()</code></a> method is kept for backward compatibility, you should create a <code>UIEvent</code> object using the <a href=\"$MDN_URL$/Web/API/UIEvent/UIEvent\" ><code>UIEvent()</code></a> constructor.</p>\n<p>Several interfaces are direct or indirect descendants of this one: <a href=\"$MDN_URL$/Web/API/MouseEvent\"><code>MouseEvent</code></a>, <a href=\"$MDN_URL$/Web/API/TouchEvent\"><code>TouchEvent</code></a>, <a href=\"$MDN_URL$/Web/API/FocusEvent\"><code>FocusEvent</code></a>, <a href=\"$MDN_URL$/Web/API/KeyboardEvent\"><code>KeyboardEvent</code></a>, <a href=\"$MDN_URL$/Web/API/WheelEvent\"><code>WheelEvent</code></a>, <a href=\"$MDN_URL$/Web/API/InputEvent\"><code>InputEvent</code></a>, and <a href=\"$MDN_URL$/Web/API/CompositionEvent\"><code>CompositionEvent</code></a>.</p>"
    },
    "uievent.detail": {
      "url": "$MDN_URL$/web/api/uievent/detail",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>UIEvent.detail</code></strong> read-only property, when non-zero, provides the current (or next, depending on the event) click count.</p>\n<p>For <code><a href=\"$MDN_URL$/Web/API/Element/click_event\" >click</a></code> or <code><a href=\"$MDN_URL$/Web/API/Element/dblclick_event\" >dblclick</a></code> events, <code>UIEvent.detail</code> is the current click count.</p>\n<p>For <code><a href=\"$MDN_URL$/Web/API/Element/mousedown_event\" >mousedown</a></code> or <code><a href=\"$MDN_URL$/Web/API/Element/mouseup_event\" >mouseup</a></code> events, <code>UIEvent.detail</code> is <em>1 plus</em> the current click count.</p>\n<p>For all other <a href=\"$MDN_URL$/Web/API/UIEvent\"><code>UIEvent</code></a> objects, <code>UIEvent.detail</code> is always zero.</p>"
    },
    "uievent.inituievent": {
      "url": "$MDN_URL$/web/api/uievent/inituievent",
      "status": [
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <code><strong>UIEvent.initUIEvent()</strong></code> method initializes a UI event\nonce it's been created.</p>\n<p>Events initialized in this way must have been created with the <a href=\"$MDN_URL$/Web/API/Document/createEvent\"><code>Document.createEvent()</code></a> method. This method must be called to set the event\nbefore it is dispatched, using <a href=\"$MDN_URL$/Web/API/EventTarget/dispatchEvent\"><code>EventTarget.dispatchEvent()</code></a>. Once\ndispatched, it doesn't do anything anymore.</p>\n<div class=\"note notecard\">\n<p><strong>Do not use this method anymore as it is deprecated.</strong></p>\n<p>Instead use specific event constructors, like <a href=\"$MDN_URL$/Web/API/UIEvent/UIEvent\" ><code>UIEvent()</code></a>. The page on <a href=\"$MDN_URL$/Web/Events/Creating_and_triggering_events\">Creating and triggering events</a> gives more information about the way to use these.</p>\n</div>",
      "parameters": {
        "type": "Is a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> defining the type of event.",
        "canBubble": "Is a boolean value deciding whether the event should bubble up through the event chain or not. Once set, the read-only property <a href=\"$MDN_URL$/Web/API/Event/bubbles\"><code>Event.bubbles</code></a> will give its value.",
        "cancelable": "Is a boolean value defining whether the event can be canceled. Once set, the read-only property <a href=\"$MDN_URL$/Web/API/Event/cancelable\"><code>Event.cancelable</code></a> will give its value.",
        "view": "Is the <a class=\"page-not-created\"  ><code>WindowProxy</code></a> associated with the event.",
        "detail": "Is an <code>unsigned long</code>   specifying some detail information about the event, depending on the type of event. For mouse events, it indicates how many times the mouse has been clicked on a given screen location."
      }
    },
    "uievent.ischar": {
      "url": "$MDN_URL$/web/api/uievent/ischar",
      "status": [
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>UIEvent.isChar</strong></code> read-only property returns a\nboolean value indicating whether the event produced a key character or not.</p>"
    },
    "uievent.layerx": {
      "url": "$MDN_URL$/web/api/uievent/layerx",
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>UIEvent.layerX</strong></code> read-only property returns the\nhorizontal coordinate of the event relative to the current layer.</p>\n<p>This property takes scrolling of the page into account and returns a value relative to\nthe whole of the document unless the event occurs inside a positioned element, where the\nreturned value is relative to the top left of the positioned element.</p>"
    },
    "uievent.layery": {
      "url": "$MDN_URL$/web/api/uievent/layery",
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>UIEvent.layerY</strong></code> read-only property returns the\nvertical coordinate of the event relative to the current layer.</p>\n<p>This property takes scrolling of the page into account, and returns a value relative to\nthe whole of the document, unless the event occurs inside a positioned element, where\nthe returned value is relative to the top left of the positioned element.</p>"
    },
    "uievent.pagex": {
      "url": "$MDN_URL$/web/api/uievent/pagex",
      "status": [
        "Deprecated"
      ],
      "compatibility": {
        "Edge": "",
        "IE": "9",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The non-standard, read-only <a href=\"$MDN_URL$/Web/API/UIEvent\"><code>UIEvent</code></a> property\n<code><strong>pageX</strong></code> returns the horizontal coordinate of the event\nrelative to the whole document.</p>\n<div class=\"warning notecard\">\n<p>This property was never part of any standard, and was only implemented across a\nsubset of browsers, and only for a limited number of versions. A standardized version\nof <a href=\"$MDN_URL$/Web/API/MouseEvent/pageX\" ><code>pageX</code></a> was added to the <a href=\"$MDN_URL$/Web/API/MouseEvent\"><code>MouseEvent</code></a>\ninterface, however, and is well-supported. You should not expect to find\n<code>pageX</code> on any non-mouse events. Do not look for <code>pageX</code> on any\nnon-mouse events in new code and update existing code as soon as possible.</p>\n</div>"
    },
    "uievent.pagey": {
      "url": "$MDN_URL$/web/api/uievent/pagey",
      "status": [
        "Deprecated"
      ],
      "compatibility": {
        "Edge": "",
        "IE": "9",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>UIEvent.pageY</strong></code> read-only property returns the vertical\ncoordinate of the event relative to the whole document.</p>"
    },
    "uievent.sourcecapabilities": {
      "url": "$MDN_URL$/web/api/uievent/sourcecapabilities",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "47",
        "ChromeAndroid": "47",
        "Edge": "79",
        "Opera": ""
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>UIEvent.sourceCapabilities</code></strong> read-only property returns\nan instance of the <a href=\"$MDN_URL$/Web/API/InputDeviceCapabilities\"><code>InputDeviceCapabilities</code></a> interface which provides\ninformation about the physical device responsible for generating a touch event. If no\ninput device was responsible for the event, it returns <code>null</code>.</p>\n<p>When a single user interaction with an input device generates a series of different\ninput events, the <code>sourceCapabilities</code> property for all of them will point to\nthe same instance of <code>InputDeviceCapabilities</code>. For example, when a user\nlifts their finger off of a touchscreen, several UIEvents may be generated including\n<code>touchend</code>, <code>mousedown</code>, <code>click</code>, and\n<code>focus</code>. All of these events must have the same\n<code>sourceCapabilities</code> representing the touchscreen.</p>\n<p>A device is considered \"responsible\" for an event only when that interaction is part of\nthe abstraction provided by the web platform. For example, many user agents allow a\nwindow to be resized with a mouse or a keyboard, but this detail is not exposed to the\nweb platform in any way, and so the sourceCapabilities of a resize event will typically\nbe null.</p>"
    },
    "uievent.uievent": {
      "url": "$MDN_URL$/web/api/uievent/uievent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "18",
        "Firefox": "11",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>UIEvent()</code></strong> constructor creates a new\n<a href=\"$MDN_URL$/Web/API/UIEvent\"><code>UIEvent</code></a>.</p>"
    },
    "uievent.view": {
      "url": "$MDN_URL$/web/api/uievent/view",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>UIEvent.view</code></strong> read-only property returns the\n<a class=\"page-not-created\"  ><code>WindowProxy</code></a> object from which the event was generated. In browsers, this\nis the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> object the event happened in.</p>"
    },
    "url": {
      "url": "$MDN_URL$/web/api/url",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "",
        "Firefox": "19",
        "IE": "10",
        "Nodejs": "10.0.0",
        "Opera": "19",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>URL</code></strong> interface is used to parse, construct, normalize, and encode <a href=\"$MDN_URL$/Glossary/URL\">URLs</a>. It works by providing properties which allow you to easily read and modify the components of a URL.</span> You normally create a new <code>URL</code> object by specifying the URL as a string when calling its constructor, or by providing a relative URL and a base URL. You can then easily read the parsed components of the URL or make changes to the URL.</p>\n<p>If a browser doesn't yet support the <a href=\"$MDN_URL$/Web/API/URL/URL\" ><code>URL()</code></a> constructor, you can access a URL object using the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface's <a href=\"$MDN_URL$/Web/API/URL\" aria-current=\"page\"><code>URL</code></a> property. Be sure to check to see if any of your target browsers require this to be prefixed.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.createobjecturl": {
      "url": "$MDN_URL$/web/api/url/createobjecturl",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "19",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "19",
        "IE": "10",
        "Opera": "15",
        "Safari": "6",
        "SafariIOS": "6"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>URL.createObjectURL()</code></strong> static\nmethod creates a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing a URL representing the object\ngiven in the parameter.</span> The URL lifetime is tied to the <a href=\"$MDN_URL$/Web/API/Document\"><code>document</code></a>\nin the window on which it was created. The new object URL represents the specified\n<a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> object or <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> object.</p>\n<p>To release an object URL, call <a href=\"$MDN_URL$/Web/API/URL/revokeObjectURL\" ><code>revokeObjectURL()</code></a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This feature is <em>not</em> available in <a href=\"$MDN_URL$/Web/API/Service_Worker_API\">Service Workers</a> due to its\npotential to create memory leaks.</p>\n</div>",
      "parameters": {
        "object": "A <a href=\"$MDN_URL$/Web/API/File\"><code>File</code></a> , <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> , or <a href=\"$MDN_URL$/Web/API/MediaSource\"><code>MediaSource</code></a> object to create an object URL for."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing an object URL that can be used to reference the\n  contents of the specified source <code>object</code>.</p>"
    },
    "url.hash": {
      "url": "$MDN_URL$/web/api/url/hash",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "13",
        "Firefox": "22",
        "Nodejs": "",
        "Opera": "19",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>hash</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface is a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing a\n<code>'#'</code> followed by the fragment identifier of the URL.</span></p>\n<p>The fragment is not <a href=\"$MDN_URL$/Glossary/percent-encoding\">percent-decoded</a>. If the URL does not\nhave a fragment identifier, this property contains an empty string — <code>\"\"</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.host": {
      "url": "$MDN_URL$/web/api/url/host",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "13",
        "Firefox": "22",
        "Nodejs": "",
        "Opera": "19",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p>The <strong><code>host</code></strong> property of the <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface is\na <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the host, that is the <a href=\"$MDN_URL$/Web/API/URL/hostname\" ><code>hostname</code></a>, and then, if the <a href=\"$MDN_URL$/Glossary/Port\">port</a> of the URL is nonempty, a\n<code>':'</code>, followed by the <a href=\"$MDN_URL$/Web/API/URL/port\" ><code>port</code></a> of the URL.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.hostname": {
      "url": "$MDN_URL$/web/api/url/hostname",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "13",
        "Firefox": "22",
        "Nodejs": "",
        "Opera": "19",
        "Safari": "10",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>hostname</code></strong> property of the <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface\nis a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the <a href=\"$MDN_URL$/Glossary/Domain_name\">domain name</a> of the URL.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.href": {
      "url": "$MDN_URL$/web/api/url/href",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "13",
        "Firefox": "22",
        "Nodejs": "",
        "Opera": "19",
        "Safari": "10",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>href</code></strong> property of the <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface is\na <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the whole URL.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.origin": {
      "url": "$MDN_URL$/web/api/url/origin",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "",
        "Firefox": "26",
        "Nodejs": "",
        "Opera": "19",
        "Safari": "10",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>origin</code></strong> read-only property of\nthe <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the\nUnicode serialization of the origin of the represented URL.</span> The exact structure\nvaries depending on the type of URL:</p>\n<ul>\n<li>For <code>http</code> or <code>https</code> URLs, the scheme followed by\n<code>'://'</code>, followed by the domain, followed by <code>':'</code>, followed by\nthe port (the default port, <code>80</code> and <code>443</code> respectively, if\nexplicitly specified).</li>\n<li>For <code>file:</code> URLs, the value is browser dependant.</li>\n<li>for <code>blob:</code> URLs, the origin of the URL following <code>blob:</code> will\nbe used, e.g <code>\"blob:https://mozilla.org\"</code> will be returned as\n<code>\"https://mozilla.org\".</code></li>\n</ul>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.password": {
      "url": "$MDN_URL$/web/api/url/password",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "",
        "Firefox": "26",
        "Nodejs": "",
        "Opera": "19",
        "Safari": "10",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>password</code></strong> property of the <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface\nis a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the password specified before the domain name.</p>\n<p>If it is set without first setting the <a href=\"$MDN_URL$/Web/API/URL/username\" ><code>username</code></a>\nproperty, it silently fails.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.pathname": {
      "url": "$MDN_URL$/web/api/url/pathname",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "13",
        "Firefox": "22",
        "Nodejs": "",
        "Opera": "19",
        "Safari": "10",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>pathname</code></strong> property of the <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface\nis a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing an initial <code>'/'</code> followed by the\npath of the URL not including the query string or fragment (or the empty string if there\nis no path).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.port": {
      "url": "$MDN_URL$/web/api/url/port",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "13",
        "Firefox": "22",
        "Nodejs": "",
        "Opera": "19",
        "Safari": "10",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>port</code></strong> property of the <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface is\na <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the port number of the URL. If the URL does not\ncontain an explicit port number, it will be set to <code>''</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.protocol": {
      "url": "$MDN_URL$/web/api/url/protocol",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "13",
        "Firefox": "22",
        "Nodejs": "",
        "Opera": "19",
        "Safari": "10",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>protocol</code></strong> property of the <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface\nis a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> representing the protocol scheme of the URL, including the\nfinal <code>':'</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.revokeobjecturl": {
      "url": "$MDN_URL$/web/api/url/revokeobjecturl",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "19",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "19",
        "IE": "10",
        "Opera": "15",
        "Safari": "6",
        "SafariIOS": "6"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>URL.revokeObjectURL()</code></strong> static\nmethod releases an existing object URL which was previously created by calling\n<a href=\"$MDN_URL$/Web/API/URL/createObjectURL\"><code>URL.createObjectURL()</code></a>.</span> Call this method when you've finished\nusing an object URL to let the browser know not to keep the reference to the file any\nlonger.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This method is not available from service workers, due to\nissues with the <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> interface's life cycle and the potential for\nleaks.</p>\n</div>",
      "parameters": {
        "objectURL": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing a object URL that was previously created by calling <a href=\"$MDN_URL$/Web/API/URL/createObjectURL\" ><code>createObjectURL()</code></a> ."
      }
    },
    "url.search": {
      "url": "$MDN_URL$/web/api/url/search",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "13",
        "Firefox": "22",
        "Nodejs": "",
        "Opera": "19",
        "Safari": "10",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>search</code></strong> property of the <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface\nis a search string, also called a <em>query string</em>, that is a\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing a <code>'?'</code> followed by the parameters of the\nURL.</p>\n<p>Modern browsers provide the <a href=\"$MDN_URL$/Web/API/URL/searchParams\"><code>URL.searchParams</code></a> property to make it easy to\nparse out the parameters from the query string.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.searchparams": {
      "url": "$MDN_URL$/web/api/url/searchparams",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "51",
        "ChromeAndroid": "51",
        "Edge": "17",
        "Firefox": "29",
        "Nodejs": "7.5.0",
        "Opera": "38",
        "Safari": "10",
        "SafariIOS": "10"
      },
      "doc": "<p>The <strong><code>searchParams</code></strong> readonly property of the\n<a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a> object allowing\naccess to the <a href=\"$MDN_URL$/Web/HTTP/Methods/GET\"><code>GET</code></a> decoded query arguments contained in the URL.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "url.tojson": {
      "url": "$MDN_URL$/web/api/url/tojson",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "71",
        "ChromeAndroid": "71",
        "Edge": "17",
        "Firefox": "54",
        "Nodejs": "",
        "Opera": "58",
        "Safari": "11",
        "SafariIOS": "11"
      },
      "doc": "<p>The <strong><code>toJSON()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface\nreturns a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing a serialized version of the URL,\nalthough in practice it seems to have the same effect as\n<a href=\"$MDN_URL$/Web/API/URL/toString\"><code>URL.toString()</code></a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>.</p>"
    },
    "url.tostring": {
      "url": "$MDN_URL$/web/api/url/tostring",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "19",
        "ChromeAndroid": "25",
        "Edge": "17",
        "Firefox": "54",
        "Opera": "15",
        "Safari": "6.1",
        "SafariIOS": "6.1"
      },
      "doc": "<p>The <strong><code>URL.toString()</code></strong> stringifier method returns a\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the whole URL. It is effectively a read-only version\nof <a href=\"$MDN_URL$/Web/API/URL/href\"><code>URL.href</code></a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>.</p>"
    },
    "url.url": {
      "url": "$MDN_URL$/web/api/url/url",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "19",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "26",
        "Nodejs": "",
        "Opera": "15"
      },
      "doc": "<p>The <code><strong>URL()</strong></code> constructor returns a newly created\n<a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> object representing the URL defined by the parameters.</p>\n<p>If the given base URL or the resulting URL are not valid URLs, the JavaScript\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/TypeError\"><code>TypeError</code></a> exception is thrown.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "parameters": {
        "url": "A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> or any other object with a <a href=\"$MDN_URL$/MDN/Contribute/Howto/Write_an_API_reference/Information_contained_in_a_WebIDL_file#stringifiers\">stringifier</a> — including, for example, an <a href=\"$MDN_URL$/Web/HTML/Element/a\"><code>&lt;a&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/area\"><code>&lt;area&gt;</code></a> element — that represents an absolute or relative URL. If <code><var>url</var></code> is a relative URL, <code><var>base</var></code> is required, and will be used as the base URL. If <code><var>url</var></code> is an absolute URL, a given <code><var>base</var></code> will be ignored.",
        "base": "A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> representing the base URL to use in cases where <code><var>url</var></code> is a relative URL. If not specified, it defaults to <code>undefined</code> ."
      },
      "throws": {
        "TypeError": "<code><var>url</var></code> (in the case of absolute URLs) or <code><var>base</var></code> + <code><var>url</var></code> (in the case of relative URLs) is not a valid URL."
      }
    },
    "url.username": {
      "url": "$MDN_URL$/web/api/url/username",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "32",
        "ChromeAndroid": "32",
        "Edge": "",
        "Firefox": "26",
        "Nodejs": "",
        "Opera": "19",
        "Safari": "10",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>username</code></strong> property of the <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> interface\nis a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the username specified before the domain name.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "urlsearchparams": {
      "url": "$MDN_URL$/web/api/urlsearchparams",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "29",
        "Nodejs": "10.0.0",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <strong><code>URLSearchParams</code></strong> interface defines utility methods to work with the query string of a URL.</p>\n<p>An object implementing <code>URLSearchParams</code> can directly be used in a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Statements/for...of\"><code>for...of</code></a> structure, for example the following two lines are equivalent:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>for (const [key, value] of mySearchParams) {}\nfor (const [key, value] of mySearchParams.entries()) {}</code></pre></div>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "urlsearchparams.append": {
      "url": "$MDN_URL$/web/api/urlsearchparams/append",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "29",
        "Nodejs": "",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <strong><code>append()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>\ninterface appends a specified key/value pair as a new search parameter.</p>\n<p>As shown in the example below, if the same key is appended multiple times it will\nappear in the parameter string multiple times for each value.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "parameters": {
        "name": "The name of the parameter to append.",
        "value ": "The value of the parameter to append."
      },
      "returns": "<p>Void.</p>"
    },
    "urlsearchparams.delete": {
      "url": "$MDN_URL$/web/api/urlsearchparams/delete",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "29",
        "Nodejs": "",
        "Opera": "36"
      },
      "doc": "<p>The <strong><code>delete()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>\ninterface deletes the given search parameter and all its associated values, from the\nlist of all search parameters.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "parameters": {
        "name": "The name of the parameter to be deleted."
      },
      "returns": "<p>Void</p>"
    },
    "urlsearchparams.entries": {
      "url": "$MDN_URL$/web/api/urlsearchparams/entries",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "44",
        "Nodejs": "",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <code><strong>entries()</strong></code> method of the\n<a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a> interface returns an\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing iteration through all key/value\npairs contained in this object. The key and value of each pair are\n<a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> objects.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>.</p>"
    },
    "urlsearchparams.foreach": {
      "url": "$MDN_URL$/web/api/urlsearchparams/foreach",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "44",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <code><strong>forEach()</strong></code> method of the\n<a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a> interface allows iteration through all values contained\nin this object via a callback function.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "parameters": {
        "callback": "Function to execute on each element, which is passed the following arguments:<br> <dl> <dt><code>value</code></dt> <dd>The value of the current entry being processed in the <code>URLSearchParams</code> object.<br></dd> <dt><code>key</code></dt> <dd>The key of the current entry being processed in the <code>URLSearchParams</code> object.<br></dd> <dt><code>searchParams</code></dt> <dd>The <code>URLSearchParams</code> object the <code>forEach()</code> was called upon.<br></dd> </dl>",
        "thisArg": "Value to use as <code>this</code> when executing <code>callback</code>."
      },
      "returns": "<p>Void.</p>"
    },
    "urlsearchparams.get": {
      "url": "$MDN_URL$/web/api/urlsearchparams/get",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "29",
        "Nodejs": "",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <strong><code>get()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>\ninterface returns the first value associated to the given search parameter.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "parameters": {
        "name": "The name of the parameter to return."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> if the given search parameter is found; otherwise,\n  <code><strong>null</strong></code>.</p>"
    },
    "urlsearchparams.getall": {
      "url": "$MDN_URL$/web/api/urlsearchparams/getall",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "29",
        "Nodejs": "",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <strong><code>getAll()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>\ninterface returns all the values associated with a given search parameter as an array. </p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "parameters": {
        "name": "The name of the parameter to return."
      },
      "returns": "<p>An array of <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>s.</p>"
    },
    "urlsearchparams.has": {
      "url": "$MDN_URL$/web/api/urlsearchparams/has",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "29",
        "Nodejs": "",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <strong><code>has()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>\ninterface returns a boolean value that indicates whether a parameter with the\nspecified name exists.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "parameters": {
        "name": "The name of the parameter to find."
      },
      "returns": "<p>A boolean value.</p>"
    },
    "urlsearchparams.keys": {
      "url": "$MDN_URL$/web/api/urlsearchparams/keys",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "44",
        "Nodejs": "",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <code><strong>keys()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>\ninterface returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing iteration\nthrough all keys contained in this object. The keys are <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\nobjects.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: This method is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>.</p>\n</div>",
      "returns": "<p>Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>.</p>"
    },
    "urlsearchparams.set": {
      "url": "$MDN_URL$/web/api/urlsearchparams/set",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "29",
        "Nodejs": "",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <strong><code>set()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>\ninterface sets the value associated with a given search parameter to the given value.\nIf there were several matching values, this method deletes the others. If the search\nparameter doesn't exist, this method creates it.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "parameters": {
        "name": "The name of the parameter to set.",
        "value": "The value of the parameter to set."
      },
      "returns": "<p>Void.</p>"
    },
    "urlsearchparams.sort": {
      "url": "$MDN_URL$/web/api/urlsearchparams/sort",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "17",
        "Firefox": "54",
        "Nodejs": "7.7.0",
        "Opera": "48",
        "Safari": "11",
        "SafariIOS": "11"
      },
      "doc": "<p>The <code><strong>URLSearchParams.sort()</strong></code> method sorts all key/value\npairs contained in this object in place and returns <code>undefined</code>. The sort\norder is according to unicode code points of the keys. This method uses a stable sorting\nalgorithm (i.e. the relative order between key/value pairs with equal keys will be\npreserved).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p><code>undefined</code>.</p>"
    },
    "urlsearchparams.tostring": {
      "url": "$MDN_URL$/web/api/urlsearchparams/tostring",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "29",
        "Nodejs": "",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <strong><code>toString()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a> interface returns a query string suitable for use in a\nURL.</p>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: This method returns the query string without the question\nmark. This is different from <a href=\"$MDN_URL$/Web/API/HTMLAnchorElement/search\">window.location.search</a>,\nwhich includes it.</p>\n</div>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>, without the question mark. (Returns an empty string if no\n  search parameters have been set.)</p>"
    },
    "urlsearchparams.urlsearchparams": {
      "url": "$MDN_URL$/web/api/urlsearchparams/urlsearchparams",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "29",
        "Nodejs": "7.10.0",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <code><strong>URLSearchParams()</strong></code> constructor creates and returns a\nnew <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a> object.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a> object instance.</p>"
    },
    "urlsearchparams.values": {
      "url": "$MDN_URL$/web/api/urlsearchparams/values",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "44",
        "Nodejs": "",
        "Opera": "36",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p>The <code><strong>values()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLsearchParams</code></a>\ninterface returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a> allowing iteration\nthrough all values contained in this object. The values are <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>\nobjects.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\"><code>iterator</code></a>.</p>"
    },
    "usb": {
      "url": "$MDN_URL$/web/api/usb",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>USB</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\">WebUSB API</a> provides attributes and methods for finding and connecting USB devices from a web page.</p>"
    },
    "usb.getdevices": {
      "url": "$MDN_URL$/web/api/usb/getdevices",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>getDevices</code></strong> method of the <a href=\"$MDN_URL$/Web/API/USB\"><code>USB</code></a> interface\nreturns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with an array of <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a>\nobjects for paired attached devices. For information on pairing devices, see\n<a href=\"$MDN_URL$/Web/API/USB/requestDevice\"><code>USB.requestDevice()</code></a>.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with an array of <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a>\n  objects.</p>"
    },
    "usb.onconnect": {
      "url": "$MDN_URL$/web/api/usb/onconnect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>onconnect</code></strong> property of the <a href=\"$MDN_URL$/Web/API/USB\"><code>USB</code></a>\ninterface is an event handler called whenever a paired device is connected. It is passed an instance of <a href=\"$MDN_URL$/Web/API/USBConnectionEvent\"><code>USBConnectionEvent</code></a>.</p>"
    },
    "usb.ondisconnect": {
      "url": "$MDN_URL$/web/api/usb/ondisconnect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>ondisconnect</code></strong> property of the <a href=\"$MDN_URL$/Web/API/USB\"><code>USB</code></a> is an\nevent handler called whenever a paired device is disconnected. It is passed an instance of <a href=\"$MDN_URL$/Web/API/USBConnectionEvent\"><code>USBConnectionEvent</code></a>.</p>"
    },
    "usb.requestdevice": {
      "url": "$MDN_URL$/web/api/usb/requestdevice",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <strong><code>requestDevice()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/USB\"><code>USB</code></a>\ninterface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with an instance of\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> if the specified device is found. Calling this function\ntriggers the user agent's pairing flow.</p>",
      "parameters": {
        "filters": "An array of filter objects for possible devices you would like to pair. Each filter object can have the following properties: <ul> <li><code>vendorId</code></li> <li><code>productId</code></li> <li><code>classCode</code></li> <li><code>subclassCode</code></li> <li><code>protocolCode</code></li> <li><code>serialNumber</code></li> </ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with an instance of <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a>.</p>"
    },
    "usbalternateinterface": {
      "url": "$MDN_URL$/web/api/usbalternateinterface",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code>USBAlternateInterface</code> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\" rel=\"nofollow\">WebUSB API</a> provides information about a particular configuration of an interface provided by the USB device. An interface includes one or more alternate settings which can configure a set of endpoints based on the operating mode of the device.</p>"
    },
    "usbconfiguration": {
      "url": "$MDN_URL$/web/api/usbconfiguration",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code>USBConfiguration</code> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\">WebUSB API</a> provides information about a particular configuration of a USB device and the interfaces that it supports.</p>"
    },
    "usbconfiguration.configurationname": {
      "url": "$MDN_URL$/web/api/usbconfiguration/configurationname",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>configurationName</code></strong> read-only property\nof the <a href=\"$MDN_URL$/Web/API/USBConfiguration\"><code>USBConfiguration</code></a> interface returns the name provided by the device\nto describe this configuration. This is equal to the value of the string descriptor with\nthe index provided in the <a href=\"https://www.beyondlogic.org/usbnutshell/usb5.shtml#ConfigurationDescriptors\" class=\"external\" rel=\" noopener\"><code>iConfiguration</code></a>\nfield of the configuration descriptor defining this configuration.</p>"
    },
    "usbconfiguration.configurationvalue": {
      "url": "$MDN_URL$/web/api/usbconfiguration/configurationvalue",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>configurationValue</code></strong> read-only property\nof the <a href=\"$MDN_URL$/Web/API/USBConfiguration\"><code>USBConfiguration</code></a> interface null</p>"
    },
    "usbconfiguration.interfaces": {
      "url": "$MDN_URL$/web/api/usbconfiguration/interfaces",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>interfaces</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/USBConfiguration\"><code>USBConfiguration</code></a> interface returns an array containing instances of the\n<a href=\"$MDN_URL$/Web/API/USBInterface\"><code>USBInterface</code></a> describing each interface supported by this configuration.</p>"
    },
    "usbconfiguration.usbconfiguration": {
      "url": "$MDN_URL$/web/api/usbconfiguration/usbconfiguration",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>USBConfiguration()</code></strong> constructor\ncreates a new <a href=\"$MDN_URL$/Web/API/USBConfiguration\"><code>USBConfiguration</code></a> object which contains information about\nthe configuration on the provided USBDevice with the given configuration value.</p>",
      "parameters": {
        "device": "Specifies the <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> you want to configure.",
        "configurationValue": "Specifies the <a href=\"https://www.beyondlogic.org/usbnutshell/usb5.shtml#ConfigurationDescriptors\" class=\"external\" rel=\" noopener\">configuration descriptor</a> you want to read. This is an unsigned integer in the range 0 to 255."
      }
    },
    "usbconnectionevent": {
      "url": "$MDN_URL$/web/api/usbconnectionevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>USBConnectionEvent</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\">WebUSB API</a> is the event type passed to <a href=\"$MDN_URL$/Web/API/USB/onconnect\"><code>USB.onconnect</code></a> and <a href=\"$MDN_URL$/Web/API/USB/ondisconnect\"><code>USB.ondisconnect</code></a> when the user agent detects that a new USB device has been connected or disconnected.</p>"
    },
    "usbconnectionevent.device": {
      "url": "$MDN_URL$/web/api/usbconnectionevent/device",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>device</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/USBConnectionEvent\"><code>USBConnectionEvent</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> object representing the device being connected or disconnected.</p>"
    },
    "usbconnectionevent.usbconnectionevent": {
      "url": "$MDN_URL$/web/api/usbconnectionevent/usbconnectionevent",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>USBConnectionEvent()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/USBConnectionEvent\"><code>USBConnectionEvent</code></a> object which is passed to <a href=\"$MDN_URL$/Web/API/USB/onconnect\"><code>USB.onconnect</code></a> and <a href=\"$MDN_URL$/Web/API/USB/ondisconnect\"><code>USB.ondisconnect</code></a>. This constructor is not typically used, it is created by the browser in response to the connection and disconnection of a USB device.</p>",
      "parameters": {
        "type": "A <a href=\"$MDN_URL$/Web/API/DOMString\" ><code>string</code></a> representing the name of the event. One of: <ul> <li><code>connect</code></li> <li><code>disconnect</code></li> </ul>",
        "USBConnectionEventInit": "An object including the following: <dl> <dt>A <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a></dt> <dd>An object representing the USB device being connected or disconnected.</dd> <dt><code>bubbles</code> <span class=\"badge inline optional\">Optional</span></dt> <dd>A boolean value indicating whether the event bubbles. The default is <code>false</code>.</dd> <dt><code>cancelable</code> <span class=\"badge inline optional\">Optional</span></dt> <dd>A boolean value indicating whether the event can be cancelled. The default is <code>false</code>.</dd> <dt><code>composed</code> <span class=\"badge inline optional\">Optional</span></dt> <dd>A boolean value indicating whether the event will trigger listeners outside of a shadow root (see <a href=\"$MDN_URL$/Web/API/Event/composed\"><code>Event.composed</code></a> for more details). The default is <code>false</code>.</dd> </dl>"
      }
    },
    "usbdevice": {
      "url": "$MDN_URL$/web/api/usbdevice",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>USBDevice</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\">WebUSB API</a> provides access to metadata about a paired USB device and methods for controlling it.</p>"
    },
    "usbdevice.claiminterface": {
      "url": "$MDN_URL$/web/api/usbdevice/claiminterface",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>claimInterface()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves when\nthe requested interface is claimed for exclusive access.</p>",
      "parameters": {
        "interfaceNumber": "The index of one of the interfaces supported by the device. Interfaces are device-specific."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a>.</p>"
    },
    "usbdevice.clearhalt": {
      "url": "$MDN_URL$/web/api/usbdevice/clearhalt",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>clearHalt()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a>\ninterface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves when a halt condition is\ncleared. A halt condition is when a data tranfer to or from the device has a status\nof <code>'stall'</code>, which requires the web page (the <em>host</em> system, in USB\nterminology) to clear that condition. See the for details.</p>",
      "parameters": {
        "direction": "Indicates whether the devices input or output should be cleared. Valid values are  <code>'in'</code>  or  <code>'out'</code> .",
        "endpointNumber": "Indicates the number of the endpoint to clear. The promise will reject if an invalid endpoint is supplied."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a>.</p>"
    },
    "usbdevice.close": {
      "url": "$MDN_URL$/web/api/usbdevice/close",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>close()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a>\ninterface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves when all open interfaces are\nreleased and the device session has ended.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a>.</p>"
    },
    "usbdevice.configuration": {
      "url": "$MDN_URL$/web/api/usbdevice/configuration",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>configuration</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/USBConfiguration\"><code>USBConfiguration</code></a> object for\nthe currently selected interface for a paired USB device.</p>"
    },
    "usbdevice.configurations": {
      "url": "$MDN_URL$/web/api/usbdevice/configurations",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>configurations</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>array</code></a> of device-specific interfaces\nfor controlling a paired USB device.</p>"
    },
    "usbdevice.controltransferin": {
      "url": "$MDN_URL$/web/api/usbdevice/controltransferin",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>controlTransferIn()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a\n<a href=\"$MDN_URL$/Web/API/USBInTransferResult\"><code>USBInTransferResult</code></a> when the result of a command or status request has\nbeen received from the USB device.</p>",
      "parameters": {
        "setup ": "An object that sets options for . The available options are: <ul> <li><code>requestType</code>: Must be one of three values specifying whether the tranfer is <code>\"standard\"</code> (common to all USB devices) <code>\"class\"</code> (common to an industry-standard class of devices) or <code>\"vendor\"</code>.</li> <li><code>recipient</code>: Specifices the target of the transfer on the device, one of <code>\"device\"</code>, <code>\"interface\"</code>, <code>\"endpoint\"</code>, or <code>\"other\"</code>.</li> <li><code>request</code>: A vendor-specific command.</li> <li><code>value</code>: Vender-specific request parameters.</li> <li><code>index</code>: The interface number of the recipient.</li> </ul>",
        "length": "The maximum number of bytes to read from the device. The actual data is in the  <a href=\"$MDN_URL$/Web/API/USBInTransferResult\"><code>USBInTransferResult</code></a> in the resolved Promise."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a <a href=\"$MDN_URL$/Web/API/USBInTransferResult\"><code>USBInTransferResult</code></a>.</p>"
    },
    "usbdevice.controltransferout": {
      "url": "$MDN_URL$/web/api/usbdevice/controltransferout",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>controlTransferOut()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a\n<a href=\"$MDN_URL$/Web/API/USBOutTransferResult\"><code>USBOutTransferResult</code></a> when a command or status operation has been\ntransmitted to the USB device.</p>",
      "parameters": {
        "setup": "An object that sets options for . The available options are: <ul> <li><code>requestType</code>: Must be one of three values specifying whether the tranfer is <code>\"standard\"</code> (common to all USB devices) <code>\"class\"</code> (common to an industry-standard class of devices) or <code>\"vendor\"</code>.</li> <li><code>recipient</code>: Specifices the target of the transfer on the device, one of <code>\"device\"</code>, <code>\"interface\"</code>, <code>\"endpoint\"</code>, or <code>\"other\"</code>.</li> <li><code>request</code>: A vendor-specific command.</li> <li><code>value</code>: Vender-specific request parameters.</li> <li><code>index</code>: The interface number of the recipient.</li> </ul>",
        "data": "A <a class=\"page-not-created\"  ><code>TypedArray</code></a> containing the data that will be transfered to the device. Not all commands require data; some commands can send data just through the value parameter. Check with your device to see what the specific request requires."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a <a href=\"$MDN_URL$/Web/API/USBOutTransferResult\"><code>USBOutTransferResult</code></a>.</p>"
    },
    "usbdevice.deviceclass": {
      "url": "$MDN_URL$/web/api/usbdevice/deviceclass",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>deviceClass</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface one of three properties that identify USB devices for\nthe purpose of loading a USB driver that will work with that device. The other two\nproperties are USBDevice.deviceSubclass and USBDevice.deviceprotocol.</p>"
    },
    "usbdevice.deviceprotocol": {
      "url": "$MDN_URL$/web/api/usbdevice/deviceprotocol",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>deviceProtocol</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface one of three properties that identify USB devices for\nthe purpose of loading a USB driver that will work with that device. The other two\nproperties are <code>USBDevice.deviceClass</code>\nand <code>USBDevice.deviceSubclass</code>.</p>"
    },
    "usbdevice.devicesubclass": {
      "url": "$MDN_URL$/web/api/usbdevice/devicesubclass",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>deviceSubclass</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface one of three properties that identify USB devices for\nthe purpose of loading a USB driver that will work with that device. The other two\nproperties are USBDevice.deviceClass and USBDevice.deviceProtocol.</p>"
    },
    "usbdevice.deviceversionmajor": {
      "url": "$MDN_URL$/web/api/usbdevice/deviceversionmajor",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>deviceVersionMajor</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface he major version number of the device in a semantic\nversioning scheme.</p>"
    },
    "usbdevice.deviceversionminor": {
      "url": "$MDN_URL$/web/api/usbdevice/deviceversionminor",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>deviceVersionMinor</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface the minor version number of the device in a semantic\nversioning scheme.</p>"
    },
    "usbdevice.deviceversionsubminor": {
      "url": "$MDN_URL$/web/api/usbdevice/deviceversionsubminor",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>deviceVersionSubminor</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface the patch version number of the device in a semantic\nversioning scheme.</p>"
    },
    "usbdevice.isochronoustransferin": {
      "url": "$MDN_URL$/web/api/usbdevice/isochronoustransferin",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>isochronousTransferIn()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a\n<a href=\"$MDN_URL$/Web/API/USBIsochronousInTransferResult\"><code>USBIsochronousInTransferResult</code></a> when time sensitive information has been\ntransmitted received from the USB device.</p>",
      "parameters": {
        "endpointNumber": "The number of a device-specific endpoint (buffer).",
        "packetLengths": "An array of lengths for the packets being received."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a\n  <a href=\"$MDN_URL$/Web/API/USBIsochronousInTransferResult\"><code>USBIsochronousInTransferResult</code></a></p>"
    },
    "usbdevice.isochronoustransferout": {
      "url": "$MDN_URL$/web/api/usbdevice/isochronoustransferout",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>isochronousTransferOut()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a\n<a href=\"$MDN_URL$/Web/API/USBIsochronousOutTransferResult\"><code>USBIsochronousOutTransferResult</code></a> when time sensitive information has been\ntransmitted to the USB device.</p>",
      "parameters": {
        "endpointNumber": "The number of a device-specific endpoint (buffer).",
        "data": "A <a class=\"page-not-created\"  ><code>TypedArray</code></a>  containing the data to send to the device.",
        "packetLengths": "An array of lengths for the packets being transfered."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a\n  <a href=\"$MDN_URL$/Web/API/USBIsochronousOutTransferResult\"><code>USBIsochronousOutTransferResult</code></a>.</p>"
    },
    "usbdevice.manufacturername": {
      "url": "$MDN_URL$/web/api/usbdevice/manufacturername",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>manufacturerName</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface the of the organization that manufactured the USB\ndevice.</p>"
    },
    "usbdevice.open": {
      "url": "$MDN_URL$/web/api/usbdevice/open",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>open()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a>\ninterface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves when a device session has\nstarted.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a>.</p>"
    },
    "usbdevice.opened": {
      "url": "$MDN_URL$/web/api/usbdevice/opened",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>opened</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface indicates whether a session has been started with a\npaired USB device. A device must be opened before it can be controlled by a web page.</p>"
    },
    "usbdevice.productid": {
      "url": "$MDN_URL$/web/api/usbdevice/productid",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>productId</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface the manufacturer-defined code that identifies a USB\ndevice.</p>"
    },
    "usbdevice.productname": {
      "url": "$MDN_URL$/web/api/usbdevice/productname",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>productName</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface the manufacturer-defined name that identifies a USB\ndevice.</p>"
    },
    "usbdevice.releaseinterface": {
      "url": "$MDN_URL$/web/api/usbdevice/releaseinterface",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>releaseInterface()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves when a\ncliamed interface is released from exclusive access.</p>",
      "parameters": {
        "interfaceNumber": "The device-specific index of the currently-claimed interface."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a>.</p>"
    },
    "usbdevice.reset": {
      "url": "$MDN_URL$/web/api/usbdevice/reset",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>reset()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a>\ninterface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves when the device is reset and all\napp operations canceled and their promises rejected.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a>.</p>"
    },
    "usbdevice.selectalternateinterface": {
      "url": "$MDN_URL$/web/api/usbdevice/selectalternateinterface",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>selectAlternateInterface()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves when\nthe specified alternative endpoint is selected.</p>",
      "parameters": {
        "interfaceNumber": "The index of one of the interfaces supported by the device. Interfaces are device-specific.",
        "alternateSetting": "The configuration of the selected interface."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a>.</p>"
    },
    "usbdevice.selectconfiguration": {
      "url": "$MDN_URL$/web/api/usbdevice/selectconfiguration",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>selectConfiguration()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves when\nthe specified configuration is selected.</p>",
      "parameters": {
        "configurationValue": "The number of a device-specific configuration."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a>.</p>"
    },
    "usbdevice.serialnumber": {
      "url": "$MDN_URL$/web/api/usbdevice/serialnumber",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>serialNumber</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface is the manufacturer-defined serial number for the\nspecific USB device.</p>"
    },
    "usbdevice.transferin": {
      "url": "$MDN_URL$/web/api/usbdevice/transferin",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>transferIn()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a>\ninterface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a\n<a class=\"page-not-created\"  ><code>USBTransferInResult</code></a> when bulk or interrupt data is received from the USB\ndevice.</p>",
      "parameters": {
        "endpointNumber": "The number of a device-specific endpoint (buffer).",
        "length": "The maximum number of bytes that will be read back from the device. The actual data is in the  <a href=\"$MDN_URL$/Web/API/USBInTransferResult\"><code>USBInTransferResult</code></a> in the resolved Promise."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(\"USBTransferInResult\")}}\"><code>USBTransferInResult</code></a>.</p>"
    },
    "usbdevice.transferout": {
      "url": "$MDN_URL$/web/api/usbdevice/transferout",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>transferOut()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a>\ninterface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a\n<a class=\"page-not-created\"  ><code>USBTransferOutResult</code></a> when bulk or interrupt data is sent to the USB\ndevice.</p>",
      "parameters": {
        "endpointNumber": "The number of a device-specific endpoint (buffer).",
        "data": "A  <a class=\"page-not-created\"  ><code>TypedArray</code></a> containing the data to send to the device."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with a <a class=\"page-not-created\" title=\"The documentation about this has not yet been written; please consider contributing!\" data-flaw-src=\"{{domxref(\"USBTransferOutResult\")}}\"><code>USBTransferOutResult</code></a>.</p>"
    },
    "usbdevice.usbversionmajor": {
      "url": "$MDN_URL$/web/api/usbdevice/usbversionmajor",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>usbVersionMajor</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface is one of three properties that declare the USB\nprotocol version supported by the device. The other two properties\nare USBDevice.usbVersionMinor and USBDevice.usbVersionSubminor.</p>"
    },
    "usbdevice.usbversionminor": {
      "url": "$MDN_URL$/web/api/usbdevice/usbversionminor",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>usbVersionMinor</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface is one of three properties that declare the USB\nprotocol version supported by the device. The other two properties\nare USBDevice.usbVersionMajor and USBDevice.usbVersionSubminor.</p>"
    },
    "usbdevice.usbversionsubminor": {
      "url": "$MDN_URL$/web/api/usbdevice/usbversionsubminor",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>usbVersionSubminor</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface is one of three properties that declare the USB\nprotocol version supported by the device. The other two properties\nare USBDevice.usbVersionMajor and USBDevice.usbVersionMinor.</p>"
    },
    "usbdevice.vendorid": {
      "url": "$MDN_URL$/web/api/usbdevice/vendorid",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>vendorId</code></strong> read only property of the\n<a href=\"$MDN_URL$/Web/API/USBDevice\"><code>USBDevice</code></a> interface is the official usg.org-assigned vendor ID.</p>"
    },
    "usbendpoint": {
      "url": "$MDN_URL$/web/api/usbendpoint",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code>USBEndpoint</code> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\">WebUSB API</a> provides information about an endpoint provided by the USB device. An endpoint represents a unidirectional data stream into or out of a device.</p>"
    },
    "usbinterface": {
      "url": "$MDN_URL$/web/api/usbinterface",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The <code>USBInterface</code> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\" rel=\"nofollow\">WebUSB API</a> provides information about an interface provided by the USB device. An interface represents a feature of the device which implements a particular protocol and may contain endpoints for bidirectional communication.</p>"
    },
    "usbintransferresult": {
      "url": "$MDN_URL$/web/api/usbintransferresult",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code>USBInTransferResult</code> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\" rel=\"nofollow\">WebUSB API</a> provides the result from a call to the <code>transferIn()</code> and <code>controlTransferIn()</code> methods of the <code>USBDevice</code> interface. It represents the result from requesting a transfer of data from the USB device to the USB host.</p>"
    },
    "usbisochronousintransferpacket": {
      "url": "$MDN_URL$/web/api/usbisochronousintransferpacket",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code>USBIsochronousInTransferPacket</code> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\" rel=\"nofollow\">WebUSB API</a> is part of the response from a call to the <code>isochronousTransferIn()</code> method of the <code>USBDevice</code> interface. It represents the status of an individual packet from a request to transfer data from the USB device to the USB host over an isochronous endpoint.</p>"
    },
    "usbisochronousintransferresult": {
      "url": "$MDN_URL$/web/api/usbisochronousintransferresult",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code>USBIsochronousInTransferResult</code> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\" rel=\"nofollow\">WebUSB API</a> provides the result from a call to the <code>isochronousTransferIn()</code> method of the <code>USBDevice</code> interface. It represents the result from requesting a transfer of data from the USB device to the USB host.</p>"
    },
    "usbisochronousouttransferpacket": {
      "url": "$MDN_URL$/web/api/usbisochronousouttransferpacket",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code>USBIsochronousOutTransferPacket</code> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\" rel=\"nofollow\">WebUSB API</a> is part of the response from a call to the <code>isochronousTransferOut()</code> method of the <code>USBDevice</code> interface. It represents the status of an individual packet from a request to transfer data from the USB host to the USB device over an isochronous endpoint.</p>"
    },
    "usbisochronousouttransferresult": {
      "url": "$MDN_URL$/web/api/usbisochronousouttransferresult",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code>USBIsochronousOutTransferResult</code> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\" rel=\"nofollow\">WebUSB API</a> provides the result from a call to the <code>isochronousTransferOut()</code> method of the <code>USBDevice</code> interface. It represents the result from requesting a transfer of data from the USB host to the USB device.</p>"
    },
    "usbouttransferresult": {
      "url": "$MDN_URL$/web/api/usbouttransferresult",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48"
      },
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code>USBOutTransferResult</code> interface of the <a href=\"$MDN_URL$/Web/API/WebUSB_API\" rel=\"nofollow\">WebUSB API</a> provides the result from a call to the <code>transferOut()</code> and <code>controlTransferOut()</code> methods of the <code>USBDevice</code> interface. It represents the result from requesting a transfer of data from the USB host to the USB device.</p>"
    },
    "userproximityevent": {
      "url": "$MDN_URL$/web/api/userproximityevent",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<div class=\"notecard warning\">\n<h4 id=\"warning\">Warning</h4>\n<p><code>UserProximityEvent</code> is not supported by any current major browser, and should not be used.</p>\n</div>\n<p>The <strong><code>UserProximityEvent</code></strong> indicates whether a nearby physical object is present by using the proximity sensor of a device.</p>"
    },
    "usvstring": {
      "url": "$MDN_URL$/web/api/usvstring",
      "doc": "<p>A <strong><code>USVString</code></strong> is a sequence of <a href=\"https://www.unicode.org/glossary/#unicode_scalar_value\" data-flaw=\"link1\" class=\"external\" rel=\" noopener\">Unicode scalar values</a>. This definition differs from that of <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> or the JavaScript <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> type in that it always represents a valid sequence suitable for text processing, while the latter can contain surrogate code points. The <code>USVString</code> type is generally found in APIs that perform text processing, while <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> is used by most other APIs.</p>\n<p>When a <code>USVString</code> is provided to JavaScript, it maps to the JavaScript primitive <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> with the UTF-16 encoding of its sequence of Unicode scalar values.</p>\n<p>When a Web API accepts a <code>USVString</code>, the JavaScript value provided is first stringified, in the same way as for <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>. The resulting string is then further converted to <code>USVString</code> by replacing any surrogate code points (or equivalently, any unpaired surrogate code units) with the Unicode \"replacement character\" U+FFFD (�).</p>"
    },
    "validitystate": {
      "url": "$MDN_URL$/web/api/validitystate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "15",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "4",
        "IE": "10",
        "Opera": "12.1",
        "Safari": "5",
        "SafariIOS": "5"
      },
      "doc": "<p>The <strong><code>ValidityState</code></strong> interface represents the <em>validity states</em> that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.</p>"
    },
    "validitystate.badinput": {
      "url": "$MDN_URL$/web/api/validitystate/badinput",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "25",
        "ChromeAndroid": "",
        "Edge": "14",
        "Firefox": "29",
        "Opera": "15",
        "Safari": "11",
        "SafariIOS": "7"
      },
      "doc": "<p>The read-only <strong><code>badInput</code></strong> property of a <a href=\"$MDN_URL$/Web/API/ValidityState\">ValidityState</a> object indicates if the user has provided input that the browser is unable to convert. For example, if you have a number input element whose content is a string. <em><strong>Note:</strong> While this is unsupported in Internet Explorer, any non-numeric value will be dismissed from the field if it is a number input.</em></p>"
    },
    "validitystate.patternmismatch": {
      "url": "$MDN_URL$/web/api/validitystate/patternmismatch",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "15",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "4",
        "IE": "10",
        "Opera": "12.1",
        "Safari": "5",
        "SafariIOS": "5"
      },
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>The read-only <strong><code>patternMismatch</code></strong> property of a <strong><code><a href=\"$MDN_URL$/Web/API/ValidityState\">ValidityState</a></code></strong> object indicates if the value of an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, after having been edited by the user, does not conform to the constraints set by the element's <code><a href=\"$MDN_URL$/Web/HTML/Attributes/pattern\">pattern</a></code> attribute.\n<p>If the field supports the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/pattern\">pattern</a></code> attribute -- which means the <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> is of <code>type</code> <a href=\"$MDN_URL$/Web/HTML/Element/input/text\">text</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/tel\">tel</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/email\">email</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/url\">url</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/password\">password</a>,  or <a href=\"$MDN_URL$/Web/HTML/Element/input/search\">search</a> -- and the pattern value is set to a valid regular expression, if the value don't doesn't conform to the constraints set by the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/pattern\">pattern</a></code> value, the <code>patternMismatch</code> property will be true.</p>"
    },
    "validitystate.rangeoverflow": {
      "url": "$MDN_URL$/web/api/validitystate/rangeoverflow",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "15",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "4",
        "IE": "10",
        "Opera": "12.1",
        "Safari": "5",
        "SafariIOS": "5"
      },
      "doc": "<p>The read-only <strong><code>rangeOverflow</code></strong> property of a <strong><code><a href=\"$MDN_URL$/Web/API/ValidityState\">ValidityState</a></code></strong> object indicates if the value of an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, after having been edited by the user, does not conform to the constraints set by the element's <code><a href=\"$MDN_URL$/Web/HTML/Attributes/max\">max</a></code> attribute.</p>\n<p>If the field is numeric in nature, including the <a href=\"$MDN_URL$/Web/HTML/Element/input/date\">date</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/month\">month</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/week\">week</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/time\">time</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/datetime-local\">datetime-local</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/number\">number</a> and <a href=\"$MDN_URL$/Web/HTML/Element/input/range\">range</a> types and a max value is set, if the value don't doesn't conform to the constraints set by the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/step\">max</a></code> value, the <code>rangeOverflow</code> property will be true.</p>\n<p>Given the following:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code>&lt;input type=\"number\" min=\"20\" max=\"40\" step=\"2\"/&gt;</code></pre></div>\n<p>if <code>value &gt; 40</code>, <code>rangeOverflow</code> will be true. When <code>true</code>, the element matches the <a href=\"$MDN_URL$/Web/CSS/:invalid\"><code>:invalid</code></a> and <a href=\"$MDN_URL$/Web/CSS/:out-of-range\"><code>:out-of-range</code></a> CSS pseudo-classes.</p>"
    },
    "validitystate.rangeunderflow": {
      "url": "$MDN_URL$/web/api/validitystate/rangeunderflow",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "15",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "4",
        "IE": "10",
        "Opera": "12.1",
        "Safari": "5",
        "SafariIOS": "5"
      },
      "doc": "<p>The read-only <strong><code>rangeUnderflow</code></strong> property of a <strong><code><a href=\"$MDN_URL$/Web/API/ValidityState\">ValidityState</a></code></strong> object indicates if the value of an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, after having been edited by the user, does not conform to the constraints set by the element's <code><a href=\"$MDN_URL$/Web/HTML/Attributes/min\">min</a></code> attribute.</p>\n<p>If the field is numeric in nature, including the <a href=\"$MDN_URL$/Web/HTML/Element/input/date\">date</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/month\">month</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/week\">week</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/time\">time</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/datetime-local\">datetime-local</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/number\">number</a> and <a href=\"$MDN_URL$/Web/HTML/Element/input/range\">range</a> types and a <code>min</code> value is set, if the value don't doesn't conform to the constraints set by the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/step\">min</a></code> value, the <code>rangeUnderflow</code> property will be true.</p>\n<p>Given the following:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code>&lt;input type=\"number\" min=\"20\" max=\"40\" step=\"2\"/&gt;</code></pre></div>\n<p>if <code>value &lt; 20</code>, <code>rangeUnderflow</code> will be true. When <code>true</code>, the element matches the <a href=\"$MDN_URL$/Web/CSS/:invalid\"><code>:invalid</code></a> and <a href=\"$MDN_URL$/Web/CSS/:out-of-range\"><code>:out-of-range</code></a> CSS pseudo-classes.</p>"
    },
    "validitystate.stepmismatch": {
      "url": "$MDN_URL$/web/api/validitystate/stepmismatch",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "15",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "4",
        "IE": "10",
        "Opera": "12.1",
        "Safari": "5",
        "SafariIOS": "5"
      },
      "doc": "<p>The read-only <strong><code>stepMismatch</code></strong> property of a <strong><code><a href=\"$MDN_URL$/Web/API/ValidityState\">ValidityState</a></code></strong> object indicates if the value of an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, after having been edited by the user, does not conform to the constraints set by the element's <code>step</code> attribute.</p>\n<p>If the field is numeric in nature, including the <a href=\"$MDN_URL$/Web/HTML/Element/input/date\">date</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/month\">month</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/week\">week</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/time\">time</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/datetime-local\">datetime-local</a>, <a href=\"$MDN_URL$/Web/HTML/Element/input/number\">number</a> and <a href=\"$MDN_URL$/Web/HTML/Element/input/range\">range</a> types and the step value is not <code>any</code>, if the value don't doesn't conform to the constraints set by the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/step\">step</a></code> and <code><a href=\"$MDN_URL$/Web/HTML/Attributes/min\">min</a></code> values, then <code>stepMismatch</code> will be true. If the remainder of the form control's value less the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/min\">min</a></code> value, divided by the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/step\">step</a></code> value (which defaults to 1 if omitted) is not zero, there is a mismatch. </p>\n<p>Given the following:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code>&lt;input type=\"number\" min=\"20\" max=\"40\" step=\"2\"/&gt;</code></pre></div>\n<p>if <code>(value - min) % 2 != 0</code>, <code>stepMismatch</code> will be true.</p>\n<p>If true, the element matches the <a href=\"$MDN_URL$/Web/CSS/:invalid\"><code>:invalid</code></a> and <a href=\"$MDN_URL$/Web/CSS/:out-of-range\"><code>:out-of-range</code></a> CSS pseudo-classes.</p>"
    },
    "validitystate.toolong": {
      "url": "$MDN_URL$/web/api/validitystate/toolong",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "15",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "4",
        "IE": "10",
        "Opera": "15",
        "Safari": "11",
        "SafariIOS": "5"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p><span class=\"seoSummary\">The read-only <strong><code>tooLong</code></strong> property of a <strong><code><a href=\"$MDN_URL$/Web/API/ValidityState\">ValidityState</a></code></strong> object indicates if the value of an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>, after having been edited by the user, exceeds the maximum code-unit length established by the element's <code><a href=\"$MDN_URL$/Web/HTML/Attributes/maxlength\">maxlength</a></code> attribute.</span></p>"
    },
    "validitystate.tooshort": {
      "url": "$MDN_URL$/web/api/validitystate/tooshort",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "40",
        "ChromeAndroid": "",
        "Edge": "17",
        "Firefox": "51",
        "Opera": "27",
        "Safari": "11",
        "SafariIOS": "10"
      },
      "doc": "<p>The read-only <strong><code>tooShort</code></strong> property of a <strong><code><a href=\"$MDN_URL$/Web/API/ValidityState\">ValidityState</a></code></strong> object indicates if the value of an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, <a href=\"$MDN_URL$/Web/HTML/Element/button\"><code>&lt;button&gt;</code></a>, <a href=\"$MDN_URL$/Web/HTML/Element/select\"><code>&lt;select&gt;</code></a>, <a href=\"$MDN_URL$/Web/HTML/Element/output\"><code>&lt;output&gt;</code></a>, <a href=\"$MDN_URL$/Web/HTML/Element/fieldset\"><code>&lt;fieldset&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/textarea\"><code>&lt;textarea&gt;</code></a>, after having been edited by the user, is less than the minimum code-unit length established by the element's <code>minlength</code> attribute.</p>"
    },
    "validitystate.typemismatch": {
      "url": "$MDN_URL$/web/api/validitystate/typemismatch",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "15",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "4",
        "IE": "10",
        "Opera": "12.1",
        "Safari": "5",
        "SafariIOS": "5"
      },
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>The read-only <strong><code>typeMismatch</code></strong> property of a <strong><code><a href=\"$MDN_URL$/Web/API/ValidityState\">ValidityState</a></code></strong> object indicates if the value of an <a href=\"$MDN_URL$/Web/HTML/Element/input\"><code>&lt;input&gt;</code></a>, after having been edited by the user, does not conform to the constraints set by the element's <code><a href=\"$MDN_URL$/Web/HTML/Element/input#input_types\">type</a></code> attribute.\n<p>If the <code>type</code> attribute expects specific strings, such as the <a href=\"$MDN_URL$/Web/HTML/Element/input/email\">email</a> and <a href=\"$MDN_URL$/Web/HTML/Element/input/url\">url</a> types and the value don't doesn't conform to the constraints set by the type, the <code>typeMismatch</code> property will be true.</p>\n<p>The <a href=\"$MDN_URL$/Web/HTML/Element/input/email\">email</a> input type expects one or more valid email addresses, depending on whether the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/multiple\">multiple</a></code> attribute is present. A valid email address includes an email prefix and a domain, with or without a top level domain. If the value of the email input is not an empty string, a single valid e-mail address, or one or more comma separated email address if the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/multiple\">multiple</a></code> attribute is present, there is a <code>typeMismatch</code>.</p>\n<p>The <a href=\"$MDN_URL$/Web/HTML/Element/input/url\">url</a> input type expects one or more valid email URLs, depending on whether the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/multiple\">multiple</a></code> attribute is present. A valid URL includes a protocol, optionally with an IP address, or  an optional subdomain, domain, and top level domain combination. If the value of the URL input is not an empty string, a single valid URL, or one or more comma separated URLS if the <code><a href=\"$MDN_URL$/Web/HTML/Attributes/multiple\">multiple</a></code> attribute is present, there is a <code>typeMismatch</code>.</p>\n<table class=\"standard-table\">\n<caption> <code>type</code> attribute conformance</caption>\n<thead>\n<tr>\n<th>Input type</th>\n<th>Value</th>\n<th>Expected value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"$MDN_URL$/Web/HTML/Element/input/email\">email</a></td>\n<td><code>x@y</code> or <code>x@y.z</code></td>\n<td>email address, with or without <a href=\"$MDN_URL$/Glossary/TLD\">TLD</a></td>\n</tr>\n<tr>\n<td><a href=\"$MDN_URL$/Web/HTML/Element/input/url\">url</a></td>\n<td><code>x:</code> or <code>x://y.z</code></td>\n<td>protocol or full URL with protocol</td>\n</tr>\n</tbody>\n</table>"
    },
    "videoconfiguration": {
      "url": "$MDN_URL$/web/api/videoconfiguration",
      "doc": "<p>The <strong><code>VideoConfiguration</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/Media_Capabilities_API\">Media Capabilities API</a> is used to define the video file being tested when calling the <a href=\"$MDN_URL$/Web/API/MediaCapabilities\"><code>MediaCapabilities</code></a> methods <a href=\"$MDN_URL$/Web/API/MediaCapabilities/encodingInfo\" ><code>encodingInfo()</code></a> and <a href=\"$MDN_URL$/Web/API/MediaCapabilities/decodingInfo\" ><code>decodingInfo()</code></a> to determine whether or not the described video configuration is supported, and how smoothly and how smoooth and power-efficient it can be handled.</p>"
    },
    "videoplaybackquality": {
      "url": "$MDN_URL$/web/api/videoplaybackquality",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "23",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "42",
        "IE": "11",
        "Opera": "15",
        "Safari": "8"
      },
      "doc": "<p><span class=\"seoSummary\">A <code><strong>VideoPlaybackQuality</strong></code> object is returned by the <a href=\"$MDN_URL$/Web/API/HTMLVideoElement/getVideoPlaybackQuality\"><code>HTMLVideoElement.getVideoPlaybackQuality()</code></a> method and contains metrics that can be used to determine the playback quality of a video.</span></p>"
    },
    "videoplaybackquality.corruptedvideoframes": {
      "url": "$MDN_URL$/web/api/videoplaybackquality/corruptedvideoframes",
      "status": [
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "80",
        "ChromeAndroid": "80",
        "Edge": "",
        "IE": "11",
        "Opera": "67",
        "Safari": "8"
      },
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a> interface's read-only\n<code><strong>corruptedVideoFrames</strong></code> property the number of corrupted\nvideo frames that have been received since the <a href=\"$MDN_URL$/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element was\nlast loaded or reloaded.</span></p>"
    },
    "videoplaybackquality.creationtime": {
      "url": "$MDN_URL$/web/api/videoplaybackquality/creationtime",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "23",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "42",
        "IE": "11",
        "Opera": "15",
        "Safari": "8"
      },
      "doc": "<p>The read-only <strong><code>creationTime</code></strong> property on the\n<a href=\"$MDN_URL$/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a> interface reports the number of milliseconds since\nthe browsing context was created this quality sample was recorded.</p>"
    },
    "videoplaybackquality.droppedvideoframes": {
      "url": "$MDN_URL$/web/api/videoplaybackquality/droppedvideoframes",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "23",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "42",
        "IE": "11",
        "Opera": "15",
        "Safari": "8"
      },
      "doc": "<br>\n<span class=\"seoSummary\">The read-only <code><strong>droppedVideoFrames</strong></code>\nproperty of the <a href=\"$MDN_URL$/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a> interface returns the number of\nvideo frames which have been dropped rather than being displayed since the last time\nthe media was loaded into the <a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>.</span>"
    },
    "videoplaybackquality.totalframedelay": {
      "url": "$MDN_URL$/web/api/videoplaybackquality/totalframedelay",
      "status": [
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "23",
        "ChromeAndroid": "25",
        "Edge": "",
        "IE": "11",
        "Opera": "15",
        "Safari": "8"
      },
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>VideoPlaybackQuality.totalFrameDelay</code></strong> read-only\nproperty returns a <code>double</code> containing the sum of the frame delay since the\ncreation of the associated <a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>. The frame delay is the\ndifference between a frame's theoretical presentation time and its effective display\ntime.</p>"
    },
    "videoplaybackquality.totalvideoframes": {
      "url": "$MDN_URL$/web/api/videoplaybackquality/totalvideoframes",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "23",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "42",
        "IE": "11",
        "Opera": "15",
        "Safari": "8"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/VideoPlaybackQuality\"><code>VideoPlaybackQuality</code></a> interface's\n<code><strong>totalVideoFrames</strong></code> read-only property returns the total\nnumber of video frames that have been displayed or dropped since the media was\nloaded.</span></p>"
    },
    "videotrack": {
      "url": "$MDN_URL$/web/api/videotrack",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/VideoTrack\" aria-current=\"page\"><code>VideoTrack</code></a> interface represents a single video track from a <a href=\"$MDN_URL$/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element.</span> The most common use for accessing a <code>VideoTrack</code> object is to toggle its <a href=\"$MDN_URL$/Web/API/VideoTrack/selected\" ><code>selected</code></a> property in order to make it the active video track for its <a href=\"$MDN_URL$/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element.</p>"
    },
    "videotrack.id": {
      "url": "$MDN_URL$/web/api/videotrack/id",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>id</strong></code> property contains a\nstring which uniquely identifies the track represented by the\n<strong><a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a></strong>.</span> This ID can be used with the\n<a href=\"$MDN_URL$/Web/API/VideoTrackList/getTrackById\"><code>VideoTrackList.getTrackById()</code></a> method to locate a specific track within\nthe media associated with a media element.</p>\n<p>The track ID can also be used as the fragment of a URL that loads the specific track\n(if the media supports media fragments).</p>"
    },
    "videotrack.kind": {
      "url": "$MDN_URL$/web/api/videotrack/kind",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>kind</code></strong> property contains a\nstring indicating the category of video contained in the\n<strong><a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a></strong>.</span> The <code>kind</code> can be used\nto determine the scenarios in which specific tracks should be enabled or disabled. See\n<a href=\"#video_track_kind_strings\">Video track kind strings</a> for a list of the kinds available for video tracks.</p>"
    },
    "videotrack.label": {
      "url": "$MDN_URL$/web/api/videotrack/label",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a></strong>\nproperty <code><strong>label</strong></code> returns a string specifying the video\ntrack's human-readable label, if one is available; otherwise, it returns an empty\nstring.</span></p>"
    },
    "videotrack.language": {
      "url": "$MDN_URL$/web/api/videotrack/language",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a></strong>\nproperty <strong><code>language</code></strong> returns a string identifying the\nlanguage used in the video track.</span> For tracks that include multiple languages\n(such as a movie in English in which a few lines are spoken in other languages), this\nshould be the video's primary language.</p>"
    },
    "videotrack.selected": {
      "url": "$MDN_URL$/web/api/videotrack/selected",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a></strong> property\n<code><strong>selected</strong></code> controls whether or not a particular video\ntrack is active.</span></p>"
    },
    "videotrack.sourcebuffer": {
      "url": "$MDN_URL$/web/api/videotrack/sourcebuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Safari": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a></strong>\nproperty <strong><code>sourceBuffer</code></strong> returns the\n<a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> that created the track, or null if the track was not\ncreated by a <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> or the <a href=\"$MDN_URL$/Web/API/SourceBuffer\"><code>SourceBuffer</code></a> has been\nremoved from the <a href=\"$MDN_URL$/Web/API/MediaSource/sourceBuffers\"><code>MediaSource.sourceBuffers</code></a> attribute of its parent\nmedia source.</span></p>"
    },
    "videotracklist": {
      "url": "$MDN_URL$/web/api/videotracklist",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>VideoTrackList</code></strong> interface is used to represent a list of the video tracks contained within a <a href=\"$MDN_URL$/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> element, with each track represented by a separate <a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a> object in the list.</span></p>\n<p>Retrieve an instance of this object with <a href=\"$MDN_URL$/Web/API/HTMLMediaElement/videoTracks\"><code>HTMLMediaElement.videoTracks</code></a>. The individual tracks can be accessed using array syntax or functions such as <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array/forEach\"><code>forEach()</code></a> for example.</p>"
    },
    "videotracklist.gettrackbyid": {
      "url": "$MDN_URL$/web/api/videotracklist/gettrackbyid",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/VideoTrackList\"><code>VideoTrackList</code></a></strong> method\n<strong><code>getTrackById()</code></strong> returns the first\n<a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a> object from the track list whose <a href=\"$MDN_URL$/Web/API/VideoTrack/id\" ><code>id</code></a> matches the specified string.</span> This lets you find a specified track if\nyou know its ID string.</p>",
      "parameters": {
        "id": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> indicating the ID of the track to locate within the track list."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a> object indicating the first track found within the\n  <code>VideoTrackList</code> whose <code>id</code> matches the specified string. If no\n  match is found, this method returns <code>null</code>.</p>\n\n<p>The tracks are searched in their natural order; that is, in the order defined by the\n  media resource itself, or, if the resource doesn't define an order, the relative order\n  in which the tracks are declared by the media resource.</p>"
    },
    "videotracklist.length": {
      "url": "$MDN_URL$/web/api/videotracklist/length",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/VideoTrackList\"><code>VideoTrackList</code></a></strong>\nproperty <code><strong>length</strong></code> returns the number of entries in the\n<code>VideoTrackList</code>, each of which is a <a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a> representing\none video track in the media element.</span> A value of 0 indicates that there are no\nvideo tracks in the media.</p>"
    },
    "videotracklist.onaddtrack": {
      "url": "$MDN_URL$/web/api/videotracklist/onaddtrack",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/VideoTrackList\"><code>VideoTrackList</code></a></strong> property\n<strong><code>onaddtrack</code></strong> is an event handler which is called when the\n<code><a href=\"$MDN_URL$/Web/API/VideoTrackList/addtrack_event\" >addtrack</a></code> event occurs, indicating that a new video track has been added\nto the media element whose video tracks the <code>VideoTrackList</code>\nrepresents.</span></p>\n<p>The event is passed into the event handler in the form of a <a href=\"$MDN_URL$/Web/API/TrackEvent\"><code>TrackEvent</code></a>\nobject, whose <a href=\"$MDN_URL$/Web/API/TrackEvent/track\" ><code>track</code></a> property identifies the\nnewly-added track.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> You can also add a handler for the <code>addtrack</code> event\nusing <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\" ><code>addEventListener()</code></a>.</p>\n</div>"
    },
    "videotracklist.onchange": {
      "url": "$MDN_URL$/web/api/videotracklist/onchange",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/VideoTrackList\"><code>VideoTrackList</code></a></strong> property\n<strong><code>onchange</code></strong> is an event handler which is called when the\n<code><a href=\"$MDN_URL$/Web/API/HTMLElement/change_event\" >change</a></code> event occurs, indicating that a <a href=\"$MDN_URL$/Web/API/VideoTrack\"><code>VideoTrack</code></a> in the\n<code>VideoTrackList</code> has been made active.</span></p>\n<p>The event is passed into the event handler in the form of an <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a>\nobject; the event doesn't provide any additional information. To determine the new state\nof media's tracks, you'll have to look at their <a href=\"$MDN_URL$/Web/API/VideoTrack/selected\"><code>VideoTrack.selected</code></a>\nflags.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> You can also add a handler for the <code>change</code> event\nusing <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\" ><code>addEventListener()</code></a>.</p>\n</div>"
    },
    "videotracklist.onremovetrack": {
      "url": "$MDN_URL$/web/api/videotracklist/onremovetrack",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><a href=\"$MDN_URL$/Web/API/VideoTrackList\"><code>VideoTrackList</code></a></strong>\n<strong><code>onremovetrack</code></strong> event handler is called when the\n<code><a href=\"$MDN_URL$/Web/API/VideoTrackList/removetrack_event\" >removetrack</a></code> event occurs, indicating that a video track has been removed\nfrom the media element, and therefore also from the\n<code>VideoTrackList</code>.</span></p>\n<p>The event is passed into the event handler in the form of a <a href=\"$MDN_URL$/Web/API/TrackEvent\"><code>TrackEvent</code></a>\nobject, whose <a href=\"$MDN_URL$/Web/API/TrackEvent/track\" ><code>track</code></a> property identifies the track\nthat was removed from the media element's <code>VideoTrackList</code>.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> You can also add a handler for the <code>removetrack</code>\nevent using <a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\" ><code>addEventListener()</code></a>.</p>\n</div>"
    },
    "videotracklist.selectedindex": {
      "url": "$MDN_URL$/web/api/videotracklist/selectedindex",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "10",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><a href=\"$MDN_URL$/Web/API/VideoTrackList\"><code>VideoTrackList</code></a></strong>\nproperty <code><strong>selectedIndex</strong></code> returns the index of the\ncurrently selected track, if any, or <code>-1</code> otherwise.</span></p>"
    },
    "visualviewport": {
      "url": "$MDN_URL$/web/api/visualviewport",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<p>The <strong><code>VisualViewport</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Visual_Viewport_API\">Visual Viewport API</a> represents the visual viewport for a given window. For a page containing iframes, each iframe, as well as the containing page, will have a unique window object. Each window on a page will have a unique <code>VisualViewport</code> representing the properties associated with that window.</p>\n<p>You can get a window's visual viewport using <a href=\"$MDN_URL$/Web/API/Window/visualViewport\"><code>Window.visualViewport</code></a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Only the top-level window has a visual viewport that's distinct from the layout viewport. Therefore, it's generally only the <code>VisualViewport</code> object of the top-level window that's useful. For an <a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>, visual viewport metrics like <a href=\"$MDN_URL$/Web/API/VisualViewport/width\"><code>VisualViewport.width</code></a> always correspond to layout viewport metrics like <a href=\"$MDN_URL$/Web/API/Element/clientWidth\" ><code>document.documentElement.clientWidth</code></a>.</p>\n</div>"
    },
    "visualviewport.height": {
      "url": "$MDN_URL$/web/api/visualviewport/height",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<p>The <strong><code>height</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/VisualViewport\"><code>VisualViewport</code></a> interface returns the height of the visual viewport, in\nCSS pixels.</p>"
    },
    "visualviewport.offsetleft": {
      "url": "$MDN_URL$/web/api/visualviewport/offsetleft",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<p>The <strong><code>offsetLeft</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/VisualViewport\"><code>VisualViewport</code></a> interface returns the offset of the left edge of the\nvisual viewport from the left edge of the layout viewport in CSS pixels.</p>"
    },
    "visualviewport.offsettop": {
      "url": "$MDN_URL$/web/api/visualviewport/offsettop",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<p>The <strong><code>offsetTop</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/VisualViewport\"><code>VisualViewport</code></a> interface returns the offset of the top edge of the visual\nviewport from the top edge of the layout viewport in CSS pixels.</p>"
    },
    "visualviewport.onresize": {
      "url": "$MDN_URL$/web/api/visualviewport/onresize",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "62",
        "ChromeAndroid": "62",
        "Edge": "79",
        "Opera": "49",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>onresize</code></strong> event handler of\nthe <a href=\"$MDN_URL$/Web/API/VisualViewport\"><code>VisualViewport</code></a> interface is called when a viewport is resized, i.e.\nwhen the\n<code><a href=\"$MDN_URL$/Web/API/VisualViewport/resize_event\">resize</a></code> event\nis fired.</p>"
    },
    "visualviewport.onscroll": {
      "url": "$MDN_URL$/web/api/visualviewport/onscroll",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "62",
        "ChromeAndroid": "62",
        "Edge": "79",
        "Opera": "49",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>onscroll</code></strong> event handler of\nthe <a href=\"$MDN_URL$/Web/API/VisualViewport\"><code>VisualViewport</code></a> interface is called when a viewport is scrolled, i.e.\nwhen the\n<code><a href=\"$MDN_URL$/Web/API/VisualViewport/scroll_event\">scroll</a></code> event\nis fired.</p>"
    },
    "visualviewport.pageleft": {
      "url": "$MDN_URL$/web/api/visualviewport/pageleft",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<p>The <strong><code>pageLeft</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/VisualViewport\"><code>VisualViewport</code></a> interface returns the x coordinate of the left edge of the\nvisual viewport relative to the initial containing block origin, in CSS pixels.</p>"
    },
    "visualviewport.pagetop": {
      "url": "$MDN_URL$/web/api/visualviewport/pagetop",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<p>The <strong><code>pageTop</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/VisualViewport\"><code>VisualViewport</code></a> interface returns the y coordinate of the top edge of the\nvisual viewport relative to the initial containing block origin, in CSS pixels.</p>"
    },
    "visualviewport.scale": {
      "url": "$MDN_URL$/web/api/visualviewport/scale",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<p>The <strong><code>scale</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/VisualViewport\"><code>VisualViewport</code></a> interface returns the pinch-zoom scaling factor applied\nto the visual viewport.</p>"
    },
    "visualviewport.width": {
      "url": "$MDN_URL$/web/api/visualviewport/width",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<p>The <strong><code>width</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/VisualViewport\"><code>VisualViewport</code></a> interface returns the width of the visual viewport, in CSS\npixels.</p>"
    },
    "vrdisplay": {
      "url": "$MDN_URL$/web/api/vrdisplay",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>VRDisplay</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebVR_API\">WebVR API</a> represents any VR device supported by this API. It includes generic information such as device IDs and descriptions, as well as methods for starting to present a VR scene, retrieving eye parameters and display capabilities, and other important functionality.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This interface was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>An array of all connected VR Devices can be returned by invoking the <a href=\"$MDN_URL$/Web/API/Navigator/getVRDisplays\"><code>Navigator.getVRDisplays()</code></a> method.</p>"
    },
    "vrdisplay.cancelanimationframe": {
      "url": "$MDN_URL$/web/api/vrdisplay/cancelanimationframe",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>cancelAnimationFrame()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface is a special implementation of <a href=\"$MDN_URL$/Web/API/Window/cancelAnimationFrame\"><code>Window.cancelAnimationFrame</code></a> that unregisters callbacks registered with <a href=\"$MDN_URL$/Web/API/VRDisplay/requestAnimationFrame\"><code>VRDisplay.requestAnimationFrame()</code></a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>",
      "parameters": {
        "handle": "The handle returned by the <a href=\"$MDN_URL$/Web/API/VRDisplay/requestAnimationFrame\"><code>VRDisplay.requestAnimationFrame()</code></a> call that you want to unregister."
      },
      "returns": "<p>Void.</p>"
    },
    "vrdisplay.capabilities": {
      "url": "$MDN_URL$/web/api/vrdisplay/capabilities",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>capabilities</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/VRDisplayCapabilities\"><code>VRDisplayCapabilities</code></a> object that indicates the various capabilities of the <code>VRDisplay</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplay.depthfar": {
      "url": "$MDN_URL$/web/api/vrdisplay/depthfar",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>depthFar</strong></code> property of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface gets and sets the z-depth defining the far plane of the <a href=\"https://en.wikipedia.org/wiki/Viewing_frustum\" class=\"external\" rel=\" noopener\">eye view frustum</a>, i.e. the furthest viewable boundary of the scene.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>Generally you should leave the value as is, but you might want to reduce it if you are trying to improve performance on slower computers.</p>"
    },
    "vrdisplay.depthnear": {
      "url": "$MDN_URL$/web/api/vrdisplay/depthnear",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>depthNear</strong></code> property of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface gets and sets the z-depth defining the near plane of the <a href=\"https://en.wikipedia.org/wiki/Viewing_frustum\" class=\"external\" rel=\" noopener\">eye view frustum</a>, i.e. the nearest viewable boundary of the scene.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>Generally you should leave the value as is, but you might want to increase it if you are trying to improve performance on slower computers, and/or your UI makes sense with the near boundary made further away.</p>"
    },
    "vrdisplay.displayid": {
      "url": "$MDN_URL$/web/api/vrdisplay/displayid",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>displayId</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns an identifier for this particular <code>VRDisplay</code>, which is also used as an association point in the <a href=\"$MDN_URL$/Web/API/Gamepad_API\">Gamepad API</a> (see <a href=\"$MDN_URL$/Web/API/Gamepad/displayId\"><code>Gamepad.displayId</code></a>).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplay.displayname": {
      "url": "$MDN_URL$/web/api/vrdisplay/displayname",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>displayName</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns a human-readable name to identify the <code>VRDisplay</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This will generally be something like \"Oculus VR HMD (HMD)\" or \"Oculus VR HMD (Sensor)\".</p>"
    },
    "vrdisplay.exitpresent": {
      "url": "$MDN_URL$/web/api/vrdisplay/exitpresent",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>exitPresent()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface stops the <code>VRDisplay</code> presenting a scene.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>",
      "returns": "<p>A promise that resolves once the presentation has ended. If the <code>VRDisplay</code> is not presenting when <code>exitPresent()</code> is called, the promise will reject.</p>"
    },
    "vrdisplay.geteyeparameters": {
      "url": "$MDN_URL$/web/api/vrdisplay/geteyeparameters",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>getEyeParameters()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/VREyeParameters\"><code>VREyeParameters</code></a> object containing the eye parameters for the specified eye.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>",
      "parameters": {
        "whichEye": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the eye you want to return the eye parameters for. Available values are <code>left</code> and <code>right</code> (defined in the <a href=\"https://w3c.github.io/webvr/spec/1.1/#interface-vreye\" class=\"external\" rel=\" noopener\">VREye enum</a> )."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/VREyeParameters\"><code>VREyeParameters</code></a> object, or null if the VR is not able to present content (e.g. <a href=\"$MDN_URL$/Web/API/VRDisplayCapabilities/canPresent\"><code>VRDisplayCapabilities.canPresent</code></a> returns <code>false</code>).</p>"
    },
    "vrdisplay.getframedata": {
      "url": "$MDN_URL$/web/api/vrdisplay/getframedata",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>getFrameData()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface accepts a <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> object and populates it with the information required to render the current frame.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This includes the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> and view and projection matrices for the current frame.</p>",
      "parameters": {
        "frameData": "The <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> object you want to populate."
      },
      "returns": "<p>A boolean value — a value of <code>true</code> is returned if the <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> object was successfully populated, or <code>false</code> if it wasn't.</p>"
    },
    "vrdisplay.getimmediatepose": {
      "url": "$MDN_URL$/web/api/vrdisplay/getimmediatepose",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>getImmediatePose()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> object defining the current pose of the <code>VRDisplay</code>, with no prediction applied.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> object.</p>"
    },
    "vrdisplay.getlayers": {
      "url": "$MDN_URL$/web/api/vrdisplay/getlayers",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>getLayers()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns the layers currently being presented by the <code>VRDisplay</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>",
      "returns": "<p>If the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> is presenting, this method returns an array of the <a href=\"$MDN_URL$/Web/API/VRLayerInit\"><code>VRLayerInit</code></a> objects currently being presented (this will currently be one, as <a href=\"$MDN_URL$/Web/API/VRDisplayCapabilities/maxLayers\"><code>VRDisplayCapabilities.maxLayers</code></a> is currently always 1). If the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> is not presenting, this method returns an empty array.</p>"
    },
    "vrdisplay.getpose": {
      "url": "$MDN_URL$/web/api/vrdisplay/getpose",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>getPose()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> object defining the future predicted pose of the <code>VRDisplay</code> as it will be when the current frame is actually presented.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n<p>It was evendeprecated there — instead, you should use <a href=\"$MDN_URL$/Web/API/VRDisplay/getFrameData\"><code>VRDisplay.getFrameData()</code></a>, which also provides a <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> object.</p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> object.</p>"
    },
    "vrdisplay.hardwareunitid": {
      "url": "$MDN_URL$/web/api/vrdisplay/hardwareunitid",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>hardwareUnitId</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns the distinct hardware ID for the overall hardware unit that this <code>VRDevice</code> is a part of. All devices that are part of the same physical piece of hardware will have the same <code>hardwareUnitId</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplay.isconnected": {
      "url": "$MDN_URL$/web/api/vrdisplay/isconnected",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>isConnected</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns a boolean value indicating whether the <code>VRDisplay</code> is connected to the computer.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplay.ispresenting": {
      "url": "$MDN_URL$/web/api/vrdisplay/ispresenting",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>isPresenting</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns a boolean value indicating whether the <code>VRDisplay</code> is currently having content presented through it.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplay.requestanimationframe": {
      "url": "$MDN_URL$/web/api/vrdisplay/requestanimationframe",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>requestAnimationFrame()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface is a special implementation of <a href=\"$MDN_URL$/Web/API/window/requestAnimationFrame\"><code>Window.requestAnimationFrame</code></a> containing a callback function that will be called every time a new frame of the <code>VRDisplay</code> presentation is rendered:</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<ul>\n<li>When the <code>VRDisplay</code> is not presenting a scene, this is functionally equivalent to <a href=\"$MDN_URL$/Web/API/window/requestAnimationFrame\"><code>Window.requestAnimationFrame</code></a>.</li>\n<li>When the <code>VRDisplay</code> is presenting, the callback is called at its native refresh rate.</li>\n</ul>",
      "parameters": {
        "callback": "A callback function that will be called every time a new frame of the <code>VRDisplay</code> presentation is rendered."
      },
      "returns": "<p>A long representing the handle of the <code>requestAnimationFrame()</code> call. This can then be passed to a <a href=\"$MDN_URL$/Web/API/VRDisplay/cancelAnimationFrame\"><code>VRDisplay.cancelAnimationFrame()</code></a> call to unregister the callback.</p>"
    },
    "vrdisplay.requestpresent": {
      "url": "$MDN_URL$/web/api/vrdisplay/requestpresent",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>requestPresent()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface starts the <code>VRDisplay</code> presenting a scene.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>",
      "parameters": {
        "layers": "An array of <a href=\"$MDN_URL$/Web/API/VRLayerInit\"><code>VRLayerInit</code></a> objects representing the scene you want to present. At the moment, this can be a minimum of 0 and a maximum of 1."
      },
      "returns": "<p>A promise that resolves once the presentation has begun. there are a number of rules surrounding the promise's fulfillment or rejection:</p>\n\n<ul>\n <li>If <a href=\"$MDN_URL$/Web/API/VRDisplayCapabilities/canPresent\"><code>VRDisplayCapabilities.canPresent</code></a> is false, or if the VRLayer array contains more than <a href=\"$MDN_URL$/Web/API/VRDisplayCapabilities/maxLayers\"><code>VRDisplayCapabilities.maxLayers</code></a> layers, the promise will be rejected.</li>\n <li>If the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> is already presenting when <code>requestPresent()</code> is called, the <code>VRDisplay</code> will update the <code>VRLayer</code> array being presented.</li>\n <li>If a call to <code>requestPresent()</code> is rejected while the <code>VRDisplay</code> is already presenting it will end its presentation.</li>\n <li>If <code>requestPresent()</code> is called outside of an engagement gesture the promise will be rejected unless the <code>VRDisplay</code> was already presenting. This engagement gesture is also sufficient to allow <code><a href=\"$MDN_URL$/Web/API/Element/requestPointerLock\">requestPointerLock()</a></code> calls until presentation has ended.</li>\n</ul>"
    },
    "vrdisplay.resetpose": {
      "url": "$MDN_URL$/web/api/vrdisplay/resetpose",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>resetPose()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface resets the pose for the <code>VRDisplay</code>, treating its current <a href=\"$MDN_URL$/Web/API/VRPose/position\"><code>VRPose.position</code></a> and <a href=\"$MDN_URL$/Web/API/VRPose/orientation\"><code>VRPose.orientation</code></a> as the \"origin/zero\" values.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>After <code>resetPost()</code> has been called, future poses returned from <a href=\"$MDN_URL$/Web/API/VRDisplay/getPose\"><code>VRDisplay.getPose()</code></a>/<a href=\"$MDN_URL$/Web/API/VRDisplay/getImmediatePose\"><code>VRDisplay.getImmediatePose()</code></a> will describe positions relative to the <code>VRDisplay</code>'s position when <code>resetPose()</code> was last called and will treat the display’s yaw when <code>resetPose()</code> was last called as the forward orientation.</p>\n<p>The VRDisplay's reported roll and pitch do not change when <code>resetPose()</code> is called as they are relative to gravity. Calling <code>resetPose()</code> may change the <a href=\"$MDN_URL$/Web/API/VRStageParameters/sittingToStandingTransform\"><code>VRStageParameters.sittingToStandingTransform</code></a> matrix.</p>",
      "returns": "<p>Void.</p>"
    },
    "vrdisplay.stageparameters": {
      "url": "$MDN_URL$/web/api/vrdisplay/stageparameters",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>stageParameters</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/VRStageParameters\"><code>VRStageParameters</code></a> object containing room-scale parameters, if the <code>VRDisplay</code> is capable of supporting room-scale experiences.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplay.submitframe": {
      "url": "$MDN_URL$/web/api/vrdisplay/submitframe",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>submitFrame()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> interface captures the current state of the <a href=\"$MDN_URL$/Web/API/VRLayerInit\"><code>VRLayerInit</code></a> currently being presented and displays it on the <code>VRDisplay</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This method was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The frame should subsequently be rendered using the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> and matrices provided by the last call to <a class=\"page-not-created\"  ><code>getFrameData()</code></a>.</p>",
      "returns": "<p>Void.</p>"
    },
    "vrdisplaycapabilities": {
      "url": "$MDN_URL$/web/api/vrdisplaycapabilities",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>VRDisplayCapabilities</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebVR_API\">WebVR API</a> describes the capabilities of a <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> — its features can be used to perform VR device capability tests, for example can it return position information.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This interface was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This interface is accessible through the <a href=\"$MDN_URL$/Web/API/VRDisplay/capabilities\"><code>VRDisplay.capabilities</code></a> property.</p>"
    },
    "vrdisplaycapabilities.canpresent": {
      "url": "$MDN_URL$/web/api/vrdisplaycapabilities/canpresent",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>canPresent</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplayCapabilities\"><code>VRDisplayCapabilities</code></a> interface returns a boolean value stating whether the VR display is capable of presenting content (e.g. through an HMD).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This is useful for identifying \"magic window\" devices that are capable of 6DoF tracking but for which <a href=\"$MDN_URL$/Web/API/VRDisplay/requestPresent\"><code>VRDisplay.requestPresent()</code></a> is not meaningful. If <code>canPresent</code> is <code>false</code>, calls to <a href=\"$MDN_URL$/Web/API/VRDisplay/requestPresent\"><code>VRDisplay.requestPresent()</code></a> will fail, and <a href=\"$MDN_URL$/Web/API/VRDisplay/getEyeParameters\"><code>VRDisplay.getEyeParameters()</code></a> will return <code>null</code>.</p>"
    },
    "vrdisplaycapabilities.hasexternaldisplay": {
      "url": "$MDN_URL$/web/api/vrdisplaycapabilities/hasexternaldisplay",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The <strong><code>hasExternalDisplay</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplayCapabilities\"><code>VRDisplayCapabilities</code></a> interface returns <code>true</code> if the VR display is separate from the device's primary display.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: If presenting VR content would obscure other content on the device, this will return <code>false</code>, in which case the application should not attempt to mirror VR content or update non-VR UI because that content will not be visible.</p>\n</div>"
    },
    "vrdisplaycapabilities.hasorientation": {
      "url": "$MDN_URL$/web/api/vrdisplaycapabilities/hasorientation",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>hasOrientation</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplayCapabilities\"><code>VRDisplayCapabilities</code></a> interface returns <code>true</code> if the VR display can track and return orientation information.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplaycapabilities.hasposition": {
      "url": "$MDN_URL$/web/api/vrdisplaycapabilities/hasposition",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>hasPosition</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplayCapabilities\"><code>VRDisplayCapabilities</code></a> interface returns <code>true</code> if the VR display can track and return position information.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplaycapabilities.maxlayers": {
      "url": "$MDN_URL$/web/api/vrdisplaycapabilities/maxlayers",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>maxLayers</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplayCapabilities\"><code>VRDisplayCapabilities</code></a> interface returns a number indicating the maximum number of <a href=\"$MDN_URL$/Web/API/VRLayerInit\"><code>VRLayerInit</code></a>s that the VR display can present at once (e.g. the maximum length of the array that <a class=\"page-not-created\"  ><code>Display.requestPresent()</code></a> can accept.)</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplayevent": {
      "url": "$MDN_URL$/web/api/vrdisplayevent",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>VRDisplayEvent</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebVR_API\">WebVR API</a> represents the event object of WebVR-related events (see the<a href=\"$MDN_URL$/Web/API/WebVR_API#window\"> list of WebVR window extensions</a>).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This interface was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplayevent.display": {
      "url": "$MDN_URL$/web/api/vrdisplayevent/display",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>display</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> associated with this event.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplayevent.reason": {
      "url": "$MDN_URL$/web/api/vrdisplayevent/reason",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>reason</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a> interface returns a human-readable reason why the event was fired.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrdisplayevent.vrdisplayevent": {
      "url": "$MDN_URL$/web/api/vrdisplayevent/vrdisplayevent",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>VRDisplayEvent()</code></strong> constructor creates a <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a> object instance.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This constructor was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>",
      "parameters": {
        "type": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> describing the type of event object you want to create.",
        "eventInitDict": "A object containing initialization options to use when creating the constructor. These are: <dl> <dt><code>display</code></dt> <dd>A property containing the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> the event is to be associated with.</dd> <dt><code>reason</code></dt> <dd>A property containing a string representing the human-readable reason why the event is to be fired (see <a href=\"$MDN_URL$/Web/API/VRDisplayEvent/reason\"><code>VRDisplayEvent.reason</code></a>).</dd> </dl>"
      }
    },
    "vreyeparameters": {
      "url": "$MDN_URL$/web/api/vreyeparameters",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>VREyeParameters</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebVR_API\">WebVR API</a> represents all the information required to correctly render a scene for a given eye, including field of view information.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This interface was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This interface is accessible through the <a href=\"$MDN_URL$/Web/API/VRDisplay/getEyeParameters\"><code>VRDisplay.getEyeParameters()</code></a> method.</p>\n<div class=\"notecard warning\">\n<p><strong>Warning:</strong> The values in this interface should not be used to compute view or projection matrices. In order to ensure the widest possible hardware compatibility use the matrices provided by <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a>.</p>\n</div>"
    },
    "vreyeparameters.fieldofview": {
      "url": "$MDN_URL$/web/api/vreyeparameters/fieldofview",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>fieldOfView</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VREyeParameters\"><code>VREyeParameters</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/VRFieldOfView\"><code>VRFieldOfView</code></a> object <dfn>describing t</dfn>he current field of view for the eye, which can vary as the user adjusts their interpupillary distance (IPD).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vreyeparameters.maximumfieldofview": {
      "url": "$MDN_URL$/web/api/vreyeparameters/maximumfieldofview",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>maximumFieldOfView</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VREyeParameters\"><code>VREyeParameters</code></a> interface describes the maximum supported field of view for the current eye.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vreyeparameters.minimumfieldofview": {
      "url": "$MDN_URL$/web/api/vreyeparameters/minimumfieldofview",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>minimumFieldOfView</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VREyeParameters\"><code>VREyeParameters</code></a> interface describes the minimum supported field of view for the current eye.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vreyeparameters.offset": {
      "url": "$MDN_URL$/web/api/vreyeparameters/offset",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>offset</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VREyeParameters\"><code>VREyeParameters</code></a> interface <dfn>r</dfn><dfn>epresents the o</dfn>ffset from the center point between the user's eyes to the center of the eye, measured in meters.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This value should represent half the user’s interpupillary distance (IPD), but may also represent the distance from the center point of the headset to the center point of the lens for the given eye.</p>"
    },
    "vreyeparameters.recommendedfieldofview": {
      "url": "$MDN_URL$/web/api/vreyeparameters/recommendedfieldofview",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>recommendedFieldOfView</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VREyeParameters\"><code>VREyeParameters</code></a> interface describes the recommended field of view for the current eye — ideally based on user calibration.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vreyeparameters.renderheight": {
      "url": "$MDN_URL$/web/api/vreyeparameters/renderheight",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>renderHeight</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VREyeParameters\"><code>VREyeParameters</code></a> interface describes the recommended render target height of each eye viewport, in pixels.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This is already in device pixel units, so there's no need to multiply by <a href=\"$MDN_URL$/Web/API/Window/devicePixelRatio\">Window.devicePixelRatio</a> before setting to <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement/height\">HTMLCanvasElement.height.</a></p>"
    },
    "vreyeparameters.renderrect": {
      "url": "$MDN_URL$/web/api/vreyeparameters/renderrect",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>renderRect</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/VREyeParameters\"><code>VREyeParameters</code></a> interface <dfn>specifies</dfn> the viewport of a canvas into which visuals for the current eye should be rendered.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vreyeparameters.renderwidth": {
      "url": "$MDN_URL$/web/api/vreyeparameters/renderwidth",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>renderWidth</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VREyeParameters\"><code>VREyeParameters</code></a> interface describes the recommended render target width of each eye viewport, in pixels.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This is already in device pixel units, so there's no need to multiply by <a href=\"$MDN_URL$/Web/API/Window/devicePixelRatio\">Window.devicePixelRatio</a> before setting to <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement/width\">HTMLCanvasElement.width.</a></p>"
    },
    "vrfieldofview": {
      "url": "$MDN_URL$/web/api/vrfieldofview",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>VRFieldOfView</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebVR_API\">WebVR API</a> represents a field of view defined by 4 different degree values describing the view from a center point.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This interface was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrfieldofview.downdegrees": {
      "url": "$MDN_URL$/web/api/vrfieldofview/downdegrees",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>downDegrees</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRFieldOfView\"><code>VRFieldOfView</code></a> interface returns the number of degrees downwards that the field of view extends in.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrfieldofview.leftdegrees": {
      "url": "$MDN_URL$/web/api/vrfieldofview/leftdegrees",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>leftDegrees</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRFieldOfView\"><code>VRFieldOfView</code></a> interface returns the number of degrees to the left that the field of view extends in.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrfieldofview.rightdegrees": {
      "url": "$MDN_URL$/web/api/vrfieldofview/rightdegrees",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>rightDegrees</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRFieldOfView\"><code>VRFieldOfView</code></a> interface returns the number of degrees to the right that the field of view extends in.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrfieldofview.updegrees": {
      "url": "$MDN_URL$/web/api/vrfieldofview/updegrees",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>upDegrees</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRFieldOfView\"><code>VRFieldOfView</code></a> interface returns the number of degrees upwards that the field of view extends in.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrfieldofview.vrfieldofview": {
      "url": "$MDN_URL$/web/api/vrfieldofview/vrfieldofview",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>The <strong><code>VRFieldOfView()</code></strong> constructor creates a new <a href=\"$MDN_URL$/Web/API/VRFieldOfView\"><code>VRFieldOFView</code></a> object.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This constructor was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrframedata": {
      "url": "$MDN_URL$/web/api/vrframedata",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>VRFrameData</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebVR_API\">WebVR API</a> represents all the information needed to render a single frame of a VR scene; constructed by <a href=\"$MDN_URL$/Web/API/VRDisplay/getFrameData\"><code>VRDisplay.getFrameData()</code></a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This interface was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrframedata.leftprojectionmatrix": {
      "url": "$MDN_URL$/web/api/vrframedata/leftprojectionmatrix",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>leftProjectionMatrix</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> representing a 4x4 matrix that describes the projection to be used for the left eye’s rendering.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This value may be passed directly to WebGL’s <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/uniformMatrix\" ><code>uniformMatrix4fv</code></a> function.</p>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: It is highly recommended that applications use this matrix without modification. Failure to use this projection matrix when rendering may cause the presented frame to be distorted or badly aligned, resulting in varying degrees of user discomfort.</p>\n</div>"
    },
    "vrframedata.leftviewmatrix": {
      "url": "$MDN_URL$/web/api/vrframedata/leftviewmatrix",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>leftViewMatrix</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> representing a 4x4 matrix that describes the view transform to be used for the left eye’s rendering.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This value may be passed directly to WebGL’s <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/uniformMatrix\" ><code>uniformMatrix4fv</code></a> function.</p>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: It is highly recommended that applications use this matrix when rendering.</p>\n</div>"
    },
    "vrframedata.pose": {
      "url": "$MDN_URL$/web/api/vrframedata/pose",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>pose</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> at the current <a href=\"$MDN_URL$/Web/API/VRFrameData/timestamp\"><code>VRFrameData.timestamp</code></a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrframedata.rightprojectionmatrix": {
      "url": "$MDN_URL$/web/api/vrframedata/rightprojectionmatrix",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>rightProjectionMatrix</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> representing a 4x4 matrix that describes the projection to be used for the right eye’s rendering.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This value may be passed directly to WebGL’s <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/uniformMatrix\" ><code>uniformMatrix4fv</code></a> function.</p>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: It is highly recommended that applications use this matrix without modification. Failure to use this projection matrix when rendering may cause the presented frame to be distorted or badly aligned, resulting in varying degrees of user discomfort.</p>\n</div>"
    },
    "vrframedata.rightviewmatrix": {
      "url": "$MDN_URL$/web/api/vrframedata/rightviewmatrix",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>rightViewMatrix</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> representing a 4x4 matrix that describes the view transform to be used for the right eye’s rendering.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This value may be passed directly to WebGL’s <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/uniformMatrix\" ><code>uniformMatrix4fv</code></a> function.</p>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: It is highly recommended that applications use this matrix when rendering.</p>\n</div>"
    },
    "vrframedata.timestamp": {
      "url": "$MDN_URL$/web/api/vrframedata/timestamp",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>timestamp</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> interface returns a constantly increasing timestamp value representing the time a frame update occurred.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>Timestamps are useful for determining if position state data has been updated from the hardware. Since values are monotonically increasing, they can be compared to determine the ordering of updates — newer values will always be greater than or equal to older values.</p>\n<p>The timestamp starts at 0 the first time <a href=\"$MDN_URL$/Web/API/VRDisplay/getFrameData\"><code>VRDisplay.getFrameData()</code></a> is invoked for a given <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a>.</p>"
    },
    "vrframedata.vrframedata": {
      "url": "$MDN_URL$/web/api/vrframedata/vrframedata",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>VRFrameData()</code></strong> constructor creates a <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> object instance.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This constructor was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrlayerinit": {
      "url": "$MDN_URL$/web/api/vrlayerinit",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>VRLayerInit</code></strong> dictionary of the <a href=\"$MDN_URL$/Web/API/WebVR_API\">WebVR API</a> represents a content layer (an <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> or <a href=\"$MDN_URL$/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a>) that you want to present in a VR display.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This dictionary was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>You can retrieve <code>VRLayerInit</code> objects using <a href=\"$MDN_URL$/Web/API/VRDisplay/getLayers\"><code>VRDisplay.getLayers()</code></a>, and present them using the <a href=\"$MDN_URL$/Web/API/VRDisplay/requestPresent\"><code>VRDisplay.requestPresent()</code></a> method.</p>"
    },
    "vrlayerinit.leftbounds": {
      "url": "$MDN_URL$/web/api/vrlayerinit/leftbounds",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>leftBounds</strong></code> property of the <a href=\"$MDN_URL$/Web/API/VRLayerInit\"><code>VRLayerInit</code></a> interface (dictionary) defines the left texture bounds of the canvas whose contents will be presented by the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrlayerinit.rightbounds": {
      "url": "$MDN_URL$/web/api/vrlayerinit/rightbounds",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>rightBounds</strong></code> property of the <a href=\"$MDN_URL$/Web/API/VRLayerInit\"><code>VRLayerInit</code></a> interface (dictionary) defines the right texture bounds of the canvas whose contents will be presented by the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrlayerinit.source": {
      "url": "$MDN_URL$/web/api/vrlayerinit/source",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>source</strong></code> property of the <a href=\"$MDN_URL$/Web/API/VRLayerInit\"><code>VRLayerInit</code></a> interface (dictionary) defines the canvas whose contents will be presented by the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrpose": {
      "url": "$MDN_URL$/web/api/vrpose",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>VRPose</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebVR_API\">WebVR API</a> represents the state of a VR sensor at a given timestamp (which includes orientation, position, velocity, and acceleration information.)</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This interface was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This interface is accessible through the <a href=\"$MDN_URL$/Web/API/VRDisplay/getPose\"><code>VRDisplay.getPose()</code></a> and <a href=\"$MDN_URL$/Web/API/VRDisplay/getFrameData\"><code>VRDisplay.getFrameData()</code></a> methods. <a href=\"$MDN_URL$/Web/API/VRDisplay/getPose\"><code>VRDisplay.getPose()</code></a> is deprecated.</p>"
    },
    "vrpose.angularacceleration": {
      "url": "$MDN_URL$/web/api/vrpose/angularacceleration",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>angularAcceleration</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> interface returns an array representing the angular acceleration vector of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> at the current <a href=\"$MDN_URL$/Web/API/VRPose/timeStamp\"><code>VRPose.timestamp</code></a>, in meters per second per second.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>In other words, the current acceleration of the sensor's rotation around the <code>x</code>, <code>y</code>, and <code>z</code> axes.</p>"
    },
    "vrpose.angularvelocity": {
      "url": "$MDN_URL$/web/api/vrpose/angularvelocity",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>angularVelocity</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> interface returns an array representing the angular velocity vector of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> at the current <a href=\"$MDN_URL$/Web/API/VRPose/timeStamp\"><code>VRPose.timestamp</code></a>, in radians per second.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>In other words, the current velocity at which the sensor is rotating around the <code>x</code>, <code>y</code>, and <code>z</code> axes.</p>"
    },
    "vrpose.hasorientation": {
      "url": "$MDN_URL$/web/api/vrpose/hasorientation",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>hasOrientation</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> interface returns a boolean indicating whether the <a href=\"$MDN_URL$/Web/API/VRPose/orientation\"><code>VRPose.orientation</code></a> property is valid (i.e. if the hardware is currently registering a valid orientation). If it is <code>false</code>, the orientation property will return <code>null</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrpose.hasposition": {
      "url": "$MDN_URL$/web/api/vrpose/hasposition",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>hasPosition</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> interface returns a boolean indicating whether the <a href=\"$MDN_URL$/Web/API/VRPose/position\"><code>VRPose.position</code></a> property is valid (i.e. if the hardware is currently registering a valid position). If it is <code>false</code>, the <code>position</code> property will return <code>null</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>"
    },
    "vrpose.linearacceleration": {
      "url": "$MDN_URL$/web/api/vrpose/linearacceleration",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>linearAcceleration</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> interface returns an array representing the linear acceleration vector of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> at the current <a href=\"$MDN_URL$/Web/API/VRPose/timeStamp\"><code>VRPose.timestamp</code></a>, in meters per second per second.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>In other words, the current acceleration of the sensor, along the <code>x</code>, <code>y</code>, and <code>z</code> axes.</p>"
    },
    "vrpose.linearvelocity": {
      "url": "$MDN_URL$/web/api/vrpose/linearvelocity",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>linearVelocity</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> interface returns an array representing the linear velocity vector of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> at the current <a href=\"$MDN_URL$/Web/API/VRPose/timeStamp\"><code>VRPose.timestamp</code></a>, in meters per second.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>In other words, the current velocity at which the sensor is moving along the <code>x</code>, <code>y</code>, and <code>z</code> axes.</p>"
    },
    "vrpose.orientation": {
      "url": "$MDN_URL$/web/api/vrpose/orientation",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>orientation</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> interface returns the orientation of the sensor at the current <a href=\"$MDN_URL$/Web/API/VRPose/timeStamp\"><code>VRPose.timestamp</code></a>, as a quarternion value.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The value is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a>, made up of the following values:</p>\n<ul>\n<li>pitch — rotation around the X axis.</li>\n<li>yaw — rotation around the Y axis.</li>\n<li>roll — rotation around the Z axis.</li>\n<li>w — the fourth dimension (usually 1).</li>\n</ul>\n<p>The orientation yaw (rotation around the y axis) is relative to the initial yaw of the sensor when it was first read or the yaw of the sensor at the point that <a href=\"$MDN_URL$/Web/API/VRDisplay/resetPose\"><code>VRDisplay.resetPose()</code></a> was last called.</p>"
    },
    "vrpose.position": {
      "url": "$MDN_URL$/web/api/vrpose/position",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>position</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> interface returns the position of the <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> at the current <a href=\"$MDN_URL$/Web/API/VRPose/timeStamp\"><code>VRPose.timestamp</code></a> as a 3D vector.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The coordinate system is as follows:</p>\n<ul>\n<li>Positive X is to the user’s right.</li>\n<li>Positive Y is up.</li>\n<li>Positive Z is behind the user.</li>\n</ul>\n<p>Positions are measured in meters from an origin point — this point is either the position the sensor was first read at, or the position of the sensor at the point that <a href=\"$MDN_URL$/Web/API/VRDisplay/resetPose\"><code>VRDisplay.resetPose()</code></a> was last called.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: By default, all positions are given as a sitting space position. Transforming this point with <a href=\"$MDN_URL$/Web/API/VRStageParameters/sittingToStandingTransform\"><code>VRStageParameters.sittingToStandingTransform</code></a> — when you are working with a room display for example — converts this to a standing space position.</p>\n</div>"
    },
    "vrpose.timestamp": {
      "url": "$MDN_URL$/web/api/vrpose/timestamp",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>timestamp</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> interface returns the current time stamp of the system — a monotonically increasing value representing the time since the current app was started.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This property is useful for determining if position data has been updated, and what order updates have occurred in.</p>\n<div class=\"warning notecard\">\n<p><strong>Important</strong>: This version of <code>timestamp</code> has been removed from the spec — instead, timestamps are returned when <a href=\"$MDN_URL$/Web/API/VRDisplay/getFrameData\"><code>VRDisplay.getFrameData()</code></a> is called — see <a href=\"$MDN_URL$/Web/API/VRFrameData/timestamp\"><code>VRFrameData.timestamp</code></a>.</p>\n</div>"
    },
    "vrstageparameters": {
      "url": "$MDN_URL$/web/api/vrstageparameters",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>VRStageParameters</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebVR_API\">WebVR API</a> represents the values describing the stage area for devices that support room-scale experiences.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This interface was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>This interface is accessible through the <a href=\"$MDN_URL$/Web/API/VRDisplay/stageParameters\"><code>VRDisplay.stageParameters</code></a> property.</p>"
    },
    "vrstageparameters.sittingtostandingtransform": {
      "url": "$MDN_URL$/web/api/vrstageparameters/sittingtostandingtransform",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>sittingToStandingTransform</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRStageParameters\"><code>VRStageParameters</code></a> interface contains a matrix that transforms the sitting-space view matrices of <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> to standing-space.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>Basically, this can be passed into your WebGL code to transform the rendered view from a sitting to standing view.</p>"
    },
    "vrstageparameters.sizex": {
      "url": "$MDN_URL$/web/api/vrstageparameters/sizex",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>sizeX</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRStageParameters\"><code>VRStageParameters</code></a> interface <dfn>returns the w</dfn>idth of the play-area bounds in meters.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The bounds are defined as an axis-aligned rectangle on the floor, for safety purposes. Content should not require the user to move beyond these bounds; however, it is possible for the user to ignore the bounds resulting in position values outside of this rectangle. The center of the rectangle is at (0,0,0) in standing-space coordinates.</p>"
    },
    "vrstageparameters.sizey": {
      "url": "$MDN_URL$/web/api/vrstageparameters/sizey",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>sizeY</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/VRStageParameters\"><code>VRStageParameters</code></a> interface <dfn>returns the depth</dfn> of the play-area bounds in meters.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This property was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The bounds are defined as an axis-aligned rectangle on the floor, for safety purposes. Content should not require the user to move beyond these bounds; however, it is possible for the user to ignore the bounds resulting in position values outside of this rectangle. The center of the rectangle is at (0,0,0) in standing-space coordinates.</p>"
    },
    "vttcue": {
      "url": "$MDN_URL$/web/api/vttcue",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "23",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "26",
        "Opera": "12.1",
        "Safari": "6.1",
        "SafariIOS": "8"
      },
      "doc": "<br>\nThe <code>VTTCue</code> interface—part of the API for handling WebVTT (text tracks on media presentations)—describes and controls the text track associated with a particular <a href=\"$MDN_URL$/Web/HTML/Element/track\"><code>&lt;track&gt;</code></a> element."
    },
    "vttcue.vttcue": {
      "url": "$MDN_URL$/web/api/vttcue/vttcue",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "33",
        "ChromeAndroid": "33",
        "Edge": "79",
        "Firefox": "",
        "Opera": "20",
        "Safari": "6.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <code><strong>VTTCue()</strong></code> constructor creates and returns a new\n<a href=\"$MDN_URL$/Web/API/VTTCue\"><code>VTTCue</code></a> object.</p>",
      "parameters": {
        "startTime": "This is a <code>double</code> representing the initial text track cue start time. This is the time, given in seconds and fractions of a second, denoting the beginning of the range of the media data to which this cue applies. For example, if a cue is to be visible from 50 seconds to a one minute, five and a half seconds in the media's playback, <code>startTime</code> will be 50.0.",
        "endTime": "This is a <code>double</code> representing the ending time for this text track cue. This is the time at which the cue should stop being presented to the user, given in seconds and fractions thereof. Given the example cue mentioned under <code>startTime</code> , the value of <code>endTime</code> would be 65.5.",
        "text": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> providing the text that will be shown during the time span indicated by <code>startTime</code> and <code>endTime</code> ."
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/VTTCue\"><code>VTTCue</code></a> object representing a cue which will be presented during\n  the time span given.</p>"
    },
    "vttregion": {
      "url": "$MDN_URL$/web/api/vttregion",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Firefox": "59",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p>The <code>VTTRegion</code> interface—part of the API for handling WebVTT (text tracks on media presentations)—describes a portion of the video to render a <a href=\"$MDN_URL$/Web/API/VTTCue\"><code>VTTCue</code></a> onto.</p>"
    },
    "wakelock": {
      "url": "$MDN_URL$/web/api/wakelock",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "84",
        "ChromeAndroid": "84",
        "Edge": "84",
        "Opera": ""
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>WakeLock</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Screen_Wake_Lock_API\"><code>Screen Wake Lock API</code></a> prevents device screens from dimming or locking when an application needs to keep running.</p>\n<p>The system wake lock is exposed through the global <a href=\"$MDN_URL$/Web/API/Navigator/wakeLock\"><code>Navigator.wakelock</code></a> property.</p>"
    },
    "wakelock.request": {
      "url": "$MDN_URL$/web/api/wakelock/request",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "84",
        "ChromeAndroid": "84",
        "Edge": "84",
        "Opera": ""
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>request()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WakeLock\"><code>WakeLock</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a\n<a href=\"$MDN_URL$/Web/API/WakeLockSentinel\"><code>WakeLockSentinel</code></a> object, which allows control over screen dimming and\nlocking.</p>",
      "parameters": {
        "type": "Options are as follows: <ul> <li><code>'screen'</code>: Requests a screen wake lock. Prevents devices from dimming or locking the screen.</li> </ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with a <a href=\"$MDN_URL$/Web/API/WakeLockSentinel\"><code>WakeLockSentinel</code></a> object.</p>",
      "throws": {
        "NotAllowedError": "Thrown when wake lock is not available, which can happen because: <ul> <li>Document is not allowed to use screen wake lock due to screen-wake-lock policy.</li> <li>Document is not fully active.</li> <li>Document is hidden.</li> <li><a href=\"$MDN_URL$/Glossary/User_agent\">User Agent</a> could not acquire platform's wake lock.</li> </ul>"
      }
    },
    "wakelocksentinel": {
      "url": "$MDN_URL$/web/api/wakelocksentinel",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "84",
        "ChromeAndroid": "84",
        "Edge": "84",
        "Opera": ""
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>WakeLockSentinel</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Screen_Wake_Lock_API\"><code>Screen Wake Lock API</code></a> provides a handle to the underlying platform wake lock and can be manually released and reacquired. An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> representing the wake lock is returned via the <a href=\"$MDN_URL$/Web/API/WakeLock/request\" ><code>navigator.wakelock.request()</code></a> method.</p>\n<p>An acquired <code>WakeLockSentinel</code> can be released manually via the <a href=\"$MDN_URL$/Web/API/WakeLockSentinel/release\" ><code>release()</code></a> method, or automatically via the platform wake lock. This can happen if the document becomes inactive or looses visibility, if the device is low on power or the user turns on a power save mode. Releasing all <code>WakeLockSentinel</code> instances of a given wake lock type will cause the underlying platform wake lock to be released.</p>"
    },
    "wakelocksentinel.onrelease": {
      "url": "$MDN_URL$/web/api/wakelocksentinel/onrelease",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "84",
        "ChromeAndroid": "84",
        "Edge": "84",
        "Opera": ""
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>onrelease</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/WakeLockSentinel\"><code>WakeLockSentinel</code></a> is fired when the sentinel object's handle has been\nreleased.</p>\n<p>A <a href=\"$MDN_URL$/Web/API/WakeLockSentinel\"><code>WakeLockSentinel</code></a> can be released manually via the release() method, or\nautomatically via the platform wake lock. This can happen if the document becomes\ninactive or looses visibility, if the device is low on power or the user turns on a\npower save mode.</p>\n<p>This interface inherits from the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface.</p>"
    },
    "wakelocksentinel.release": {
      "url": "$MDN_URL$/web/api/wakelocksentinel/release",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "84",
        "ChromeAndroid": "84",
        "Edge": "84",
        "Opera": ""
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The <strong><code>release()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WakeLockSentinel\"><code>WakeLockSentinel</code></a> interface releases the\n<a href=\"$MDN_URL$/Web/API/WakeLockSentinel\"><code>WakeLockSentinel</code></a>, returning a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that is resolved\nonce the sentinel has been successfully released.</p>",
      "returns": "<p>Returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with <code>undefined</code></p>"
    },
    "wakelocksentinel.released": {
      "url": "$MDN_URL$/web/api/wakelocksentinel/released",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "87",
        "ChromeAndroid": "87",
        "Edge": "87",
        "Opera": ""
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p class=\"summary\">The read-only <strong><code>released</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/WakeLockSentinel\"><code>WakeLockSentinel</code></a> interface returns a boolean that indicates whether\na <a href=\"$MDN_URL$/Web/API/WakeLockSentinel\"><code>WakeLockSentinel</code></a> has been released yet.</p>"
    },
    "wakelocksentinel.type": {
      "url": "$MDN_URL$/web/api/wakelocksentinel/type",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "84",
        "ChromeAndroid": "84",
        "Edge": "84",
        "Opera": ""
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\">The read-only <strong><code>type</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/WakeLockSentinel\"><code>WakeLockSentinel</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a>\nrepresentation of the currently acquired <a href=\"$MDN_URL$/Web/API/WakeLockSentinel\"><code>WakeLockSentinel</code></a> type.</p>"
    },
    "waveshapernode": {
      "url": "$MDN_URL$/web/api/waveshapernode",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "14",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "25",
        "Opera": "15",
        "Safari": "6",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>WaveShaperNode</code></strong> interface represents a non-linear distorter.</span> It is an <a href=\"$MDN_URL$/Web/API/AudioNode\"><code>AudioNode</code></a> that uses a curve to apply a wave shaping distortion to the signal. Beside obvious distortion effects, it is often used to add a warm feeling to the signal.</p>\n<p>A <code>WaveShaperNode</code> always has exactly one input and one output.</p>\n<table class=\"properties\">\n<tbody>\n<tr>\n<th scope=\"row\">Number of inputs</th>\n<td><code>1</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Number of outputs</th>\n<td><code>1</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Channel count mode</th>\n<td><code>\"max\"</code></td>\n</tr>\n<tr>\n<th scope=\"row\">Channel count</th>\n<td><code>2</code> (not used in the default count mode)</td>\n</tr>\n<tr>\n<th scope=\"row\">Channel interpretation</th>\n<td><code>\"speakers\"</code></td>\n</tr>\n</tbody>\n</table>"
    },
    "waveshapernode.curve": {
      "url": "$MDN_URL$/web/api/waveshapernode/curve",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "14",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "25",
        "Opera": "15",
        "Safari": "6",
        "SafariIOS": ""
      },
      "doc": "<p>The <code>curve</code> property of the <a href=\"$MDN_URL$/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a> interface is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> of numbers describing the distortion to apply.</p>\n<p>The mid-element of the array is applied to any signal value of <code>0</code>, the first one to signal values of <code>-1</code>, and the last to signal values of <code>1</code>; values lower than <code>-1</code> or greater than <code>1</code> are treated like <code>-1</code> or <code>1</code> respectively.</p>\n<p>If necessary, intermediate values of the distortion curve are linearly interpolated.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> The array can be a <code>null</code> value: in that case, no distortion is applied to the input signal.</p>\n</div>"
    },
    "waveshapernode.oversample": {
      "url": "$MDN_URL$/web/api/waveshapernode/oversample",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "14",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "26",
        "Opera": "15",
        "Safari": "6",
        "SafariIOS": ""
      },
      "doc": "<p>The <code>oversample</code> property of the <a href=\"$MDN_URL$/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a> interface is an enumerated value indicating if oversampling must be used. Oversampling is a technique for creating more samples (up-sampling) before applying a distortion effect to the audio signal.</p>\n<p>Once applied, the number of samples is reduced to its initial numbers. This leads to better results by avoiding some aliasing, but comes at the expense of a lower precision shaping curve.</p>\n<p>The possible <code>oversample</code> values are:</p>\n<table class=\"standard-table\">\n<thead>\n<tr>\n<th scope=\"col\">Value</th>\n<th scope=\"col\">Effect</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>'none'</code></td>\n<td>Do not perform any oversampling.</td>\n</tr>\n<tr>\n<td><code>'2x'</code></td>\n<td>Double the amount of samples before applying the shaping curve.</td>\n</tr>\n<tr>\n<td><code>'4x'</code></td>\n<td>Multiply by 4 the amount of samples before applying the shaping curve.</td>\n</tr>\n</tbody>\n</table>"
    },
    "waveshapernode.waveshapernode": {
      "url": "$MDN_URL$/web/api/waveshapernode/waveshapernode",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "55",
        "ChromeAndroid": "55",
        "Edge": "79",
        "Firefox": "53",
        "Opera": "42",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>WaveShaperNode()</code></strong> constructor\nof the <a href=\"$MDN_URL$/Web/API/Web_Audio_API\">Web Audio API</a> creates a new\n<a href=\"$MDN_URL$/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a> object which is an <a href=\"$MDN_URL$/Web/API/AudioNode\"><code>AudioNode</code></a> that\nrepresents a non-linear distorter.</span></p>",
      "parameters": {
        "context": "A reference to an <a href=\"$MDN_URL$/Web/API/AudioContext\"><code>AudioContext</code></a> .",
        "options": "Options are as follows: <ul> <li><code>curve</code>: The shaping curve used for the waveshaping effect. The input signal is nominally within the range [-1;1].</li> <li><code>oversample</code>: Specifies what type of oversampling (if any) should be used when applying the shaping curve. Valid values are '<code>none</code>', '<code>2x</code>', or '<code>4x</code>'. The default is '<code>none</code>'.</li> </ul>"
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/WaveShaperNode\"><code>WaveShaperNode</code></a> object instance.</p>"
    },
    "webgl2renderingcontext": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong>WebGL2RenderingContext</strong> interface provides the OpenGL ES 3.0 rendering context for the drawing surface of an HTML <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element.</p>\n<p>To get an object of this interface, call <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement/getContext\" ><code>getContext()</code></a> on a <code>&lt;canvas&gt;</code> element, supplying \"webgl2\" as the argument:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>var canvas = document.getElementById('myCanvas');\nvar gl = canvas.getContext('webgl2');\n</code></pre></div>\n<div class=\"note notecard\">\n<p>WebGL 2 is an extension to WebGL 1. The <code>WebGL2RenderingContext</code> interface implements all members of the <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> interface. Some methods of the WebGL 1 context can accept additional values when used in a WebGL 2 context. You will find this info noted on the WebGL 1 reference pages.</p>\n</div>\n<p>The <a href=\"$MDN_URL$/Web/API/WebGL_API/Tutorial\" >WebGL tutorial</a> has more information, examples, and resources on how to get started with WebGL.</p>"
    },
    "webgl2renderingcontext.beginquery": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/beginquery",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.beginQuery()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> starts an asynchronous query. The\n<code>target</code> parameter indicates which kind of query to begin.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the target of the query. Possible values: <ul> <li><code>gl.ANY_SAMPLES_PASSED</code>: Specifies an occlusion query: these queries detect whether an object is visible (whether the scoped drawing commands pass the depth test and if so, how many samples pass).</li> <li><code>gl.ANY_SAMPLES_PASSED_CONSERVATIVE</code>: Same as above above, but less accurate and faster version.</li> <li><code>gl.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN</code>: Number of primitives that are written to transform feedback buffers.</li> </ul>",
        "query": "A <a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> object for which to start the querying."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.begintransformfeedback": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/begintransformfeedback",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.beginTransformFeedback()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> starts a transform\nfeedback operation.</p>",
      "parameters": {
        "primitiveMode": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the output type of the primitives that will be recorded into the buffer objects that are bound for transform feedback. Possible values: <ul> <li><code>gl.POINTS</code></li> <li><code>gl.LINES</code></li> <li><code>gl.TRIANGLES</code></li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.bindbufferbase": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/bindbufferbase",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.bindBufferBase()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> binds a given\n<a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> to a given binding point (<code>target</code>) at a given\n<code>index</code>.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying the target for the bind operation. Possible values: <ul> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER</code></li> <li><code>gl.UNIFORM_BUFFER</code></li> </ul>",
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the <code>target</code> .",
        "buffer": "A <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> which to bind to the binding point ( <code>target</code> )."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.bindbufferrange": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/bindbufferrange",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.bindBufferRange()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> binds a range of a given\n<a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> to a given binding point (<code>target</code>) at a given\n<code>index</code>.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying the target for the bind operation. Possible values: <ul> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER</code></li> <li><code>gl.UNIFORM_BUFFER</code></li> </ul>",
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the <code>target</code> .",
        "buffer": "A <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> which to bind to the binding point ( <code>target</code> ).",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying the starting offset.",
        "size": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizeiptr</code></a> specifying the amount of data that can be read from the buffer."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.bindsampler": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/bindsampler",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.bindSampler()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> binds a\npassed <a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> object to the texture unit at the passed index.</p>",
      "parameters": {
        "unit": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the texture unit to which to bind the sampler to.",
        "sampler": "A <a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> object to bind."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.bindtransformfeedback": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/bindtransformfeedback",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.bindTransformFeedback()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> binds a\npassed <a href=\"$MDN_URL$/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a> object to the current GL state.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the target (binding point). Must be <code>gl.TRANSFORM_FEEDBACK</code> .",
        "transformFeedback": "A <a href=\"$MDN_URL$/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a> object to bind."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.bindvertexarray": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/bindvertexarray",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.bindVertexArray()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> binds a\npassed <a href=\"$MDN_URL$/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a> object to the buffer.</p>",
      "parameters": {
        "vertexArray": "A <a href=\"$MDN_URL$/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a> (VAO) object to bind."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.blitframebuffer": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/blitframebuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.blitFramebuffer()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> transfers a block of pixels\nfrom the read framebuffer to the draw framebuffer. Read and draw framebuffers are bound\nusing <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/bindFramebuffer\"><code>WebGLRenderingContext.bindFramebuffer()</code></a>.</p>",
      "parameters": {
        "srcX0, srcY0, srcX1, srcY1": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the bounds of the source rectangle.",
        "dstX0, dstY0, dstX1, dstY1": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the bounds of the destination rectangle.",
        "mask": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLbitfield</code></a> specifying a bitwise OR mask indicating which buffers are to be copied. Possible values: <ul> <li><code>gl.COLOR_BUFFER_BIT</code></li> <li><code>gl.DEPTH_BUFFER_BIT</code></li> <li><code>gl.STENCIL_BUFFER_BIT</code></li> </ul>",
        "filter": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the interpolation to be applied if the image is stretched. Possible values: <ul> <li><code>gl.NEAREST</code></li> <li><code>gl.LINEAR</code></li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.clearbuffer": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/clearbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.clearBuffer[fiuv]()</code></strong> methods of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> clear buffers from the\ncurrently bound framebuffer.</p>",
      "parameters": {
        "buffer": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the buffer to clear. Possible values are: <ul> <li><code>gl.COLOR</code>: Color buffer.</li> <li><code>gl.DEPTH</code>: Depth buffer.</li> <li><code>gl.STENCIL</code>: Stencil buffer.</li> <li><code>gl.DEPTH_STENCIL</code>: clears depth and stencil buffers (used with <code>clearBufferfi</code>).</li> </ul>",
        "drawBuffer": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the draw buffer to clear.",
        "values": "An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> ,  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> or  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a> values or <br> an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a> , <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a> or <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> specifying the values to clear to.",
        "depth": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a> specifying the value to clear a depth render buffer to.",
        "stencil": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the value to clear the stencil render buffer to."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.clientwaitsync": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/clientwaitsync",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <code><strong>WebGL2RenderingContext.clientWaitSync()</strong></code> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> blocks and waits for a\n<a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object to become signaled or a given timeout to be passed.</p>",
      "parameters": {
        "sync": "A <a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object on which to wait on.",
        "flags": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLbitfield</code></a> specifying a bitwise combination of flags controlling the flushing behavior. May be <code>gl.SYNC_FLUSH_COMMANDS_BIT</code> .",
        "timeout": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint64</code></a> specifying a timeout (in nanoseconds) for which to wait for the sync object to become signaled. Must not be larger than <code>gl.MAX_CLIENT_WAIT_TIMEOUT_WEBGL</code> ."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a> indicating the sync object's status.</p>\n\n<ul>\n  <li><code>gl.ALREADY_SIGNALED</code>: Indicates that the sync object was signaled when\n    this method was called.</li>\n  <li><code>gl.TIMEOUT_EXPIRED</code>: Indicates that the <code>timeout</code> time passed\n    and that the sync object did not become signaled.</li>\n  <li><code>gl.CONDITION_SATISFIED</code>: Indicates that the sync object was signaled\n    before the <code>timeout</code> expired.</li>\n  <li><code>gl.WAIT_FAILED</code>: Indicates that an error occurred during the execution.\n  </li>\n</ul>"
    },
    "webgl2renderingcontext.compressedtexsubimage3d": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/compressedtexsubimage3d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.compressedTexSubImage3D()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API </a>specifies a\nthree-dimensional sub-rectangle for a texture image in a compressed format.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values: <ul> <li><code>gl.TEXTURE_3D</code>: A three-dimensional texture.</li> <li><code>gl.TEXTURE_2D_ARRAY</code>: A two-dimensional array texture.</li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the level of detail. Level 0 is the base image level and level <em>n</em> is the <em>n</em> th mipmap reduction level.",
        "xoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the x offset within the compressed texture image.",
        "yoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the y offset within the compressed texture image.",
        "zoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the z offset within the compressed texture image.",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture.",
        "depth": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the depth of the texture.",
        "format": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the compressed image format. Possible values: <ul> <li><code>gl.COMPRESSED_R11_EAC</code></li> <li><code>gl.COMPRESSED_SIGNED_R11_EAC</code></li> <li><code>gl.COMPRESSED_RG11_EAC</code></li> <li><code>gl.COMPRESSED_SIGNED_RG11_EAC</code></li> <li><code>gl.COMPRESSED_RGB8_ETC2</code></li> <li><code>gl.COMPRESSED_RGBA8_ETC2_EAC</code></li> <li><code>gl.COMPRESSED_SRGB8_ETC2</code></li> <li><code>gl.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC</code></li> <li><code>gl.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> <li><code>gl.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> </ul>",
        "imageSize": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the number of bytes to read from the buffer bound to <code>gl.PIXEL_UNPACK_BUFFER</code> .",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the offset in bytes from which to read from the buffer bound to <code>gl.PIXEL_UNPACK_BUFFER</code> .",
        "srcData": "An <a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a> that be used as a data store for the compressed image data in memory."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.copybuffersubdata": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/copybuffersubdata",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.copyBufferSubData()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> copies part of the data of a\nbuffer to another buffer.</p>",
      "parameters": {
        "readTarget<br>\nwriteTarget": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) from whose data store should be read or written. Possible values: <ul> <li><code>gl.ARRAY_BUFFER</code>: Buffer containing vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data.</li> <li><code>gl.ELEMENT_ARRAY_BUFFER</code>: Buffer used for element indices.</li> <li><code>gl.COPY_READ_BUFFER</code>: Buffer for copying from one buffer object to another (provided specifically for copy operations).</li> <li><code>gl.COPY_WRITE_BUFFER</code>: Buffer for copying from one buffer object to another (provided specifically for copy operations).</li> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER</code>: Buffer for transform feedback operations.</li> <li><code>gl.UNIFORM_BUFFER</code>: Buffer used for storing uniform blocks.</li> <li><code>gl.PIXEL_PACK_BUFFER</code>: Buffer used for pixel transfer operations. </li> <li><code>gl.PIXEL_UNPACK_BUFFER</code>: Buffer used for pixel transfer operations. </li> </ul>",
        "readOffset<br>\nwriteOffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying the byte offset from which to start reading from or writing to the buffer.",
        "size": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> in bytes specifying the size of the data to be copied from <code>readTarget</code> to <code>writeTarget</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.copytexsubimage3d": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/copytexsubimage3d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.copyTexSubImage3D()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> copies pixels from the current\n<a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> into an existing 3D texture sub-image.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values: <ul> <li><code>gl.TEXTURE_3D</code>: A three-dimensional texture.</li> <li><code>gl.TEXTURE_2D_ARRAY</code>: A two-dimensional array texture.</li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the level of detail. Level 0 is the base image level and level <em>n</em> is the <em>n</em> th mipmap reduction level.",
        "xoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the x offset within the texture image.",
        "yoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the y offset within the texture image.",
        "zoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the z offset within the texture image.",
        "x": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the x coordinate of the lower left corner where to start copying.",
        "y": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the y coordinate of the lower left corner where to start copying.",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.createquery": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/createquery",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <code><strong>WebGL2RenderingContext.createQuery()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> creates and initializes\n<a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> objects, which provide ways to asynchronously query for\ninformation.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> object.</p>"
    },
    "webgl2renderingcontext.createsampler": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/createsampler",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <code><strong>WebGL2RenderingContext.createSampler()</strong></code> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> creates and initializes\n<a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> objects.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> object.</p>"
    },
    "webgl2renderingcontext.createtransformfeedback": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/createtransformfeedback",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <code><strong>WebGL2RenderingContext.createTransformFeedback()</strong></code>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> creates and\ninitializes <a href=\"$MDN_URL$/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a> objects.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a> object.</p>"
    },
    "webgl2renderingcontext.createvertexarray": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/createvertexarray",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.createVertexArray()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> creates and initializes a\n<a href=\"$MDN_URL$/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a> object that represents a vertex array object (VAO)\npointing to vertex array data and which provides names for different sets of vertex\ndata.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a> representing a vertex array object (VAO) which\n  points to vertex array data.</p>"
    },
    "webgl2renderingcontext.deletequery": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/deletequery",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.deleteQuery()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> deletes a given\n<a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> object.</p>",
      "parameters": {
        "query": "A <a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> object to delete."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.deletesampler": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/deletesampler",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.deleteSampler()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> deletes a given\n<a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> object.</p>",
      "parameters": {
        "sampler": "A <a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> object to delete."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.deletesync": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/deletesync",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.deleteSync()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> deletes a given\n<a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object.</p>",
      "parameters": {
        "sync": "A <a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object to delete."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.deletetransformfeedback": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/deletetransformfeedback",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.deleteTransformFeedback()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> deletes a given\n<a href=\"$MDN_URL$/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a> object.</p>",
      "parameters": {
        "transformFeedback": "A <a href=\"$MDN_URL$/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a> object to delete."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.deletevertexarray": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/deletevertexarray",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.deleteVertexArray()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> deletes a given\n<a href=\"$MDN_URL$/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a> object.</p>",
      "parameters": {
        "vertexArray": "A <a href=\"$MDN_URL$/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a> (VAO) object to delete."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.drawarraysinstanced": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/drawarraysinstanced",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.drawArraysInstanced()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> renders primitives from\narray data like the <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/drawArrays\" ><code>gl.drawArrays()</code></a>\nmethod. In addition, it can execute multiple instances of the range of elements.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> When using <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\" >WebGL 1</a>, the <a href=\"$MDN_URL$/Web/API/ANGLE_instanced_arrays\"><code>ANGLE_instanced_arrays</code></a> extension can provide this method,\ntoo.</p>\n</div>",
      "parameters": {
        "mode": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the type primitive to render. Possible values are: <ul> <li><code>gl.POINTS</code>: Draws a single dot.</li> <li><code>gl.LINE_STRIP</code>: Draws a straight line to the next vertex.</li> <li><code>gl.LINE_LOOP</code>: Draws a straight line to the next vertex, and connects the last vertex back to the first.</li> <li><code>gl.LINES</code>: Draws a line between a pair of vertices.</li> <li> <code><a href=\"https://en.wikipedia.org/wiki/Triangle_strip\" class=\"external\" rel=\" noopener\">gl.TRIANGLE_STRIP</a></code> </li> <li> <code><a href=\"https://en.wikipedia.org/wiki/Triangle_fan\" class=\"external\" rel=\" noopener\">gl.TRIANGLE_FAN</a></code> </li> <li><code>gl.TRIANGLES</code>: Draws a triangle for a group of three vertices.</li> </ul>",
        "first": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the starting index in the array of vector points.",
        "count": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the number of indices to be rendered.",
        "instanceCount": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the number of instances of the range of elements to execute."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.drawbuffers": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/drawbuffers",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.drawBuffers()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> defines draw buffers to which\nfragment colors are written into. The draw buffer settings are part of the state of the\ncurrently bound framebuffer or the drawingbuffer if no framebuffer is bound.</p>",
      "parameters": {
        "buffers": "An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the buffers into which fragment colors will be written. Possible values are: <ul> <li><code>gl.NONE</code>: Fragment shader output is not written into any color buffer.</li> <li><code>gl.BACK</code>: Fragment shader output is written into the back color buffer.</li> <li><code>gl.COLOR_ATTACHMENT{0-15}</code>: Fragment shader output is written in the nth color attachment of the current framebuffer.</li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.drawelementsinstanced": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/drawelementsinstanced",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.drawElementsInstanced()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> renders primitives from\narray data like the <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/drawElements\" ><code>gl.drawElements()</code></a> method. In addition, it can execute multiple instances of a set\nof elements.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> When using <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\" >WebGL 1</a>, the <a href=\"$MDN_URL$/Web/API/ANGLE_instanced_arrays\"><code>ANGLE_instanced_arrays</code></a> extension can provide this method,\ntoo.</p>\n</div>",
      "parameters": {
        "mode": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the type primitive to render. Possible values are: <ul> <li><code>gl.POINTS</code>: Draws a single dot.</li> <li><code>gl.LINE_STRIP</code>: Draws a straight line to the next vertex.</li> <li><code>gl.LINE_LOOP</code>: Draws a straight line to the next vertex, and connects the last vertex back to the first.</li> <li><code>gl.LINES</code>: Draws a line between a pair of vertices.</li> <li> <code><a href=\"https://en.wikipedia.org/wiki/Triangle_strip\" class=\"external\" rel=\" noopener\">gl.TRIANGLE_STRIP</a></code> </li> <li> <code><a href=\"https://en.wikipedia.org/wiki/Triangle_fan\" class=\"external\" rel=\" noopener\">gl.TRIANGLE_FAN</a></code> </li> <li><code>gl.TRIANGLES</code>: Draws a triangle for a group of three vertices.</li> </ul>",
        "count": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the number of elements to be rendered.",
        "type": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the type of the values in the element array buffer. Possible values are: <ul> <li><code>gl.UNSIGNED_BYTE</code></li> <li><code>gl.UNSIGNED_SHORT</code></li> <li>When using the <a href=\"$MDN_URL$/Web/API/OES_element_index_uint\"><code>OES_element_index_uint</code></a> extension: <ul> <li><code>gl.UNSIGNED_INT</code></li> </ul> </li> </ul>",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying an offset in the element array buffer. Must be a valid multiple of the size of the given <code>type</code> .",
        "instanceCount": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the number of instances of the set of elements to execute."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.drawrangeelements": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/drawrangeelements",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.drawRangeElements()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> renders primitives from array\ndata in a given range.</p>",
      "parameters": {
        "mode": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the type primitive to render. Possible values are: <ul> <li><code>gl.POINTS</code>: Draws a single dot.</li> <li><code>gl.LINE_STRIP</code>: Draws a straight line to the next vertex.</li> <li><code>gl.LINE_LOOP</code>: Draws a straight line to the next vertex, and connects the last vertex back to the first.</li> <li><code>gl.LINES</code>: Draws a line between a pair of vertices.</li> <li> <code><a href=\"https://en.wikipedia.org/wiki/Triangle_strip\" class=\"external\" rel=\" noopener\">gl.TRIANGLE_STRIP</a></code> </li> <li> <code><a href=\"https://en.wikipedia.org/wiki/Triangle_fan\" class=\"external\" rel=\" noopener\">gl.TRIANGLE_FAN</a></code> </li> <li><code>gl.TRIANGLES</code>: Draws a triangle for a group of three vertices.</li> </ul>",
        "start": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the minimum array index contained in <code>offset</code> .",
        "end": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the maximum array index contained in <code>offset</code> .",
        "count": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the number of elements to be rendered.",
        "type": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the type of the values in the element array buffer. Possible values are: <ul> <li><code>gl.UNSIGNED_BYTE</code></li> <li><code>gl.UNSIGNED_SHORT</code></li> <li><code>gl.UNSIGNED_INT</code></li> </ul>",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying an offset in the element array buffer. Must be a valid multiple of the size of the given <code>type</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.endquery": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/endquery",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.endQuery()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> marks the end of a given query\ntarget.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the target of the query. Possible values: <ul> <li><code>gl.ANY_SAMPLES_PASSED</code>: Specifies an occlusion query: these queries detect whether an object is visible (whether the scoped drawing commands pass the depth test and if so, how many samples pass).</li> <li><code>gl.ANY_SAMPLES_PASSED_CONSERVATIVE</code>: Same as above above, but less accurate and faster version.</li> <li><code>gl.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN</code>: Number of primitives that are written to transform feedback buffers.</li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.endtransformfeedback": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/endtransformfeedback",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.endTransformFeedback()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> ends a transform feedback\noperation.</p>",
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.fencesync": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/fencesync",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <code><strong>WebGL2RenderingContext.fenceSync()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> creates a new\n<a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object and inserts it into the GL command stream.</p>",
      "parameters": {
        "condition": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the condition that must be met to set the sync object's state to signaled. Must be <code>gl.SYNC_GPU_COMMANDS_COMPLETE</code> .",
        "flags": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLbitfield</code></a> specifying a bitwise combination of flags controlling the behavior of the sync object. Must be <code>0</code> (exists for extensions only)."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object.</p>"
    },
    "webgl2renderingcontext.framebuffertexturelayer": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/framebuffertexturelayer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.framebufferTextureLayer()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> attaches a single\nlayer of a texture to a framebuffer.</p>\n<p>This method is similar to <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/framebufferTexture2D\"><code>WebGLRenderingContext.framebufferTexture2D()</code></a>,\nbut only a given single layer of the texture level is attached to the attachment point.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.FRAMEBUFFER</code>: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image.</li> <li><code>gl.DRAW_FRAMEBUFFER</code>: Equivalent to <code>gl.FRAMEBUFFER</code>. </li> <li><code>gl.READ_FRAMEBUFFER</code>: Used as a source for reading operations.</li> </ul>",
        "attachment": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the attachment point for the <code>texture</code> . Possible values: <ul> <li><code>gl.COLOR_ATTACHMENT{0-15}</code>: Attaches the texture to one of the framebuffer's color buffers.</li> <li><code>gl.DEPTH_ATTACHMENT</code>: Attaches the texture to the framebuffer's depth buffer.</li> <li><code>gl.STENCIL_ATTACHMENT</code>: Attaches the texture to the framebuffer's stencil buffer.</li> <li><code>gl.DEPTH_STENCIL_ATTACHMENT</code>: depth and stencil buffer.</li> </ul>",
        "texture": "A <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> object whose image to attach.",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the mipmap level of the texture image to attach.",
        "layer": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the layer of the texture image to attach."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.getactiveuniformblockname": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getactiveuniformblockname",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getActiveUniformBlockName()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> retrieves the name\nof the active uniform block at a given index within a <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> containing the uniform block.",
        "uniformBlockIndex": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the uniform block to whose name to retrieve."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> indicating the active uniform block name.</p>"
    },
    "webgl2renderingcontext.getactiveuniformblockparameter": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getactiveuniformblockparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The\n<strong><code>WebGL2RenderingContext.getActiveUniformBlockParameter()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> retrieves\ninformation about an active uniform block within a <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> containing the active uniform block.",
        "uniformBlockIndex": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the active uniform block within the program.",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying which information to query. Possible values: <ul> <li><code>gl.UNIFORM_BLOCK_BINDING</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> indicating the uniform buffer binding point.</li> <li><code>gl.UNIFORM_BLOCK_DATA_SIZE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> indicating the minimum total buffer object size.</li> <li><code>gl.UNIFORM_BLOCK_ACTIVE_UNIFORMS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> indicating the number of active uniforms in the uniform block.</li> <li><code>gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES</code>: Returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a> indicating the list of active uniforms in the uniform block.</li> <li><code>gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> indicating whether the uniform block is referenced by the vertex shader.</li> <li><code>gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> indicating whether the uniform block is referenced by the fragment shader.</li> </ul>"
      },
      "returns": "<p>Depends on which information is requested using the <code>pname</code> parameter. If an\n  error occurs, <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a> is returned.</p>"
    },
    "webgl2renderingcontext.getactiveuniforms": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getactiveuniforms",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getActiveUniforms()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> retrieves information about\nactive uniforms within a <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> containing the active uniforms.",
        "uniformIndices": "An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the indices of the active uniforms to query.",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying which information to query. Possible values: <ul> <li><code>gl.UNIFORM_TYPE</code>: Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getUniform#return_value\" data-flaw=\"link1\">types of the uniforms</a>.</li> <li><code>gl.UNIFORM_SIZE</code>: Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> indicating the sizes of the uniforms.</li> <li><code>gl.UNIFORM_BLOCK_INDEX</code>: Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the block indices of the uniforms.</li> <li><code>gl.UNIFORM_OFFSET</code>: Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the uniform buffer offsets.</li> <li><code>gl.UNIFORM_ARRAY_STRIDE</code>: Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the strides between the elements.</li> <li><code>gl.UNIFORM_MATRIX_STRIDE</code>: Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the strides between columns of a column-major matrix or a row-major matrix.</li> <li><code>gl.UNIFORM_IS_ROW_MAJOR</code>: Returns an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> indicating whether each of the uniforms is a row-major matrix or not.</li> </ul>"
      },
      "returns": "<p>Depends on which information is requested using the <code>pname</code> parameter.</p>"
    },
    "webgl2renderingcontext.getbuffersubdata": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getbuffersubdata",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getBufferSubData()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> reads data from a buffer\nbinding point and writes them to an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> or\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\"><code>SharedArrayBuffer</code></a>.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.ARRAY_BUFFER</code>: Buffer containing vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data.</li> <li><code>gl.ELEMENT_ARRAY_BUFFER</code>: Buffer used for element indices.</li> <li><code>gl.COPY_READ_BUFFER</code>: Buffer for copying from one buffer object to another.</li> <li><code>gl.COPY_WRITE_BUFFER</code>: Buffer for copying from one buffer object to another.</li> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER</code>: Buffer for transform feedback operations.</li> <li><code>gl.UNIFORM_BUFFER</code>: Buffer used for storing uniform blocks.</li> <li><code>gl.PIXEL_PACK_BUFFER</code>: Buffer used for pixel transfer operations. </li> <li><code>gl.PIXEL_UNPACK_BUFFER</code>: Buffer used for pixel transfer operations. </li> </ul>",
        "srcByteOffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying the byte offset from which to start reading from the buffer.",
        "dstData": "An <a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a> to copy the data to. If <code>dstData</code> is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/DataView\"><code>DataView</code></a> then <code>dstOffset</code> and <code>length</code> are interpreted in bytes, otherwise <code>dstData</code> 's element type is used.",
        "dstOffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the element index offset to start writing in <code>dstData</code> .",
        "length": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the number of elements to copy. If this is 0 or not specified, <code>getBufferSubData</code> will copy until the end of <code>dstData</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.getfragdatalocation": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getfragdatalocation",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getFragDataLocation()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns the binding of\ncolor numbers to user-defined varying out variables.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> to query.",
        "name": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the name of the user-defined varying out variable."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> indicating the assigned color number binding, or <code>-1</code>\n  otherwise.</p>"
    },
    "webgl2renderingcontext.getindexedparameter": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getindexedparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getIndexedParameter()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns indexed\ninformation about a given <code>target</code>.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying the target for which to return information. Possible values: <ul> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER_BINDING</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a>.</li> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER_SIZE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizeiptr</code></a>.</li> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER_START</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a>.</li> <li><code>gl.UNIFORM_BUFFER_BINDING</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a>. </li> <li><code>gl.UNIFORM_BUFFER_SIZE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizeiptr</code></a>.</li> <li><code>gl.UNIFORM_BUFFER_START</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a>.</li> </ul>",
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the <code>target</code> that is queried."
      },
      "returns": "<p>Depends on the requested information (as specified with <code>target</code>).</p>"
    },
    "webgl2renderingcontext.getinternalformatparameter": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getinternalformatparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getInternalformatParameter()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns\ninformation about implementation-dependent support for internal formats.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying the target renderbuffer object. Possible values: <ul> <li><code>gl.RENDERBUFFER</code>: Buffer data storage for single images in a renderable internal format.</li> </ul>",
        "internalformat": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the internal format about which to retrieve information (must be a color-renderable, depth-renderable or stencil-renderable format).",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the type of information to query. Possible values: <ul> <li><code>gl.SAMPLES</code>: Returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a> containing sample counts supported for <code>internalformat</code> in descending order.</li> </ul>"
      },
      "returns": "<p>Depends on the requested information (as specified with <code>pname</code>). It is an\n  <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a> if <code>pname</code> is <code>gl.SAMPLES</code>.</p>"
    },
    "webgl2renderingcontext.getquery": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getquery",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getQuery()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns the currently active\n<a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> for the <code>target</code>, or <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a>.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the target of the query. Possible values: <ul> <li><code>gl.ANY_SAMPLES_PASSED</code>: Specifies an occlusion query: these queries detect whether an object is visible (whether the scoped drawing commands pass the depth test and if so, how many samples pass).</li> <li><code>gl.ANY_SAMPLES_PASSED_CONSERVATIVE</code>: Same as above above, but less accurate and faster version.</li> <li><code>gl.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN</code>: Number of primitives that are written to transform feedback buffers.</li> </ul>",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the query object target. Must be <code>gl.CURRENT_QUERY</code> ."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> object.</p>"
    },
    "webgl2renderingcontext.getqueryparameter": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getqueryparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getQueryParameter()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns parameter\ninformation of a <a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> object.</p>",
      "parameters": {
        "query": "A <a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> object.",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying which information to return. Possible values: <ul> <li><code>gl.QUERY_RESULT</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> containing the query result.</li> <li><code>gl.QUERY_RESULT_AVAILABLE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> indicating whether or not a query result is available.</li> </ul>"
      },
      "returns": "<p>Depends on the <code>pname</code> parameter, either a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLuint\")}}\"><code>GLuint</code></a> or a\n  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a>.</p>"
    },
    "webgl2renderingcontext.getsamplerparameter": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getsamplerparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getSamplerParameter()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns parameter\ninformation of a <a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> object.</p>",
      "parameters": {
        "sampler": "A <a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> object.",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying which information to return. Possible values: <ul> <li><code>gl.TEXTURE_COMPARE_FUNC</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the texture comparison function.</li> <li><code>gl.TEXTURE_COMPARE_MODE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the texture comparison mode.</li> <li><code>gl.TEXTURE_MAG_FILTER</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the texture magnification filter.</li> <li><code>gl.TEXTURE_MAX_LOD</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a> indicating the maximum level-of-detail value.</li> <li><code>gl.TEXTURE_MIN_FILTER</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the texture minification filter</li> <li><code>gl.TEXTURE_MIN_LOD</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a> indicating the minimum level-of-detail value.</li> <li><code>gl.TEXTURE_WRAP_R</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the texture wrapping function for the texture coordinate r.</li> <li><code>gl.TEXTURE_WRAP_S</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the texture wrapping function for the texture coordinate s.</li> <li><code>gl.TEXTURE_WRAP_T</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the texture wrapping function for the texture coordinate t.</li> </ul>"
      },
      "returns": "<p>Depends on the <code>pname</code> parameter, either a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a> or a\n  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLfloat\")}}\"><code>GLfloat</code></a>.</p>"
    },
    "webgl2renderingcontext.getsyncparameter": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getsyncparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getSyncParameter()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns parameter\ninformation of a <a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object.</p>",
      "parameters": {
        "sync": "A <a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object.",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying which information to return. Possible values: <ul> <li><code>gl.OBJECT_TYPE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the type of the sync object (always <code>gl.SYNC_FENCE</code>).</li> <li><code>gl.SYNC_STATUS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the status of the sync object (<code>gl.SIGNALED</code> or <code>gl.UNSIGNALED</code>).</li> <li><code>gl.SYNC_CONDITION</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the sync objects' condition (always <code>gl.SYNC_GPU_COMMANDS_COMPLETE</code>).</li> <li><code>gl.SYNC_FLAGS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the flags with which the sync object was created (always 0 as no flags are supported).</li> </ul>"
      },
      "returns": "<p>Depends on the <code>pname</code> parameter, either a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a> or a\n  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLbitfield\")}}\"><code>GLbitfield</code></a>.</p>"
    },
    "webgl2renderingcontext.gettransformfeedbackvarying": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/gettransformfeedbackvarying",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getTransformFeedbackVarying()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns\ninformation about varying variables from <a href=\"$MDN_URL$/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a> buffers.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> .",
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the varying variable whose information to retrieve <code>.</code>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code></a> object.</p>"
    },
    "webgl2renderingcontext.getuniformblockindex": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getuniformblockindex",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getUniformBlockIndex()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> retrieves the index of\na uniform block within a <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> containing the uniform block.",
        "uniformName": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the name of the uniform block to whose index to retrieve."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLuint\")}}\"><code>GLuint</code></a> indicating the uniform block index.</p>"
    },
    "webgl2renderingcontext.getuniformindices": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/getuniformindices",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.getUniformIndices()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> retrieves the indices of a\nnumber of uniforms within a <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> containing uniforms whose indices to query.",
        "uniformNames": "An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the names of the uniforms to query."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLuint\")}}\"><code>GLuint</code></a> containing the uniform indices.</p>"
    },
    "webgl2renderingcontext.invalidateframebuffer": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/invalidateframebuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.invalidateFramebuffer()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> invalidates the contents\nof attachments in a framebuffer.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.FRAMEBUFFER</code>: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image.</li> <li><code>gl.DRAW_FRAMEBUFFER</code>: Equivalent to <code>gl.FRAMEBUFFER</code>. </li> <li><code>gl.READ_FRAMEBUFFER</code>: Used as a source for reading operations.</li> </ul>",
        "attachments": "An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the attachment points to invalidate. Possible values: <ul> <li><code>gl.COLOR_ATTACHMENT{0-15}</code>: Invalidates one of the framebuffer's color buffers.</li> <li><code>gl.DEPTH_ATTACHMENT</code>: Invalidates the framebuffer's depth buffer. </li> <li><code>gl.STENCIL_ATTACHMENT</code>: Invalidates the framebuffer's stencil buffer.</li> <li><code>gl.DEPTH_STENCIL_ATTACHMENT</code>: Invalidates both the framebuffer's depth and stencil buffer.</li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.invalidatesubframebuffer": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/invalidatesubframebuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.invalidateSubFramebuffer()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> invalidates\nportions of the contents of attachments in a framebuffer.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.FRAMEBUFFER</code>: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image.</li> <li><code>gl.DRAW_FRAMEBUFFER</code>: Equivalent to <code>gl.FRAMEBUFFER</code>. </li> <li><code>gl.READ_FRAMEBUFFER</code>: Used as a source for reading operations.</li> </ul>",
        "attachments": "An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the attachment points to invalidate. Possible values: <ul> <li><code>gl.COLOR_ATTACHMENT{0-15}</code>: Invalidates one of the framebuffer's color buffers.</li> <li><code>gl.DEPTH_ATTACHMENT</code>: Invalidates the framebuffer's depth buffer. </li> <li><code>gl.STENCIL_ATTACHMENT</code>: Invalidates the framebuffer's stencil buffer.</li> <li><code>gl.DEPTH_STENCIL_ATTACHMENT</code>: Invalidates both the framebuffer's depth and stencil buffer.</li> </ul>",
        "x": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the left origin of the pixel rectangle to invalidate.",
        "y": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the bottom origin of the pixel rectangle to invalidate.",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the pixel rectangle to invalidate.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the pixel rectangle to invalidate."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.isquery": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/isquery",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.isQuery()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns <code>true</code> if the\npassed object is a valid <a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> object.</p>",
      "parameters": {
        "query": "A <a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> object to test."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating whether the given object is a valid\n  <a href=\"$MDN_URL$/Web/API/WebGLQuery\"><code>WebGLQuery</code></a> object (<code>true</code>) or not (<code>false</code>).</p>"
    },
    "webgl2renderingcontext.issampler": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/issampler",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.isSampler()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns <code>true</code> if the\npassed object is a valid <a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> object.</p>",
      "parameters": {
        "sampler": "A <a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> object to test."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating whether the given object is a valid\n  <a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> object (<code>true</code>) or not (<code>false</code>).</p>"
    },
    "webgl2renderingcontext.issync": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/issync",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.isSync()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns <code>true</code> if the\npassed object is a valid <a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object.</p>",
      "parameters": {
        "sync": "A <a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object to test."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating whether the given object is a valid\n  <a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object (<code>true</code>) or not (<code>false</code>).</p>"
    },
    "webgl2renderingcontext.istransformfeedback": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/istransformfeedback",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.isTransformFeedback()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns <code>true</code>\nif the passed object is a valid <a href=\"$MDN_URL$/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a> object.</p>",
      "parameters": {
        "transformFeedback": "A <a href=\"$MDN_URL$/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a> object to test."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating whether the given object is a valid\n  <a href=\"$MDN_URL$/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a> object (<code>true</code>) or not\n  (<code>false</code>).</p>"
    },
    "webgl2renderingcontext.isvertexarray": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/isvertexarray",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.isVertexArray()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns <code>true</code> if the\npassed object is a valid <a href=\"$MDN_URL$/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a> object.</p>",
      "parameters": {
        "vertexArray": "A <a href=\"$MDN_URL$/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a> (VAO) object to test."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating whether the given object is a valid\n  <a href=\"$MDN_URL$/Web/API/WebGLVertexArrayObject\"><code>WebGLVertexArrayObject</code></a> object (<code>true</code>) or not\n  (<code>false</code>).</p>"
    },
    "webgl2renderingcontext.pausetransformfeedback": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/pausetransformfeedback",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.pauseTransformFeedback()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> pauses a transform\nfeedback operation.</p>",
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.readbuffer": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/readbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.readBuffer()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> selects a color buffer as the\nsource for pixels for subsequent calls to\n<a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/copyTexImage2D\" ><code>copyTexImage2D</code></a>,\n<a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/copyTexSubImage2D\" ><code>copyTexSubImage2D</code></a>,\n<a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/copyTexSubImage3D\" ><code>copyTexSubImage3D</code></a> or\n<a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/readPixels\" ><code>readPixels</code></a>.</p>",
      "parameters": {
        "src": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying a color buffer. Possible values: <ul> <li><code>gl.BACK</code>: Reads from the back color buffer.</li> <li><code>gl.NONE</code>: Reads from no color buffer.</li> <li><code>gl.COLOR_ATTACHMENT{0-15}</code>: Reads from one of the 16 color attachment buffers.</li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.renderbufferstoragemultisample": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/renderbufferstoragemultisample",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The\n<strong><code>WebGL2RenderingContext.renderbufferStorageMultisample()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns creates\nand initializes a renderbuffer object's data store and allows specifying a number of\nsamples to be used.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the target renderbuffer object. Possible values: <ul> <li><code>gl.RENDERBUFFER</code>: Buffer data storage for single images in a renderable internal format.</li> </ul>",
        "samples": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the number of samples to be used for the renderbuffer storage.",
        "internalFormat": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the internal format of the renderbuffer. Possible values (`gl.DEPTH_STENCIL` is not supported): <ul> <li><code>gl.R8</code></li> <li><code>gl.R8UI</code></li> <li><code>gl.R8I</code></li> <li><code>gl.R16UI</code></li> <li><code>gl.R16I</code></li> <li><code>gl.R32UI</code></li> <li><code>gl.R32I</code></li> <li><code>gl.RG8</code></li> <li><code>gl.RG8UI</code></li> <li><code>gl.RG8I</code></li> <li><code>gl.RG16UI</code></li> <li><code>gl.RG16I</code></li> <li><code>gl.RG32UI</code></li> <li><code>gl.RG32I</code></li> <li><code>gl.RGB8</code></li> <li><code>gl.RGBA8</code></li> <li><code>gl.SRGB8_ALPHA8</code></li> <li><code>gl.RGBA4</code></li> <li><code>gl.RGB565</code></li> <li><code>gl.RGB5_A1</code></li> <li><code>gl.RGB10_A2</code></li> <li><code>gl.RGBA8UI</code></li> <li><code>gl.RGBA8I</code></li> <li><code>gl.RGB10_A2UI</code></li> <li><code>gl.RGBA16UI</code></li> <li><code>gl.RGBA16I</code></li> <li><code>gl.RGBA32I</code></li> <li><code>gl.RGBA32UI</code></li> <li><code>gl.DEPTH_COMPONENT16</code></li> <li><code>gl.DEPTH_COMPONENT24</code></li> <li><code>gl.DEPTH_COMPONENT32F</code></li> <li><code>gl.DEPTH_STENCIL</code></li> <li><code>gl.DEPTH24_STENCIL8</code></li> <li><code>gl.DEPTH32F_STENCIL8</code></li> <li><code>gl.STENCIL_INDEX8</code></li> </ul>",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the renderbuffer in pixels.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the renderbuffer in pixels."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.resumetransformfeedback": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/resumetransformfeedback",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.resumeTransformFeedback()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> resumes a\ntransform feedback operation.</p>",
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.samplerparameter": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/samplerparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.samplerParameter[if]()</code></strong> methods\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> set\n<a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> parameters.</p>",
      "parameters": {
        "sampler": "A <a href=\"$MDN_URL$/Web/API/WebGLSampler\"><code>WebGLSampler</code></a> object.",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying which parameter to set. Possible values: <ul> <li><code>gl.TEXTURE_COMPARE_FUNC</code>: A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the texture comparison function.</li> <li><code>gl.TEXTURE_COMPARE_MODE</code>: A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the texture comparison mode.</li> <li><code>gl.TEXTURE_MAG_FILTER</code>: A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the texture magnification filter.</li> <li><code>gl.TEXTURE_MAX_LOD</code>: A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a> specifying the maximum level-of-detail value.</li> <li><code>gl.TEXTURE_MIN_FILTER</code>: A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the texture minification filter</li> <li><code>gl.TEXTURE_MIN_LOD</code>: A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a> specifying the minimum level-of-detail value.</li> <li><code>gl.TEXTURE_WRAP_R</code>: A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the texture wrapping function for the texture coordinate r.</li> <li><code>gl.TEXTURE_WRAP_S</code>: A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the texture wrapping function for the texture coordinate s.</li> <li><code>gl.TEXTURE_WRAP_T</code>: A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the texture wrapping function for the texture coordinate t.</li> </ul>",
        "param": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> ( <code>samplerParameteri</code> ) or a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a> ( <code>samplerParameterf</code> ) specifying a value for <code>pname</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.teximage3d": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/teximage3d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.texImage3D()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API </a>specifies a three-dimensional\ntexture image.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values: <ul> <li><code>gl.TEXTURE_3D</code>: A three-dimensional texture.</li> <li><code>gl.TEXTURE_2D_ARRAY</code>: A two-dimensional array texture.</li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the level of detail. Level 0 is the base image level and level <em>n</em> is the <em>n</em> th mipmap reduction level.",
        "internalformat": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the color components in the texture. Possible values: <ul> <li><code>gl.ALPHA</code>: Discards the red, green and blue components and reads the alpha component.</li> <li><code>gl.RGB</code>: Discards the alpha components and reads the red, green and blue components.</li> <li><code>gl.RGBA</code>: Red, green, blue and alpha components are read from the color buffer.</li> <li><code>gl.LUMINANCE</code>: Each color component is a luminance component, alpha is 1.0.</li> <li><code>gl.LUMINANCE_ALPHA</code>: Each component is a luminance/alpha component. </li> <li><code>gl.R8</code></li> <li><code>gl.R16F</code></li> <li><code>gl.</code>R32F</li> <li><code>gl.R8UI</code></li> <li><code>gl.RG8</code></li> <li><code>gl.RG16F</code></li> <li><code>gl.RG32F</code></li> <li><code>gl.RGUI</code></li> <li><code>gl.RGB8</code></li> <li><code>gl.SRGB8</code></li> <li><code>gl.RGB565</code></li> <li><code>gl.R11F_G11F_B10F</code></li> <li><code>gl.RGB9_E5</code></li> <li><code>gl.RGB16F</code></li> <li><code>gl.RGB32F</code></li> <li><code>gl.RGB8UI</code></li> <li><code>gl.RGBA8</code></li> <li><code>gl.SRGB8_ALPHA8</code></li> <li><code>gl.RGB5_A1</code></li> <li><code>gl.RGBA4444</code></li> <li><code>gl.RGBA16F</code></li> <li><code>gl.RGBA32F</code></li> <li><code>gl.RGBA8UI</code></li> </ul>",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture.",
        "depth": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the depth of the texture.",
        "border": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the width of the border. Must be 0.",
        "format": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the format of the texel data. The correct combinations with <code>internalformat</code> are listed in <a href=\"https://www.khronos.org/registry/webgl/specs/latest/2.0/#TEXTURE_TYPES_FORMATS_FROM_DOM_ELEMENTS_TABLE\" class=\"external\" rel=\" noopener\">this table</a> .",
        "type": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the data type of the texel data. Possible values: <ul> <li><code>gl.UNSIGNED_BYTE</code>: 8 bits per channel for <code>gl.RGBA</code></li> <li><code>gl.UNSIGNED_SHORT_5_6_5</code>: 5 red bits, 6 green bits, 5 blue bits. </li> <li><code>gl.UNSIGNED_SHORT_4_4_4_4</code>: 4 red bits, 4 green bits, 4 blue bits, 4 alpha bits.</li> <li><code>gl.UNSIGNED_SHORT_5_5_5_1</code>: 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit.</li> <li><code>gl.BYTE</code></li> <li><code>gl.UNSIGNED_SHORT</code></li> <li><code>gl.SHORT</code></li> <li><code>gl.UNSIGNED_INT</code></li> <li><code>gl.INT</code></li> <li><code>gl.HALF_FLOAT</code></li> <li><code>gl.FLOAT</code></li> <li><code>gl.UNSIGNED_INT_2_10_10_10_REV</code></li> <li><code>gl.UNSIGNED_INT_10F_11F_11F_REV</code></li> <li><code>gl.UNSIGNED_INT_5_9_9_9_REV</code></li> <li><code>gl.UNSIGNED_INT_24_8</code></li> <li><code>gl.FLOAT_32_UNSIGNED_INT_24_8_REV</code> (pixels must be <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a>)</li> </ul>",
        "source": "One of the following objects can be used as a pixel source for the texture: <ul> <li><a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/ImageData\"><code>ImageData</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>.</li> </ul>",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> byte offset into the <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> 's data store. Used to upload data to the currently bound <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> from the <code>WebGLBuffer</code> bound to the <code>PIXEL_UNPACK_BUFFER</code> target."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.texstorage2d": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/texstorage2d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.texStorage2D()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API </a>specifies all levels of\ntwo-dimensional texture storage.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP</code>: A cube-mapped texture.</li> </ul>",
        "levels": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the number of texture levels.",
        "internalformat": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the texture store format. Possible values: <ul> <li><code>gl.R8</code></li> <li><code>gl.R16F</code></li> <li><code>gl.R32F</code></li> <li><code>gl.R8UI</code></li> <li><code>gl.RG8</code></li> <li><code>gl.RG16F</code></li> <li><code>gl.RG32F</code></li> <li><code>gl.RG8UI</code></li> <li><code>gl.RGB8</code></li> <li><code>gl.SRGB8</code></li> <li><code>gl.RGB565</code></li> <li><code>gl.R11F_G11F_B10F</code></li> <li><code>gl.RGB9_E5</code></li> <li><code>gl.RGB16F</code></li> <li><code>gl.RGB32F</code></li> <li><code>gl.RGB8UI</code></li> <li><code>gl.RGBA8</code></li> <li><code>gl.SRGB8_APLHA8</code></li> <li><code>gl.RGB5_A1</code></li> <li><code>gl.RGBA4</code></li> <li><code>gl.RGBA16F</code></li> <li><code>gl.RGBA32F</code></li> <li><code>gl.RGBA8UI</code></li> </ul> Unlike OpenGL 3.0, WebGL 2 <strong>doesn't support</strong> the following ETC2 and EAC compressed texture formats (see <a href=\"https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.37\" class=\"external\" rel=\" noopener\">section 5.37</a> in the WebGL 2 spec). You might be able to enable them via the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_etc\"><code>WEBGL_compressed_texture_etc</code></a> extension, though.<br> <ul> <li><code>gl.COMPRESSED_R11_EAC</code></li> <li><code>gl.COMPRESSED_SIGNED_R11_EAC</code></li> <li><code>gl.COMPRESSED_RG11_EAC</code></li> <li><code>gl.COMPRESSED_SIGNED_RG11_EAC</code></li> <li><code>gl.COMPRESSED_RGB8_ETC2</code></li> <li><code>gl.COMPRESSED_RGBA8_ETC2_EAC</code></li> <li><code>gl.COMPRESSED_SRGB8_ETC2</code></li> <li><code>gl.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC</code></li> <li><code>gl.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> <li><code>gl.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> </ul>",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.texstorage3d": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/texstorage3d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.texStorage3D()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API </a>specifies all levels of a\nthree-dimensional texture or two-dimensional array texture.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values: <ul> <li><code>gl.TEXTURE_3D</code>: A three-dimensional texture.</li> <li><code>gl.TEXTURE_2D_ARRAY</code>: A two-dimensional array texture.</li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the number of texture levels.",
        "internalformat": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the texture store format. Possible values: <ul> <li><code>gl.R8</code></li> <li><code>gl.R16F</code></li> <li><code>gl.</code>R32F</li> <li><code>gl.R8UI</code></li> <li><code>gl.RG8</code></li> <li><code>gl.RG16F</code></li> <li><code>gl.RG32F</code></li> <li><code>gl.RGUI</code></li> <li><code>gl.RGB8</code></li> <li><code>gl.SRGB8</code></li> <li><code>gl.RGB565</code></li> <li><code>gl.R11F_G11F_B10F</code></li> <li><code>gl.RGB9_E5</code></li> <li><code>gl.RGB16F</code></li> <li><code>gl.RGB32F</code></li> <li><code>gl.RGB8UI</code></li> <li><code>gl.RGBA8</code></li> <li><code>gl.SRGB_APLHA8</code></li> <li><code>gl.RGB5_A1</code></li> <li><code>gl.RGBA4444</code></li> <li><code>gl.RGBA16F</code></li> <li><code>gl.RGBA32F</code></li> <li><code>gl.RGBA8UI</code></li> <li><code>gl.COMPRESSED_R11_EAC</code></li> <li><code>gl.COMPRESSED_SIGNED_R11_EAC</code></li> <li><code>gl.COMPRESSED_RG11_EAC</code></li> <li><code>gl.COMPRESSED_SIGNED_RG11_EAC</code></li> <li><code>gl.COMPRESSED_RGB8_ETC2</code></li> <li><code>gl.COMPRESSED_RGBA8_ETC2_EAC</code></li> <li><code>gl.COMPRESSED_SRGB8_ETC2</code></li> <li><code>gl.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC</code></li> <li><code>gl.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> <li><code>gl.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> </ul>",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture.",
        "depth": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the depth of the texture."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.texsubimage3d": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/texsubimage3d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.texSubImage3D()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API </a>specifies a sub-rectangle of the\ncurrent texture.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values: <ul> <li><code>gl.TEXTURE_3D</code>: A three-dimensional texture.</li> <li><code>gl.TEXTURE_2D_ARRAY</code>: A two-dimensional array texture.</li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the level of detail. Level 0 is the base image level and level <em>n</em> is the <em>n</em> th mipmap reduction level.",
        "xoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the x offset within the texture image.",
        "yoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the y offset within the texture image.",
        "zoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the z offset within the texture image.",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture.",
        "depth": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the depth of the texture.",
        "format": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the format of the texel data. Possible values: <ul> <li><code>gl.ALPHA</code>: Discards the red, green and blue components and reads the alpha component.</li> <li><code>gl.RGB</code>: Discards the alpha components and reads the red, green and blue components.</li> <li><code>gl.RGBA</code>: Red, green, blue and alpha components are read from the color buffer.</li> <li><code>gl.LUMINANCE</code>: Each color component is a luminance component, alpha is 1.0.</li> <li><code>gl.LUMINANCE_ALPHA</code>: Each component is a luminance/alpha component. </li> <li><code>gl.R8</code></li> <li><code>gl.R16F</code></li> <li><code>gl.</code>R32F</li> <li><code>gl.R8UI</code></li> <li><code>gl.RG8</code></li> <li><code>gl.RG16F</code></li> <li><code>gl.RG32F</code></li> <li><code>gl.RGUI</code></li> <li><code>gl.RGB8</code></li> <li><code>gl.SRGB8</code></li> <li><code>gl.RGB565</code></li> <li><code>gl.R11F_G11F_B10F</code></li> <li><code>gl.RGB9_E5</code></li> <li><code>gl.RGB16F</code></li> <li><code>gl.RGB32F</code></li> <li><code>gl.RGB8UI</code></li> <li><code>gl.RGBA8</code></li> <li><code>gl.SRGB_APLHA8</code></li> <li><code>gl.RGB5_A1</code></li> <li><code>gl.RGBA4444</code></li> <li><code>gl.RGBA16F</code></li> <li><code>gl.RGBA32F</code></li> <li><code>gl.RGBA8UI</code></li> </ul>",
        "type": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the data type of the texel data. Possible values: <ul> <li><code>gl.UNSIGNED_BYTE</code>: 8 bits per channel for <code>gl.RGBA</code></li> <li><code>gl.UNSIGNED_SHORT_5_6_5</code>: 5 red bits, 6 green bits, 5 blue bits. </li> <li><code>gl.UNSIGNED_SHORT_4_4_4_4</code>: 4 red bits, 4 green bits, 4 blue bits, 4 alpha bits.</li> <li><code>gl.UNSIGNED_SHORT_5_5_5_1</code>: 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit.</li> <li><code>gl.BYTE</code></li> <li><code>gl.UNSIGNED_SHORT</code></li> <li><code>gl.SHORT</code></li> <li><code>gl.UNSIGNED_INT</code></li> <li><code>gl.INT</code></li> <li><code>gl.HALF_FLOAT</code></li> <li><code>gl.FLOAT</code></li> <li><code>gl.UNSIGNED_INT_2_10_10_10_REV</code></li> <li><code>gl.UNSIGNED_INT_10F_11F_11F_REV</code></li> <li><code>gl.UNSIGNED_INT_5_9_9_9_REV</code></li> <li><code>gl.UNSIGNED_INT_24_8</code></li> <li><code>gl.FLOAT_32_UNSIGNED_INT_24_8_REV</code> (pixels must be <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a>)</li> </ul>",
        "pixels": "One of the following objects can be used as a pixel source for the texture: <ul> <li><a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a>, <ul> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a> must be used if <code>type</code> is <code>gl.UNSIGNED_BYTE</code>.</li> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint16Array\"><code>Uint16Array</code></a> must be used if <code>type</code> is either <code>gl.UNSIGNED_SHORT_5_6_5</code>, <code>gl.UNSIGNED_SHORT_4_4_4_4</code>, <code>gl.UNSIGNED_SHORT_5_5_5_1</code>, or <code>ext.HALF_FLOAT_OES</code>. </li> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> must be used if <code>type</code> is <code>gl.FLOAT</code>.</li> </ul> </li> <li><a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/ImageData\"><code>ImageData</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>.</li> </ul>",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> byte offset into the <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> 's data store. Used to upload data to the currently bound <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> from the <code>WebGLBuffer</code> bound to the <code>PIXEL_UNPACK_BUFFER</code> target."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.transformfeedbackvaryings": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/transformfeedbackvaryings",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.transformFeedbackVaryings()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> specifies values\nto record in <a href=\"$MDN_URL$/Web/API/WebGLTransformFeedback\"><code>WebGLTransformFeedback</code></a> buffers.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> .",
        "varyings": "An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the names of the varying variables to use.",
        "bufferMode": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the mode to use when capturing the varying variables. Either <code>gl.INTERLEAVED_ATTRIBS</code> or <code>gl.SEPARATE_ATTRIBS</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.uniform": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/uniform",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.uniform[1234][uif][v]()</code></strong>\nmethods of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specify values of\nuniform variables.</p>\n<div class=\"note notecard\">\n<p><code>ui</code> stands for <em>unsigned integer</em>, <code>i</code> for <em>integer,\n</em><code>f</code> for <em>float</em>, and <code>v</code> for <em>vector.</em><br>\nNot all combinations are valid: <code>u</code> cannot be combined with <code>f</code>.\nSee the syntax table below. Equivalent Regex: <code>uniform[1234](u?i|f)v?</code></p>\n</div>",
      "parameters": {
        "location": "A <a href=\"$MDN_URL$/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code></a> object containing the location of the uniform attribute to modify.",
        "data, v0, v1, v2, v3": "A new value to be used for the uniform variable. Possible types: <ul> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> for unsigned integer values (methods with <code>ui</code>), for integer values (methods with <code>i</code>), or for floats (methods with <code>f</code>).</li> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a> for unsigned integer vector methods (methods with <code>uiv</code>).</li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.uniformblockbinding": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/uniformblockbinding",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.uniformBlockBinding()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> assigns binding points\nfor active uniform blocks.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> containing the active uniform block whose binding to assign.",
        "uniformBlockIndex": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the active uniform block within the program.",
        "uniformBlockBinding": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the binding point to which to bind the uniform block."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.uniformmatrix": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/uniformmatrix",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.uniformMatrix[234]x[234]fv()</code></strong>\nmethods of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> specify matrix\nvalues for uniform variables.</p>\n<div class=\"note notecard\">\n<p>There are no <code>2x2</code>, <code>3x3</code>, and <code>4x4</code> versions of\nthis method. They are abbreviated in <code>2</code>, <code>3</code>, and\n<code>4</code>, respectively. See the syntax below.</p>\n</div>",
      "parameters": {
        "location": "A <a href=\"$MDN_URL$/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code></a> object containing the location of the uniform attribute to modify.",
        "transpose": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> specifying whether to transpose the matrix. Must be <code>false</code> .",
        "data": "A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> of float values."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.vertexattribdivisor": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/vertexattribdivisor",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.vertexAttribDivisor()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> modifies the rate at\nwhich generic vertex attributes advance when rendering multiple instances of primitives\nwith <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/drawArraysInstanced\" ><code>gl.drawArraysInstanced()</code></a> and\n<a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/drawElementsInstanced\" ><code>gl.drawElementsInstanced()</code></a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> When using <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\" >WebGL 1</a>, the <a href=\"$MDN_URL$/Web/API/ANGLE_instanced_arrays\"><code>ANGLE_instanced_arrays</code></a> extension can provide this method,\ntoo.</p>\n</div>",
      "parameters": {
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the generic vertex attributes.",
        "divisor": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the number of instances that will pass between updates of the generic attribute."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.vertexattribi": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/vertexattribi",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.vertexAttribI4[u]i[v]()</code></strong>\nmethods of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> specify integer\nvalues for generic vertex attributes.</p>",
      "parameters": {
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the position of the vertex attribute to be modified.",
        "v0, v1, v2, v3": "An integer <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> for the vertex attribute value.",
        "value": "A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a>/<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a> or sequences of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a>/ <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> for integer vector vertex attribute values."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.vertexattribipointer": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/vertexattribipointer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGL2RenderingContext.vertexAttribIPointer()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> specifies integer data\nformats and locations of vertex attributes in a vertex attributes array.</p>",
      "parameters": {
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the vertex attribute that is to be modified.",
        "size": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the number of components per vertex attribute. Must be 1, 2, 3, or 4.",
        "type": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the data type of each component in the array. Must be one of: <code>gl.BYTE</code> , <code>gl.UNSIGNED_BYTE</code> , <code>gl.SHORT</code> , <code>gl.UNSIGNED_SHORT</code> , <code>gl.INT</code> , or <code>gl.UNSIGNED_INT</code> .",
        "stride": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the offset in bytes between the beginning of consecutive vertex attributes.",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying an offset in bytes of the first component in the vertex attribute array. Must be a multiple of <code>type</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webgl2renderingcontext.waitsync": {
      "url": "$MDN_URL$/web/api/webgl2renderingcontext/waitsync",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <code><strong>WebGL2RenderingContext.waitSync()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a> returns immediately, but waits on\nthe GL server until the given <a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object is signaled.</p>\n<p>The method is a no-op in the absence of the possibility of synchronizing between\nmultiple GL contexts.</p>",
      "parameters": {
        "sync": "A <a href=\"$MDN_URL$/Web/API/WebGLSync\"><code>WebGLSync</code></a> object on which to wait on.",
        "flags": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLbitfield</code></a> specifying a bitwise combination of flags controlling the flushing behavior. Must be <code>0</code> (exists for extensions only).",
        "timeout": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint64</code></a> specifying a timeout the server should wait before continuing. Must be <code>gl.TIMEOUT_IGNORED</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webglactiveinfo": {
      "url": "$MDN_URL$/web/api/webglactiveinfo",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLActiveInfo</strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> and represents the information returned by calling the <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getActiveAttrib\"><code>WebGLRenderingContext.getActiveAttrib()</code></a> and <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getActiveUniform\"><code>WebGLRenderingContext.getActiveUniform()</code></a> methods.</p>"
    },
    "webglactiveinfo.name": {
      "url": "$MDN_URL$/web/api/webglactiveinfo/name",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The read-only <strong><code>WebGLActiveInfo.name</code></strong> property represents the name of the requested data returned by calling the <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getActiveAttrib\" ><code>getActiveAttrib()</code></a> or <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getActiveUniform\" ><code>getActiveUniform()</code></a> methods.</p>"
    },
    "webglactiveinfo.size": {
      "url": "$MDN_URL$/web/api/webglactiveinfo/size",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The read-only <strong><code>WebGLActiveInfo.size</code></strong> property is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> representing the size of the requested data returned by calling the <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getActiveAttrib\" ><code>getActiveAttrib()</code></a> or <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getActiveUniform\" ><code>getActiveUniform()</code></a> methods.</p>"
    },
    "webglactiveinfo.type": {
      "url": "$MDN_URL$/web/api/webglactiveinfo/type",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The read-only <strong><code>WebGLActiveInfo.type</code></strong> property represents the type of the requested data returned by calling the <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getActiveAttrib\" ><code>getActiveAttrib()</code></a> or <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getActiveUniform\" ><code>getActiveUniform()</code></a> methods.</p>"
    },
    "webglbuffer": {
      "url": "$MDN_URL$/web/api/webglbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLBuffer</strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> and represents an opaque buffer object storing data such as vertices or colors.</p>"
    },
    "webglcontextevent": {
      "url": "$MDN_URL$/web/api/webglcontextevent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "49",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebContextEvent</strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> and is an interface for an event that is generated in response to a status change to the WebGL rendering context.</p>"
    },
    "webglcontextevent.statusmessage": {
      "url": "$MDN_URL$/web/api/webglcontextevent/statusmessage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "49",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The read-only <code><strong>WebGLContextEvent.statusMessage</strong></code> property contains additional event status information, or is an empty string if no additional information is available.</p>"
    },
    "webglframebuffer": {
      "url": "$MDN_URL$/web/api/webglframebuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLFramebuffer</strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> and represents a collection of buffers that serve as a rendering destination.</p>"
    },
    "webglprogram": {
      "url": "$MDN_URL$/web/api/webglprogram",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>WebGLProgram</strong></code> is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> and is a combination of two compiled <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a>s consisting of a vertex shader and a fragment shader (both written in GLSL).</span> To create a <code>WebGLProgram</code>, call the GL context's <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/createProgram\" ><code>createProgram()</code></a> function. After attaching the shader programs using <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/attachShader\" ><code>attachShader()</code></a>, you link them into a usable program. This is shown in the code below.</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>var program = gl.createProgram();\n// Attach pre-existing shaders\ngl.attachShader(program, vertexShader);\ngl.attachShader(program, fragmentShader);\ngl.linkProgram(program);\nif ( !gl.getProgramParameter( program, gl.LINK_STATUS) ) {\n  var info = gl.getProgramInfoLog(program);\n  throw 'Could not compile WebGL program. \\n\\n' + info;\n}\n</code></pre></div>\n<p>See <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> for information on creating the <code>vertexShader</code> and <code>fragmentShader</code> in the above example.</p>"
    },
    "webglquery": {
      "url": "$MDN_URL$/web/api/webglquery",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43"
      },
      "doc": "<p>The <strong><code>WebGLQuery</code></strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2</a> API and provides ways to asynchronously query for information. By default, occlusion queries and primitive queries are available.</p>\n<p>Another kind of queries are disjoint timer queries, which allow you to measure performance and profiling of your GPU. Disjoint timer queries are available with the <a href=\"$MDN_URL$/Web/API/EXT_disjoint_timer_query\"><code>EXT_disjoint_timer_query</code></a> extension only.</p>\n<p>When working with <code>WebGLQuery</code> objects, the following methods of the <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a> are useful:</p>\n<ul>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/createQuery\"><code>WebGL2RenderingContext.createQuery()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/deleteQuery\"><code>WebGL2RenderingContext.deleteQuery()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/isQuery\"><code>WebGL2RenderingContext.isQuery()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/beginQuery\"><code>WebGL2RenderingContext.beginQuery()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/endQuery\"><code>WebGL2RenderingContext.endQuery()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/getQuery\"><code>WebGL2RenderingContext.getQuery()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/getQueryParameter\"><code>WebGL2RenderingContext.getQueryParameter()</code></a></li>\n</ul>"
    },
    "webglrenderbuffer": {
      "url": "$MDN_URL$/web/api/webglrenderbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLRenderbuffer</strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> and represents a buffer that can contain an image, or can be source or target of an rendering operation.</p>"
    },
    "webglrenderingcontext": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<div id=\"Summary\">\n<p><span class=\"seoSummary\">The <code><strong>WebGLRenderingContext</strong></code> interface provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element.</span></p>\n<p>To get an access to a WebGL context for 2D and/or 3D graphics rendering, call <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement/getContext\" ><code>getContext()</code></a> on a <code>&lt;canvas&gt;</code> element, supplying \"webgl\" as the argument:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>var canvas = document.getElementById('myCanvas');\nvar gl = canvas.getContext('webgl');\n</code></pre></div>\n<p>Once you have the WebGL rendering context for a canvas, you can render within it. The <a href=\"$MDN_URL$/Web/API/WebGL_API/Tutorial\" >WebGL tutorial</a> has more information, examples, and resources on how to get started with WebGL.</p>\n<p>If you require a WebGL 2.0 context, see <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a>; this supplies access to an implementation of OpenGL ES 3.0 graphics.</p>\n</div>"
    },
    "webglrenderingcontext.activetexture": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/activetexture",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.activeTexture()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies which texture unit to\nmake active.</p>",
      "parameters": {
        "texture": "The texture unit to make active. The value is a <code>gl.TEXTURE<em>I</em></code> where <em>I</em> is within the range from 0 to <code>gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.attachshader": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/attachshader",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLRenderingContext.attachShader()</strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> attaches either a fragment or\nvertex <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> to a <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> .",
        "shader": "A fragment or vertex  <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> ."
      }
    },
    "webglrenderingcontext.bindattriblocation": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/bindattriblocation",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.bindAttribLocation()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> binds a generic vertex index\nto an attribute variable.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> object to bind.",
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the generic vertex to bind.",
        "name": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the name of the variable to bind to the generic vertex index. This name cannot start with \"webgl_\" or \"_webgl_\", as these are reserved for use by WebGL."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.bindbuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/bindbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.bindBuffer()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> binds a given\n<a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> to a target.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.ARRAY_BUFFER</code>: Buffer containing vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data.</li> <li><code>gl.ELEMENT_ARRAY_BUFFER</code>: Buffer used for element indices.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.COPY_READ_BUFFER</code>: Buffer for copying from one buffer object to another.</li> <li><code>gl.COPY_WRITE_BUFFER</code>: Buffer for copying from one buffer object to another.</li> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER</code>: Buffer for transform feedback operations.</li> <li><code>gl.UNIFORM_BUFFER</code>: Buffer used for storing uniform blocks.</li> <li><code>gl.PIXEL_PACK_BUFFER</code>: Buffer used for pixel transfer operations.</li> <li><code>gl.PIXEL_UNPACK_BUFFER</code>: Buffer used for pixel transfer operations.</li> </ul> </li> </ul>",
        "buffer": "A <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> to bind."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.bindframebuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/bindframebuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.bindFramebuffer()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> binds a given\n<a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> to a target.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.FRAMEBUFFER</code>: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.DRAW_FRAMEBUFFER</code>: Equivalent to <code>gl.FRAMEBUFFER</code>. Used as a destination for drawing, rendering, clearing, and writing operations.</li> <li><code>gl.READ_FRAMEBUFFER</code>: Used as a source for reading operations. </li> </ul> </li> </ul>",
        "framebuffer": "A <a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> object to bind. If <code>framebuffer</code> is null, then the canvas (which has no <a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> object) is bound."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.bindrenderbuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/bindrenderbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.bindRenderbuffer()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> binds a given\n<a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a> to a target, which must be\n<code>gl.RENDERBUFFER</code>.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.RENDERBUFFER</code>: Buffer data storage for single images in a renderable internal format.</li> </ul>",
        "renderbuffer": "A <a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a> object to bind."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.bindtexture": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/bindtexture",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.bindTexture()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> binds a given\n<a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> to a target (binding point).</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP</code>: A cube-mapped texture.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.TEXTURE_3D</code>: A three-dimensional texture.</li> <li><code>gl.TEXTURE_2D_ARRAY</code>: A two-dimensional array texture.</li> </ul> </li> </ul>",
        "texture": "A <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> object to bind."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.blendcolor": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/blendcolor",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.blendColor()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> is used to set the source and\ndestination blending factors.</p>",
      "parameters": {
        "red": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> for the red component in the range of 0 to 1.",
        "green": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> for the green component in the range of 0 to 1.",
        "blue": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> for the blue component in the range of 0 to 1.",
        "alpha": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> for the alpha component (transparency) in the range of 0 to 1."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.blendequation": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/blendequation",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.blendEquation()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> is used to set both the RGB blend\nequation and alpha blend equation to a single equation.</p>\n<p>The blend equation determines how a new pixel is combined with a pixel already in the\n<a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a>.</p>",
      "parameters": {
        "mode": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying how source and destination colors are combined. Must be either: <ul> <li><code>gl.FUNC_ADD</code>: source + destination,</li> <li><code>gl.FUNC_SUBTRACT</code>: source - destination,</li> <li><code>gl.FUNC_REVERSE_SUBTRACT</code>: destination - source</li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_blend_minmax\"><code>EXT_blend_minmax</code></a> extension: <ul> <li><code>ext.MIN_EXT</code>: Minimum of source and destination,</li> <li><code>ext.MAX_EXT</code>: Maximum of source and destination.</li> </ul> </li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.MIN</code>: Minimum of source and destination,</li> <li><code>gl.MAX</code>: Maximum of source and destination.</li> </ul> </li> </ul> <strong>default value</strong>: <code>gl.FUNC_ADD</code>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.blendequationseparate": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/blendequationseparate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.blendEquationSeparate()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> is used to set the RGB\nblend equation and alpha blend equation separately.</p>\n<p>The blend equation determines how a new pixel is combined with a pixel already in the\n<a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a>.</p>",
      "parameters": {
        "modeRGB": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying how the red, green and blue components of source and destination colors are combined. Must be either: <ul> <li><code>gl.FUNC_ADD</code>: source + destination (default value),</li> <li><code>gl.FUNC_SUBTRACT</code>: source - destination,</li> <li><code>gl.FUNC_REVERSE_SUBTRACT</code>: destination - source,</li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_blend_minmax\"><code>EXT_blend_minmax</code></a> extension: <ul> <li><code>ext.MIN_EXT</code>: Minimum of source and destination,</li> <li><code>ext.MAX_EXT</code>: Maximum of source and destination.</li> </ul> </li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.MIN</code>: Minimum of source and destination,</li> <li><code>gl.MAX</code>: Maximum of source and destination.</li> </ul> </li> </ul>",
        "modeAlpha": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying how the alpha component (transparency) of source and destination colors are combined. Must be either: <ul> <li><code>gl.FUNC_ADD</code>: source + destination (default value),</li> <li><code>gl.FUNC_SUBTRACT</code>: source - destination,</li> <li><code>gl.FUNC_REVERSE_SUBTRACT</code>: destination - source,</li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_blend_minmax\"><code>EXT_blend_minmax</code></a> extension: <ul> <li><code>ext.MIN_EXT</code>: Minimum of source and destination,</li> <li><code>ext.MAX_EXT</code>: Maximum of source and destination.</li> </ul> </li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.MIN</code>: Minimum of source and destination,</li> <li><code>gl.MAX</code>: Maximum of source and destination.</li> </ul> </li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.blendfunc": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/blendfunc",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.blendFunc()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> defines which function is used for\nblending pixel arithmetic.</p>",
      "parameters": {
        "sfactor": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\"><code>WebGL_API.Types</code></a> specifying a multiplier for the source blending factors. The default value is <code>gl.ONE</code> . For possible values, see below.",
        "dfactor": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\"><code>WebGL_API.Types</code></a> specifying a multiplier for the destination blending factors. The default value is <code>gl.ZERO</code> . For possible values, see below."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.blendfuncseparate": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/blendfuncseparate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.blendFuncSeparate()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> defines which function is used\nfor blending pixel arithmetic for RGB and alpha components separately.</p>",
      "parameters": {
        "srcRGB": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\"><code>WebGL_API.Types</code></a> specifying a multiplier for the red, green and blue (RGB) source blending factors. The default value is <code>gl.ONE</code> . For possible values, see below.",
        "dstRGB": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\"><code>WebGL_API.Types</code></a> specifying a multiplier for the red, green and blue (RGB) destination blending factors. The default value is <code>gl.ZERO</code> . For possible values, see below.",
        "srcAlpha": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\"><code>WebGL_API.Types</code></a> specifying a multiplier for the alpha source blending factor. The default value is <code>gl.ONE</code> . For possible values, see below.",
        "dstAlpha": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\"><code>WebGL_API.Types</code></a> specifying a multiplier for the alpha destination blending factor. The default value is <code>gl.ZERO</code> . For possible values, see below."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.bufferdata": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/bufferdata",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.bufferData()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> initializes and creates the\nbuffer object's data store.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.ARRAY_BUFFER</code>: Buffer containing vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data.</li> <li><code>gl.ELEMENT_ARRAY_BUFFER</code>: Buffer used for element indices. </li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.COPY_READ_BUFFER</code>: Buffer for copying from one buffer object to another.</li> <li><code>gl.COPY_WRITE_BUFFER</code>: Buffer for copying from one buffer object to another.</li> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER</code>: Buffer for transform feedback operations.</li> <li><code>gl.UNIFORM_BUFFER</code>: Buffer used for storing uniform blocks.</li> <li><code>gl.PIXEL_PACK_BUFFER</code>: Buffer used for pixel transfer operations.</li> <li><code>gl.PIXEL_UNPACK_BUFFER</code>: Buffer used for pixel transfer operations.</li> </ul> </li> </ul>",
        "size": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizeiptr</code></a> setting the size in bytes of the buffer object's data store.",
        "srcData": "An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> ,  <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\"><code>SharedArrayBuffer</code></a> or one of the <a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a> typed array types that will be copied into the data store. If <code>null</code> , a data store is still created, but the content is uninitialized and undefined.",
        "usage": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the intended usage pattern of the data store for optimization purposes. Possible values: <ul> <li><code>gl.STATIC_DRAW</code>: The contents are intended to be specified once by the application, and used many times as the source for WebGL drawing and image specification commands.</li> <li><code>gl.DYNAMIC_DRAW</code>: The contents are intended to be respecified repeatedly by the application, and used many times as the source for WebGL drawing and image specification commands.</li> <li><code>gl.STREAM_DRAW</code>: The contents are intended to be specified once by the application, and used at most a few times as the source for WebGL drawing and image specification commands.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.STATIC_READ</code>: The contents are intended to be specified once by reading data from WebGL, and queried many times by the application.</li> <li><code>gl.DYNAMIC_READ</code>: The contents are intended to be respecified repeatedly by reading data from WebGL, and queried many times by the application.</li> <li><code>gl.STREAM_READ</code>: The contents are intended to be specified once by reading data from WebGL, and queried at most a few times by the application</li> <li><code>gl.STATIC_COPY</code>: The contents are intended to be specified once by reading data from WebGL, and used many times as the source for WebGL drawing and image specification commands. </li> <li><code>gl.DYNAMIC_COPY</code>: The contents are intended to be respecified repeatedly by reading data from WebGL, and used many times as the source for WebGL drawing and image specification commands.</li> <li><code>gl.STREAM_COPY</code>: The contents are intended to be specified once by reading data from WebGL, and used at most a few times as the source for WebGL drawing and image specification commands.</li> </ul> </li> </ul>",
        "srcOffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the element index offset where to start reading the buffer.",
        "length": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> defaulting to 0."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.buffersubdata": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/buffersubdata",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.bufferSubData()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> updates a subset of a buffer\nobject's data store.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.ARRAY_BUFFER</code>: Buffer containing vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data.</li> <li><code>gl.ELEMENT_ARRAY_BUFFER</code>: Buffer used for element indices.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.COPY_READ_BUFFER</code>: Buffer for copying from one buffer object to another.</li> <li><code>gl.COPY_WRITE_BUFFER</code>: Buffer for copying from one buffer object to another.</li> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER</code>: Buffer for transform feedback operations.</li> <li><code>gl.UNIFORM_BUFFER</code>: Buffer used for storing uniform blocks.</li> <li><code>gl.PIXEL_PACK_BUFFER</code>: Buffer used for pixel transfer operations.</li> <li><code>gl.PIXEL_UNPACK_BUFFER</code>: Buffer used for pixel transfer operations.</li> </ul> </li> </ul>",
        "dstByteOffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying an offset in bytes where the data replacement will start.",
        "srcData": "An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> ,  <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\"><code>SharedArrayBuffer</code></a> or one of the <a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a> typed array types that will be copied into the data store.",
        "srcOffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the element index offset where to start reading the buffer.",
        "length": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> defaulting to 0."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.canvas": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/canvas",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <code><strong>WebGLRenderingContext.canvas</strong></code> property is a read-only\nreference to the <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> or <a href=\"$MDN_URL$/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a>\nobject that is associated with the context. It might be <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a> if it is not\nassociated with a <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element or an <a href=\"$MDN_URL$/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a>\nobject.</p>",
      "returns": "<p>Either a <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> or <a href=\"$MDN_URL$/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a> object or\n  <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a>.</p>"
    },
    "webglrenderingcontext.checkframebufferstatus": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/checkframebufferstatus",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.checkFramebufferStatus()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns the completeness\nstatus of the <a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> object.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.FRAMEBUFFER</code>: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.DRAW_FRAMEBUFFER</code>: Equivalent to <code>gl.FRAMEBUFFER</code>. Used as a destination for drawing, rendering, clearing, and writing operations.</li> <li><code>gl.READ_FRAMEBUFFER</code>: Used as a source for reading operations. </li> </ul> </li> </ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a> indicating the completeness status of the framebuffer or\n  <code>0</code> if an error occurs. Possible enum return values:</p>\n\n<ul>\n  <li><code>gl.FRAMEBUFFER_COMPLETE</code>: The framebuffer is ready to display.</li>\n  <li><code>gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT</code>: The attachment types are\n    mismatched or not all framebuffer attachment points are framebuffer attachment\n    complete.</li>\n  <li><code>gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT</code>: There is no attachment.\n  </li>\n  <li><code>gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS</code>: Height and width of the\n    attachment are not the same.</li>\n  <li><code>gl.FRAMEBUFFER_UNSUPPORTED</code>: The format of the attachment is not\n    supported or if depth and stencil attachments are not the same renderbuffer.</li>\n  <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" title=\"WebGL 2 context\">WebGL 2 context</a>, the\n    following values can be returned additionally:\n    <ul>\n      <li><code>gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE</code>: The values of\n        <code>gl.RENDERBUFFER_SAMPLES</code> are different among attached renderbuffers,\n        or are non-zero if the attached images are a mix of renderbuffers and textures.\n      </li>\n    </ul>\n  </li>\n  <li>When using the <a href=\"$MDN_URL$/Web/API/OVR_multiview2\"><code>OVR_multiview2</code></a> extension, the following value can be\n    returned additionally:\n    <ul>\n      <li><code>ext.FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR</code>: If\n        <code>baseViewIndex</code> is not the same for all framebuffer attachment points\n        where the value of <code>FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code> is not\n        <code>NONE</code>, the framebuffer is considered incomplete.</li>\n    </ul>\n  </li>\n</ul>"
    },
    "webglrenderingcontext.clear": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/clear",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.clear()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> clears buffers to preset values.</p>\n<p>The preset values can be set by <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/clearColor\" ><code>clearColor()</code></a>, <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/clearDepth\" ><code>clearDepth()</code></a> or\n<a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/clearStencil\" ><code>clearStencil()</code></a>.</p>\n<p>The scissor box, dithering, and buffer writemasks can affect the <code>clear()</code>\nmethod.</p>",
      "parameters": {
        "mask": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLbitfield</code></a> bitwise OR mask that indicates the buffers to be cleared. Possible values are: <ul> <li><code>gl.COLOR_BUFFER_BIT</code></li> <li><code>gl.DEPTH_BUFFER_BIT</code></li> <li><code>gl.STENCIL_BUFFER_BIT</code></li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.clearcolor": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/clearcolor",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.clearColor()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies the color values used\nwhen clearing color buffers.</p>\n<p>This specifies what color values to use when calling the\n<a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/clear\" ><code>clear()</code></a> method. The values are clamped\nbetween 0 and 1.</p>",
      "parameters": {
        "red": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> specifying the red color value used when the color buffers are cleared. Default value: 0.",
        "green": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> specifying the green color value used when the color buffers are cleared. Default value: 0.",
        "blue": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> specifying the blue color value used when the color buffers are cleared. Default value: 0.",
        "alpha": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> specifying the alpha (transparency) value used when the color buffers are cleared. Default value: 0."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.cleardepth": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/cleardepth",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.clearDepth()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies the clear value for the\ndepth buffer.</p>\n<p>This specifies what depth value to use when calling the\n<a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/clear\" ><code>clear()</code></a> method. The value is clamped\nbetween 0 and 1.</p>",
      "parameters": {
        "depth": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> specifying the depth value used when the depth buffer is cleared. Default value: 1."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.clearstencil": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/clearstencil",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.clearStencil()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies the clear value for the\nstencil buffer.</p>\n<p>This specifies what stencil value to use when calling the\n<a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/clear\" ><code>clear()</code></a> method.</p>",
      "parameters": {
        "s": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the index used when the stencil buffer is cleared. Default value: 0."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.colormask": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/colormask",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.colorMask()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> sets which color components to\nenable or to disable when drawing or rendering to a <a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a>.</p>",
      "parameters": {
        "red": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> specifying whether or not the red color component can be written into the frame buffer. Default value: <code>true</code> .",
        "green": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> specifying whether or not the green color component can be written into the frame buffer. Default value: <code>true</code> .",
        "blue": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> specifying whether or not the blue color component can be written into the frame buffer. Default value: <code>true</code> .",
        "alpha": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> specifying whether or not the alpha (transparency) component can be written into the frame buffer. Default value: <code>true</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.commit": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/commit",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {},
      "doc": "<p>The\n<code><strong>WebGLRenderingContext</strong></code><strong><code>.commit()</code></strong>\nmethod pushes frames back to the original <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a>, if the\ncontext is not directly fixed to a specific canvas.</p>"
    },
    "webglrenderingcontext.compileshader": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/compileshader",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLRenderingContext.compileShader()</strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> compiles a GLSL shader into binary\ndata so that it can be used by a <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>.</p>",
      "parameters": {
        "shader": "A fragment or vertex  <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> ."
      }
    },
    "webglrenderingcontext.compressedteximage2d": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/compressedteximage2d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.compressedTexImage2D()</code></strong> \nand <strong><code>WebGL2RenderingContext.compressedTexImage3D()</code></strong> methods\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API </a>specify a two- or\nthree-dimensional texture image in a compressed format.</p>\n<p>Compressed image formats must be enabled by <a href=\"$MDN_URL$/Web/API/WebGL_API/Using_Extensions\">WebGL extensions</a> before\nusing these methods.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values for <code>compressedTexImage2D</code> : <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_X</code>: Positive X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_X</code>: Negative X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Y</code>: Positive Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Y</code>: Negative Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Z</code>: Positive Z face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Z</code>: Negative Z face for a cube-mapped texture.</li> </ul> Possible values for <code>compressedTexImage3D</code> : <ul> <li><code>gl.TEXTURE_2D_ARRAY</code></li> <li><code>gl.TEXTURE_3D</code></li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the level of detail. Level 0 is the base image level and level <em>n</em> is the <em>n</em> th mipmap reduction level.",
        "internalformat": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the compressed image format. Compressed image formats must be enabled by <a href=\"$MDN_URL$/Web/API/WebGL_API/Using_Extensions\">WebGL extensions</a> before using this method. All values are possible for <code>compressedTexImage2D</code> . See <a href=\"$MDN_URL$/Web/API/WebGL_API/Compressed_texture_formats\">compressed texture formats</a> for which are valid for <code>compressedTexImage3D</code> . Possible values: <ul> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_s3tc\"><code>WEBGL_compressed_texture_s3tc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGB_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_RGBA_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_RGBA_S3TC_DXT3_EXT</code></li> <li><code>ext.COMPRESSED_RGBA_S3TC_DXT5_EXT</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_s3tc_srgb\"><code>WEBGL_compressed_texture_s3tc_srgb</code></a> extension: <ul> <li><code>ext.COMPRESSED_SRGB_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_etc\"><code>WEBGL_compressed_texture_etc</code></a> extension: <ul> <li><code>ext.COMPRESSED_R11_EAC</code></li> <li><code>ext.COMPRESSED_SIGNED_R11_EAC</code></li> <li><code>ext.COMPRESSED_RG11_EAC</code></li> <li><code>ext.COMPRESSED_SIGNED_RG11_EAC</code></li> <li><code>ext.COMPRESSED_RGB8_ETC2</code></li> <li><code>ext.COMPRESSED_RGBA8_ETC2_EAC</code></li> <li><code>ext.COMPRESSED_SRGB8_ETC2</code></li> <li><code>ext.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC</code></li> <li><code>ext.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> <li><code>ext.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_pvrtc\"><code>WEBGL_compressed_texture_pvrtc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGB_PVRTC_4BPPV1_IMG</code></li> <li><code>ext.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG</code></li> <li><code>ext.COMPRESSED_RGB_PVRTC_2BPPV1_IMG</code></li> <li><code>ext.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_etc1\"><code>WEBGL_compressed_texture_etc1</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGB_ETC1_WEBGL</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_astc\"><code>WEBGL_compressed_texture_astc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGBA_ASTC_4x4_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_5x4_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_5x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_6x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_6x6_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_8x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_8x6_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_8x8_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_10x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_10x6_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_10x10_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_12x10_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_12x12_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_texture_compression_bptc\"><code>EXT_texture_compression_bptc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGBA_BPTC_UNORM_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT</code></li> <li><code>ext.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT</code></li> <li><code>ext.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_texture_compression_rgtc\"><code>EXT_texture_compression_rgtc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RED_RGTC1_EXT</code></li> <li><code>ext.COMPRESSED_SIGNED_RED_RGTC1_EXT</code></li> <li><code>ext.COMPRESSED_RED_GREEN_RGTC2_EXT</code></li> <li><code>ext.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT</code></li> </ul> </li> </ul>",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture.",
        "depth": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the depth of the texture/the number of textures in a <code>TEXTURE_2D_ARRAY</code> .",
        "border": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the width of the border. Must be 0.",
        "imageSize": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the number of bytes to read from the buffer bound to <code>gl.PIXEL_UNPACK_BUFFER</code> .",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying the offset in bytes from which to read from the buffer bound to <code>gl.PIXEL_UNPACK_BUFFER</code> .",
        "pixels": "An <a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a> that will be used as a data store for the compressed image data in memory."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.compressedteximage3d": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/compressedteximage2d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.compressedTexImage2D()</code></strong> \nand <strong><code>WebGL2RenderingContext.compressedTexImage3D()</code></strong> methods\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API </a>specify a two- or\nthree-dimensional texture image in a compressed format.</p>\n<p>Compressed image formats must be enabled by <a href=\"$MDN_URL$/Web/API/WebGL_API/Using_Extensions\">WebGL extensions</a> before\nusing these methods.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values for <code>compressedTexImage2D</code> : <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_X</code>: Positive X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_X</code>: Negative X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Y</code>: Positive Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Y</code>: Negative Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Z</code>: Positive Z face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Z</code>: Negative Z face for a cube-mapped texture.</li> </ul> Possible values for <code>compressedTexImage3D</code> : <ul> <li><code>gl.TEXTURE_2D_ARRAY</code></li> <li><code>gl.TEXTURE_3D</code></li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the level of detail. Level 0 is the base image level and level <em>n</em> is the <em>n</em> th mipmap reduction level.",
        "internalformat": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the compressed image format. Compressed image formats must be enabled by <a href=\"$MDN_URL$/Web/API/WebGL_API/Using_Extensions\">WebGL extensions</a> before using this method. All values are possible for <code>compressedTexImage2D</code> . See <a href=\"$MDN_URL$/Web/API/WebGL_API/Compressed_texture_formats\">compressed texture formats</a> for which are valid for <code>compressedTexImage3D</code> . Possible values: <ul> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_s3tc\"><code>WEBGL_compressed_texture_s3tc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGB_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_RGBA_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_RGBA_S3TC_DXT3_EXT</code></li> <li><code>ext.COMPRESSED_RGBA_S3TC_DXT5_EXT</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_s3tc_srgb\"><code>WEBGL_compressed_texture_s3tc_srgb</code></a> extension: <ul> <li><code>ext.COMPRESSED_SRGB_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_etc\"><code>WEBGL_compressed_texture_etc</code></a> extension: <ul> <li><code>ext.COMPRESSED_R11_EAC</code></li> <li><code>ext.COMPRESSED_SIGNED_R11_EAC</code></li> <li><code>ext.COMPRESSED_RG11_EAC</code></li> <li><code>ext.COMPRESSED_SIGNED_RG11_EAC</code></li> <li><code>ext.COMPRESSED_RGB8_ETC2</code></li> <li><code>ext.COMPRESSED_RGBA8_ETC2_EAC</code></li> <li><code>ext.COMPRESSED_SRGB8_ETC2</code></li> <li><code>ext.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC</code></li> <li><code>ext.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> <li><code>ext.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_pvrtc\"><code>WEBGL_compressed_texture_pvrtc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGB_PVRTC_4BPPV1_IMG</code></li> <li><code>ext.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG</code></li> <li><code>ext.COMPRESSED_RGB_PVRTC_2BPPV1_IMG</code></li> <li><code>ext.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_etc1\"><code>WEBGL_compressed_texture_etc1</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGB_ETC1_WEBGL</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_astc\"><code>WEBGL_compressed_texture_astc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGBA_ASTC_4x4_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_5x4_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_5x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_6x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_6x6_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_8x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_8x6_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_8x8_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_10x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_10x6_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_10x10_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_12x10_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_12x12_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_texture_compression_bptc\"><code>EXT_texture_compression_bptc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGBA_BPTC_UNORM_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT</code></li> <li><code>ext.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT</code></li> <li><code>ext.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_texture_compression_rgtc\"><code>EXT_texture_compression_rgtc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RED_RGTC1_EXT</code></li> <li><code>ext.COMPRESSED_SIGNED_RED_RGTC1_EXT</code></li> <li><code>ext.COMPRESSED_RED_GREEN_RGTC2_EXT</code></li> <li><code>ext.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT</code></li> </ul> </li> </ul>",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture.",
        "depth": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the depth of the texture/the number of textures in a <code>TEXTURE_2D_ARRAY</code> .",
        "border": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the width of the border. Must be 0.",
        "imageSize": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the number of bytes to read from the buffer bound to <code>gl.PIXEL_UNPACK_BUFFER</code> .",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying the offset in bytes from which to read from the buffer bound to <code>gl.PIXEL_UNPACK_BUFFER</code> .",
        "pixels": "An <a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a> that will be used as a data store for the compressed image data in memory."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.compressedtexsubimage2d": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/compressedtexsubimage2d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.compressedTexSubImage2D()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API </a>specifies a\ntwo-dimensional sub-rectangle for a texture image in a compressed format.</p>\n<p>Compressed image formats must be enabled by <a href=\"$MDN_URL$/Web/API/WebGL_API/Using_Extensions\">WebGL extensions</a> before\nusing this method or a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a> must be used.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active compressed texture. Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_X</code>: Positive X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_X</code>: Negative X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Y</code>: Positive Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Y</code>: Negative Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Z</code>: Positive Z face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Z</code>: Negative Z face for a cube-mapped texture.</li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the level of detail. Level 0 is the base image level and level <em>n</em> is the <em>n</em> th mipmap reduction level.",
        "xoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the horizontal offset within the compressed texture image.",
        "yoffset": "A  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the vertical offset within the compressed texture image.",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the compressed texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the compressed texture.",
        "format": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the compressed image format. Compressed image formats must be enabled by <a href=\"$MDN_URL$/Web/API/WebGL_API/Using_Extensions\">WebGL extensions</a> before using this method. Possible values: <ul> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_s3tc\"><code>WEBGL_compressed_texture_s3tc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGB_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_RGBA_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_RGBA_S3TC_DXT3_EXT</code></li> <li><code>ext.COMPRESSED_RGBA_S3TC_DXT5_EXT</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_s3tc_srgb\"><code>WEBGL_compressed_texture_s3tc_srgb</code></a> extension: <ul> <li><code>ext.COMPRESSED_SRGB_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_etc\"><code>WEBGL_compressed_texture_etc</code></a> extension: <ul> <li><code>ext.COMPRESSED_R11_EAC</code></li> <li><code>ext.COMPRESSED_SIGNED_R11_EAC</code></li> <li><code>ext.COMPRESSED_RG11_EAC</code></li> <li><code>ext.COMPRESSED_SIGNED_RG11_EAC</code></li> <li><code>ext.COMPRESSED_RGB8_ETC2</code></li> <li><code>ext.COMPRESSED_RGBA8_ETC2_EAC</code></li> <li><code>ext.COMPRESSED_SRGB8_ETC2</code></li> <li><code>ext.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC</code></li> <li><code>ext.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> <li><code>ext.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_pvrtc\"><code>WEBGL_compressed_texture_pvrtc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGB_PVRTC_4BPPV1_IMG</code></li> <li><code>ext.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG</code></li> <li><code>ext.COMPRESSED_RGB_PVRTC_2BPPV1_IMG</code></li> <li><code>ext.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_compressed_texture_astc\"><code>WEBGL_compressed_texture_astc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGBA_ASTC_4x4_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_5x4_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_5x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_6x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_6x6_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_8x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_8x6_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_8x8_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_10x5_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_10x6_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_10x6_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_10x10_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_12x10_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR</code></li> <li><code>ext.COMPRESSED_RGBA_ASTC_12x12_KHR<br> ext.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_texture_compression_bptc\"><code>EXT_texture_compression_bptc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RGBA_BPTC_UNORM_EXT</code></li> <li><code>ext.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT</code></li> <li><code>ext.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT</code></li> <li><code>ext.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_texture_compression_rgtc\"><code>EXT_texture_compression_rgtc</code></a> extension: <ul> <li><code>ext.COMPRESSED_RED_RGTC1_EXT</code></li> <li><code>ext.COMPRESSED_SIGNED_RED_RGTC1_EXT</code></li> <li><code>ext.COMPRESSED_RED_GREEN_RGTC2_EXT</code></li> <li><code>ext.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT</code></li> </ul> </li> </ul>",
        "imageSize": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the number of bytes to read from the buffer bound to <code>gl.PIXEL_UNPACK_BUFFER</code> .",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying the offset in bytes from which to read from the buffer bound to <code>gl.PIXEL_UNPACK_BUFFER</code> .",
        "pixels": "An <a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a> that be used as a data store for the compressed image data in memory."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.copyteximage2d": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/copyteximage2d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.copyTexImage2D()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> copies pixels from the current\n<a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> into a 2D texture image.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_X</code>: Positive X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_X</code>: Negative X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Y</code>: Positive Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Y</code>: Negative Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Z</code>: Positive Z face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Z</code>: Negative Z face for a cube-mapped texture.</li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the level of detail. Level 0 is the base image level and level <em>n</em> is the <em>n</em> th mipmap reduction level.",
        "internalformat": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the color components in the texture. Possible values: <ul> <li><code>gl.ALPHA</code>: Discards the red, green and blue components and reads the alpha component.</li> <li><code>gl.RGB</code>: Discards the alpha components and reads the red, green and blue components.</li> <li><code>gl.RGBA</code>: Red, green, blue and alpha components are read from the color buffer.</li> <li><code>gl.LUMINANCE</code>: Each color component is a luminance component, alpha is 1.0.</li> <li><code>gl.LUMINANCE_ALPHA</code>: Each component is a luminance/alpha component. </li> </ul>",
        "x": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the x coordinate of the lower left corner where to start copying.",
        "y": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the y coordinate of the lower left corner where to start copying.",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture.",
        "border": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the width of the border. Must be 0."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.copytexsubimage2d": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/copytexsubimage2d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.copyTexSubImage2D()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> copies pixels from the current\n<a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> into an existing 2D texture sub-image.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_X</code>: Positive X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_X</code>: Negative X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Y</code>: Positive Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Y</code>: Negative Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Z</code>: Positive Z face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Z</code>: Negative Z face for a cube-mapped texture.</li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the level of detail. Level 0 is the base image level and level <em>n</em> is the <em>n</em> th mipmap reduction level.",
        "xoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the horizontal offset within the texture image.",
        "yoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the vertical offset within the texture image.",
        "x": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the x coordinate of the lower left corner where to start copying.",
        "y": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the y coordinate of the lower left corner where to start copying.",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.createbuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/createbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.createBuffer()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> creates and initializes a\n<a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> storing data such as vertices or colors.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> storing data such as vertices or colors.</p>"
    },
    "webglrenderingcontext.createframebuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/createframebuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.createFramebuffer()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> creates and initializes a\n<a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> object.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> object.</p>"
    },
    "webglrenderingcontext.createprogram": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/createprogram",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.createProgram()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> creates and initializes a\n<a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> object.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> object that is a combination of two compiled\n  <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a>s consisting of a vertex shader and a fragment shader (both\n  written in GLSL). These are then linked into a usable program..</p>"
    },
    "webglrenderingcontext.createrenderbuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/createrenderbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.createRenderbuffer()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> creates and initializes a\n<a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a> object.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a> object that stores data such an image, or can be\n  source or target of an rendering operation.</p>"
    },
    "webglrenderingcontext.createshader": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/createshader",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a>\nmethod <strong><code>createShader()</code></strong> of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> creates a\n<a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> that can then be configured further using\n<a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/shaderSource\"><code>WebGLRenderingContext.shaderSource()</code></a> and\n<a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/compileShader\"><code>WebGLRenderingContext.compileShader()</code></a>.</p>",
      "parameters": {
        "type": "Either <code>gl.VERTEX_SHADER</code> or <code>gl.FRAGMENT_SHADER</code>"
      }
    },
    "webglrenderingcontext.createtexture": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/createtexture",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.createTexture()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> creates and initializes a\n<a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> object.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> object to which images can be bound to.</p>"
    },
    "webglrenderingcontext.cullface": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/cullface",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.cullFace()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies whether or not front-\nand/or back-facing polygons can be culled.</p>",
      "parameters": {
        "mode": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying whether front- or back-facing polygons are candidates for culling. The default value is <code>gl.BACK</code> . Possible values are: <ul> <li><code>gl.FRONT</code></li> <li><code>gl.BACK</code></li> <li><code>gl.FRONT_AND_BACK</code></li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.deletebuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/deletebuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.deleteBuffer()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> deletes a given\n<a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a>. This method has no effect if the buffer has already been\ndeleted.</p>",
      "parameters": {
        "buffer": "A <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> object to delete."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.deleteframebuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/deleteframebuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.deleteFramebuffer()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> deletes a given\n<a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> object. This method has no effect if the frame buffer\nhas already been deleted.</p>",
      "parameters": {
        "framebuffer": "A <a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> object to delete."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.deleteprogram": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/deleteprogram",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.deleteProgram()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> deletes a given\n<a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> object. This method has no effect if the program has already\nbeen deleted.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> object to delete."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.deleterenderbuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/deleterenderbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.deleteRenderbuffer()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> deletes a given\n<a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a> object. This method has no effect if the render buffer\nhas already been deleted.</p>",
      "parameters": {
        "renderbuffer": "A <a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a> object to delete."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.deleteshader": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/deleteshader",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.deleteShader()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> marks a given\n<a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> object for deletion. It will then be deleted whenever the\nshader is no longer in use. This method has no effect if the shader has already been\ndeleted, and the <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> is automatically marked for deletion when it\nis destroyed by the garbage collector.</p>",
      "parameters": {
        "shader": "A <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> object to delete."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.deletetexture": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/deletetexture",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.deleteTexture()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> deletes a given\n<a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> object. This method has no effect if the texture has already\nbeen deleted.</p>",
      "parameters": {
        "texture": "A <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> object to delete."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.depthfunc": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/depthfunc",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.depthFunc()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies a function that compares\nincoming pixel depth to the current depth buffer value.</p>",
      "parameters": {
        "func": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the depth comparison function, which sets the conditions under which the pixel will be drawn. The default value is <code>gl.LESS</code> . Possible values are: <ul> <li><code>gl.NEVER</code> (never pass)</li> <li><code>gl.LESS</code> (pass if the incoming value is less than the depth buffer value)</li> <li><code>gl.EQUAL</code> (pass if the incoming value equals the depth buffer value) </li> <li><code>gl.LEQUAL</code> (pass if the incoming value is less than or equal to the depth buffer value)</li> <li><code>gl.GREATER</code> (pass if the incoming value is greater than the depth buffer value)</li> <li><code>gl.NOTEQUAL</code> (pass if the incoming value is not equal to the depth buffer value)</li> <li><code>gl.GEQUAL</code> (pass if the incoming value is greater than or equal to the depth buffer value)</li> <li><code>gl.ALWAYS</code> (always pass)</li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.depthmask": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/depthmask",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.depthMask()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> sets whether writing into the depth\nbuffer is enabled or disabled.</p>",
      "parameters": {
        "flag": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> specifying whether or not writing into the depth buffer is enabled. Default value: <code>true</code> , meaning that writing is enabled."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.depthrange": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/depthrange",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.depthRange()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies the depth range mapping\nfrom normalized device coordinates to window or viewport coordinates.</p>",
      "parameters": {
        "zNear": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> specifying the mapping of the near clipping plane to window or viewport coordinates. Clamped to the range 0 to 1 and must be less than or equal to <code>zFar</code> . The default value i <code>s 0.</code>",
        "zFar": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> specifying the mapping of the far clipping plane to window or viewport coordinates. Clamped to the range 0 to 1. The default value i <code>s 1.</code>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.detachshader": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/detachshader",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLRenderingContext.detachShader()</strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> detaches a previously\nattached <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> from a <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> .",
        "shader": "A fragment or vertex  <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> ."
      }
    },
    "webglrenderingcontext.disable": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/disable",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.disable()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> disables specific WebGL\ncapabilities for this context.</p>",
      "parameters": {
        "cap": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying which WebGL capability to disable. Possible values:<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Constant</th> <th scope=\"col\">Description</th> </tr> </thead> <tbody> <tr> <td><code>gl.BLEND</code></td> <td>Deactivates blending of the computed fragment color values. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/blendFunc\"><code>WebGLRenderingContext.blendFunc()</code></a>.</td> </tr> <tr> <td><code>gl.CULL_FACE</code></td> <td>Deactivates culling of polygons. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/cullFace\"><code>WebGLRenderingContext.cullFace()</code></a>.</td> </tr> <tr> <td><code>gl.DEPTH_TEST</code></td> <td>Deactivates depth comparisons and updates to the depth buffer. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/depthFunc\"><code>WebGLRenderingContext.depthFunc()</code></a>.</td> </tr> <tr> <td><code>gl.DITHER</code></td> <td>Deactivates dithering of color components before they get written to the color buffer.</td> </tr> <tr> <td><code>gl.POLYGON_OFFSET_FILL</code></td> <td>Deactivates adding an offset to depth values of polygon's fragments. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/polygonOffset\"><code>WebGLRenderingContext.polygonOffset()</code></a>.</td> </tr> <tr> <td><code>gl.SAMPLE_ALPHA_TO_COVERAGE</code></td> <td>Deactivates the computation of a temporary coverage value determined by the alpha value.</td> </tr> <tr> <td><code>gl.SAMPLE_COVERAGE</code></td> <td>Deactivates ANDing the fragment's coverage with the temporary coverage value. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/sampleCoverage\"><code>WebGLRenderingContext.sampleCoverage()</code></a>.</td> </tr> <tr> <td><code>gl.SCISSOR_TEST</code></td> <td>Deactivates the scissor test that discards fragments that are outside of the scissor rectangle. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/scissor\"><code>WebGLRenderingContext.scissor()</code></a>.</td> </tr> <tr> <td><code>gl.STENCIL_TEST</code></td> <td>Deactivates stencil testing and updates to the stencil buffer. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/stencilFunc\"><code>WebGLRenderingContext.stencilFunc()</code></a>.</td> </tr> </tbody> </table> When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a> , the following values are available additionally: <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Constant</th> <th scope=\"col\">Description</th> </tr> </thead> <tbody> <tr> <td><code>gl.RASTERIZER_DISCARD</code></td> <td>Deactivates that primitives are discarded immediately before the rasterization stage, but after the optional transform feedback stage. <code>gl.clear()</code> commands are ignored.</td> </tr> </tbody> </table>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.disablevertexattribarray": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/disablevertexattribarray",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.disableVertexAttribArray()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> turns the generic\nvertex attribute array off at a given index position.</p>",
      "parameters": {
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the vertex attribute to disable."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.drawarrays": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/drawarrays",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.drawArrays()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> renders primitives from array data.</p>",
      "parameters": {
        "mode": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the type primitive to render. Possible values are: <ul> <li><code>gl.POINTS</code>: Draws a single dot.</li> <li><code>gl.LINE_STRIP</code>: Draws a straight line to the next vertex.</li> <li><code>gl.LINE_LOOP</code>: Draws a straight line to the next vertex, and connects the last vertex back to the first.</li> <li><code>gl.LINES</code>: Draws a line between a pair of vertices.</li> <li> <code><a href=\"https://en.wikipedia.org/wiki/Triangle_strip\" class=\"external\" rel=\" noopener\">gl.TRIANGLE_STRIP</a></code> </li> <li> <code><a href=\"https://en.wikipedia.org/wiki/Triangle_fan\" class=\"external\" rel=\" noopener\">gl.TRIANGLE_FAN</a></code> </li> <li><code>gl.TRIANGLES</code>: Draws a triangle for a group of three vertices.</li> </ul>",
        "first": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the starting index in the array of vector points.",
        "count": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the number of indices to be rendered."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.drawelements": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/drawelements",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.drawElements()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> renders primitives from array data.</p>",
      "parameters": {
        "mode": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the type primitive to render. Possible values are: <ul> <li><code>gl.POINTS</code>: Draws a single dot.</li> <li><code>gl.LINE_STRIP</code>: Draws a straight line to the next vertex.</li> <li><code>gl.LINE_LOOP</code>: Draws a straight line to the next vertex, and connects the last vertex back to the first.</li> <li><code>gl.LINES</code>: Draws a line between a pair of vertices.</li> <li> <code><a href=\"https://en.wikipedia.org/wiki/Triangle_strip\" class=\"external\" rel=\" noopener\">gl.TRIANGLE_STRIP</a></code> </li> <li> <code><a href=\"https://en.wikipedia.org/wiki/Triangle_fan\" class=\"external\" rel=\" noopener\">gl.TRIANGLE_FAN</a></code> </li> <li><code>gl.TRIANGLES</code>: Draws a triangle for a group of three vertices.</li> </ul>",
        "count": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the number of elements of the bound element array buffer to be rendered. For example, to draw a wireframe triangle with <code>gl.LINES</code> the count should be 2 endpoints per line × 3 lines = 6 elements. However to draw the same wireframe triangle with <code>gl.LINE_STRIP</code> the element array buffer does not repeat the indices for the end of the first line/start of the second line, and end of the second line/start of the third line, so <code>count</code> will be four. To draw the same triangle with <code>gl.LINE_LOOP</code> the element array buffer does not repeat the first/last vertex either so <code>count</code> will be three.",
        "type": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the type of the values in the element array buffer. Possible values are: <ul> <li><code>gl.UNSIGNED_BYTE</code></li> <li><code>gl.UNSIGNED_SHORT</code></li> <li>When using the <a href=\"$MDN_URL$/Web/API/OES_element_index_uint\"><code>OES_element_index_uint</code></a> extension: <ul> <li><code>gl.UNSIGNED_INT</code></li> </ul> </li> </ul>",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying a byte offset in the element array buffer. Must be a valid multiple of the size of the given <code>type</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.drawingbufferheight": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/drawingbufferheight",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The read-only <code><strong>WebGLRenderingContext.drawingBufferHeight</strong></code>\nproperty represents the actual height of the current drawing buffer. It should match the\n<code>height</code> attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element associated with\nthis context, but might differ if the implementation is not able to provide the\nrequested height.</p>"
    },
    "webglrenderingcontext.drawingbufferwidth": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/drawingbufferwidth",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The read-only <code><strong>WebGLRenderingContext.drawingBufferWidth</strong></code>\nproperty represents the actual width of the current drawing buffer. It should match the\n<code>width</code> attribute of the <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> element associated with\nthis context, but might differ if the implementation is not able to provide the\nrequested width.</p>"
    },
    "webglrenderingcontext.enable": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/enable",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.enable()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> enables specific WebGL capabilities\nfor this context.</p>",
      "parameters": {
        "cap": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying which WebGL capability to enable. Possible values:<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Constant</th> <th scope=\"col\">Description</th> </tr> </thead> <tbody> <tr> <td><code>gl.BLEND</code></td> <td>Activates blending of the computed fragment color values. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/blendFunc\"><code>WebGLRenderingContext.blendFunc()</code></a>.</td> </tr> <tr> <td><code>gl.CULL_FACE</code></td> <td>Activates culling of polygons. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/cullFace\"><code>WebGLRenderingContext.cullFace()</code></a>.</td> </tr> <tr> <td><code>gl.DEPTH_TEST</code></td> <td>Activates depth comparisons and updates to the depth buffer. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/depthFunc\"><code>WebGLRenderingContext.depthFunc()</code></a>.</td> </tr> <tr> <td><code>gl.DITHER</code></td> <td>Activates dithering of color components before they get written to the color buffer.</td> </tr> <tr> <td><code>gl.POLYGON_OFFSET_FILL</code></td> <td>Activates adding an offset to depth values of polygon's fragments. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/polygonOffset\"><code>WebGLRenderingContext.polygonOffset()</code></a>.</td> </tr> <tr> <td><code>gl.SAMPLE_ALPHA_TO_COVERAGE</code></td> <td>Activates the computation of a temporary coverage value determined by the alpha value.</td> </tr> <tr> <td><code>gl.SAMPLE_COVERAGE</code></td> <td>Activates ANDing the fragment's coverage with the temporary coverage value. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/sampleCoverage\"><code>WebGLRenderingContext.sampleCoverage()</code></a>.</td> </tr> <tr> <td><code>gl.SCISSOR_TEST</code></td> <td>Activates the scissor test that discards fragments that are outside of the scissor rectangle. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/scissor\"><code>WebGLRenderingContext.scissor()</code></a>.</td> </tr> <tr> <td><code>gl.STENCIL_TEST</code></td> <td>Activates stencil testing and updates to the stencil buffer. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/stencilFunc\"><code>WebGLRenderingContext.stencilFunc()</code></a>.</td> </tr> </tbody> </table> When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a> , the following values are available additionally: <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Constant</th> <th scope=\"col\">Description</th> </tr> </thead> <tbody> <tr> <td><code>gl.RASTERIZER_DISCARD</code></td> <td>Primitives are discarded immediately before the rasterization stage, but after the optional transform feedback stage. <code>gl.clear()</code> commands are ignored.</td> </tr> </tbody> </table>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.enablevertexattribarray": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/enablevertexattribarray",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> method\n<code><strong>enableVertexAttribArray()</strong></code>, part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a>, turns on the generic vertex\nattribute array at the specified index into the list of attribute arrays.</p>\n<div class=\"note notecard\">\n<p>You can disable the attribute array by calling\n<a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/disableVertexAttribArray\" ><code>disableVertexAttribArray()</code></a>.</p>\n</div>\n<p>In WebGL, values that apply to a specific vertex are stored in <a href=\"$MDN_URL$/Web/API/WebGL_API/Data#attributes\" data-flaw=\"link1\">attributes</a>. These are only\navailable to the JavaScript code and the vertex shader. Attributes are referenced by an\nindex number into the list of attributes maintained by the GPU. Some vertex attribute\nindices may have predefined purposes, depending on the platform and/or the GPU. Others\nare assigned by the WebGL layer when you create the attributes.</p>\n<p>Either way, since attributes cannot be used unless enabled, and are disabled by\ndefault, you need to call <code>enableVertexAttribArray()</code> to enable individual\nattributes so that they can be used. Once that's been done, other methods can be used to\naccess the attribute, including <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/vertexAttribPointer\" ><code>vertexAttribPointer()</code></a>, <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/vertexAttrib\" ><code>vertexAttrib*()</code></a>, and <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getVertexAttrib\" ><code>getVertexAttrib()</code></a>.</p>",
      "parameters": {
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index number that uniquely identifies the vertex attribute to enable. If you know the name of the attribute but not its index, you can get the index by calling <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getAttribLocation\" ><code>getAttribLocation()</code></a> ."
      },
      "returns": "<p><code>undefined</code>.</p>"
    },
    "webglrenderingcontext.finish": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/finish",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.finish()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> blocks execution until all\npreviously called commands are finished.</p>",
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.flush": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/flush",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.flush()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> empties different buffer commands,\ncausing all commands to be executed as quickly as possible.</p>",
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.framebufferrenderbuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/framebufferrenderbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.framebufferRenderbuffer()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> attaches a\n<a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a> object to a <a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> object.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) for the framebuffer. Possible values: <ul> <li><code>gl.FRAMEBUFFER</code>: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.DRAW_FRAMEBUFFER</code>: Equivalent to <code>gl.FRAMEBUFFER</code>. Used as a destination for drawing, rendering, clearing, and writing operations.</li> <li><code>gl.READ_FRAMEBUFFER</code>: Used as a source for reading operations. </li> </ul> </li> </ul>",
        "attachment": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the attachment point for the render buffer. Possible values: <ul> <li><code>gl.COLOR_ATTACHMENT0</code>: color buffer.</li> <li><code>gl.DEPTH_ATTACHMENT</code>: depth buffer.</li> <li><code>gl.DEPTH_STENCIL_ATTACHMENT</code>: depth and stencil buffer.</li> <li><code>gl.STENCIL_ATTACHMENT</code>: stencil buffer.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.COLOR_ATTACHMENT1<br> gl.COLOR_ATTACHMENT2<br> gl.COLOR_ATTACHMENT3<br> gl.COLOR_ATTACHMENT4<br> gl.COLOR_ATTACHMENT5<br> gl.COLOR_ATTACHMENT6<br> gl.COLOR_ATTACHMENT7<br> gl.COLOR_ATTACHMENT8<br> gl.COLOR_ATTACHMENT9<br> gl.COLOR_ATTACHMENT10<br> gl.COLOR_ATTACHMENT11<br> gl.COLOR_ATTACHMENT12<br> gl.COLOR_ATTACHMENT13<br> gl.COLOR_ATTACHMENT14<br> gl.COLOR_ATTACHMENT15</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_draw_buffers\"><code>WEBGL_draw_buffers</code></a> extension: <ul> <li><code>ext.COLOR_ATTACHMENT0_WEBGL</code> (same as <code>gl.COLOR_ATTACHMENT0</code>)<br> <code>ext.COLOR_ATTACHMENT1_WEBGL<br> ext.COLOR_ATTACHMENT2_WEBGL<br> ext.COLOR_ATTACHMENT3_WEBGL<br> ext.COLOR_ATTACHMENT4_WEBGL<br> ext.COLOR_ATTACHMENT5_WEBGL<br> ext.COLOR_ATTACHMENT6_WEBGL<br> ext.COLOR_ATTACHMENT7_WEBGL<br> ext.COLOR_ATTACHMENT8_WEBGL<br> ext.COLOR_ATTACHMENT9_WEBGL<br> ext.COLOR_ATTACHMENT10_WEBGL<br> ext.COLOR_ATTACHMENT11_WEBGL<br> ext.COLOR_ATTACHMENT12_WEBGL<br> ext.COLOR_ATTACHMENT13_WEBGL<br> ext.COLOR_ATTACHMENT14_WEBGL<br> ext.COLOR_ATTACHMENT15_WEBGL</code> </li> </ul> </li> </ul>",
        "renderbuffertarget": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) for the render buffer. Possible values: <ul> <li><code>gl.RENDERBUFFER</code>: Buffer data storage for single images in a renderable internal format.</li> </ul>",
        "renderbuffer": "A <a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a> object to attach."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.framebuffertexture2d": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/framebuffertexture2d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.framebufferTexture2D()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> attaches a texture to a\n<a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a>.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.FRAMEBUFFER</code>: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.DRAW_FRAMEBUFFER</code>: Used as a destination for drawing, rendering, clearing, and writing operations.</li> <li><code>gl.READ_FRAMEBUFFER</code>: Used as a source for reading operations. </li> </ul> When binding, <code>gl.FRAMEBUFFER</code> sets both the <code>gl.DRAW_FRAMEBUFFER</code> and <code>gl.READ_FRAMEBUFFER</code> binding points. When referencing, <code>gl.FRAMEBUFFER</code> refers to the <code>gl.DRAW_FRAMEBUFFER</code> binding </li> </ul>",
        "attachment": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the attachment point for the <code>texture</code> . Possible values: <ul> <li><code>gl.COLOR_ATTACHMENT0</code>: Attaches the texture to the framebuffer's color buffer.</li> <li><code>gl.DEPTH_ATTACHMENT</code>: Attaches the texture to the framebuffer's depth buffer.</li> <li><code>gl.STENCIL_ATTACHMENT</code>: Attaches the texture to the framebuffer's stencil buffer.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.DEPTH_STENCIL_ATTACHMENT</code>: depth and stencil buffer.</li> <li><code>gl.COLOR_ATTACHMENT1<br> gl.COLOR_ATTACHMENT2<br> gl.COLOR_ATTACHMENT3<br> gl.COLOR_ATTACHMENT4<br> gl.COLOR_ATTACHMENT5<br> gl.COLOR_ATTACHMENT6<br> gl.COLOR_ATTACHMENT7<br> gl.COLOR_ATTACHMENT8<br> gl.COLOR_ATTACHMENT9<br> gl.COLOR_ATTACHMENT10<br> gl.COLOR_ATTACHMENT11<br> gl.COLOR_ATTACHMENT12<br> gl.COLOR_ATTACHMENT13<br> gl.COLOR_ATTACHMENT14<br> gl.COLOR_ATTACHMENT15</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_draw_buffers\"><code>WEBGL_draw_buffers</code></a> extension: <ul> <li><code>ext.COLOR_ATTACHMENT0_WEBGL</code> (same as <code>gl.COLOR_ATTACHMENT0</code>)<br> <code>ext.COLOR_ATTACHMENT1_WEBGL<br> ext.COLOR_ATTACHMENT2_WEBGL<br> ext.COLOR_ATTACHMENT3_WEBGL<br> ext.COLOR_ATTACHMENT4_WEBGL<br> ext.COLOR_ATTACHMENT5_WEBGL<br> ext.COLOR_ATTACHMENT6_WEBGL<br> ext.COLOR_ATTACHMENT7_WEBGL<br> ext.COLOR_ATTACHMENT8_WEBGL<br> ext.COLOR_ATTACHMENT9_WEBGL<br> ext.COLOR_ATTACHMENT10_WEBGL<br> ext.COLOR_ATTACHMENT11_WEBGL<br> ext.COLOR_ATTACHMENT12_WEBGL<br> ext.COLOR_ATTACHMENT13_WEBGL<br> ext.COLOR_ATTACHMENT14_WEBGL<br> ext.COLOR_ATTACHMENT15_WEBGL</code> </li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_depth_texture\"><code>WEBGL_depth_texture</code></a> extension: <ul> <li><code>gl.DEPTH_STENCIL_ATTACHMENT</code>: Depth and stencil buffer data storage.</li> </ul> </li> </ul>",
        "textarget": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the texture target. Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A 2D image.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_X</code>: Image for the positive X face of the cube.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_X</code>: Image for the negative X face of the cube.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Y</code>: Image for the positive Y face of the cube.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Y</code>: Image for the negative Y face of the cube.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Z</code>: Image for the positive Z face of the cube.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Z</code>: Image for the negative Z face of the cube.</li> </ul>",
        "texture": "A <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> object whose image to attach.",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the mipmap level of the texture image to be attached. Must be 0."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.frontface": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/frontface",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.frontFace()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies whether polygons are\nfront- or back-facing by setting a winding orientation.</p>",
      "parameters": {
        "mode": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\">GLenum</a>  type winding orientation. The default value is <code>gl.CCW</code> . Possible values: <ul> <li><code>gl.CW</code>: Clock-wise winding.</li> <li><code>gl.CCW</code>: Counter-clock-wise winding.</li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.generatemipmap": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/generatemipmap",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.generateMipmap()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> generates a set of mipmaps for a\n<a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> object.</p>\n<p>Mipmaps are used to create distance with objects. A higher-resolution mipmap is used\nfor objects that are closer, and a lower-resolution mipmap is used for objects that are\nfarther away. It starts with the resolution of the texture image and halves the\nresolution until a 1x1 dimension texture image is created.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture whose mipmaps will be generated. Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP</code>: A cube-mapped texture.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.TEXTURE_3D</code>: A three-dimensional texture.</li> <li><code>gl.TEXTURE_2D_ARRAY</code>: A two-dimensional array texture.</li> </ul> </li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.getactiveattrib": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getactiveattrib",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getActiveAttrib()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns a\n<a href=\"$MDN_URL$/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code></a> object containing size, type, and name of a vertex\nattribute. It is generally used when querying unknown attributes either for debugging or\ngeneric library creation.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> containing the vertex attribute.",
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the vertex attribute to get. This value is an index 0 to N - 1 as returned by  <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getProgramParameter\" ><code>gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES)</code></a> ."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code></a> object.</p>"
    },
    "webglrenderingcontext.getactiveuniform": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getactiveuniform",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getActiveUniform()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns a\n<a href=\"$MDN_URL$/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code></a> object containing size, type, and name of a uniform\nattribute. It is generally used when querying unknown uniforms either for debugging or\ngeneric library creation.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> specifying the WebGL shader program from which to obtain the uniform variable's information.",
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the uniform attribute to get. This value is an index 0 to N - 1 as returned by  <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getProgramParameter\" ><code>gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS)</code></a> ."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLActiveInfo\"><code>WebGLActiveInfo</code></a> object describing the uniform.</p>\n\n<p>The <code>type</code> attribute of the return value will be one of the following:</p>\n\n<ul>\n  <li><code>gl.FLOAT</code></li>\n  <li><code>gl.FLOAT_VEC2</code></li>\n  <li><code>gl.FLOAT_VEC3</code></li>\n  <li><code>gl.FLOAT_VEC4</code></li>\n  <li><code>gl.INT</code></li>\n  <li><code>gl.INT_VEC2</code></li>\n  <li><code>gl.INT_VEC3</code></li>\n  <li><code>gl.INT_VEC4</code></li>\n  <li><code>gl.BOOL</code></li>\n  <li><code>gl.BOOL_VEC2</code></li>\n  <li><code>gl.BOOL_VEC3</code></li>\n  <li><code>gl.BOOL_VEC4</code></li>\n  <li><code>gl.FLOAT_MAT2</code></li>\n  <li><code>gl.FLOAT_MAT3</code></li>\n  <li><code>gl.FLOAT_MAT4</code></li>\n  <li><code>gl.SAMPLER_2D</code></li>\n  <li><code>gl.SAMPLER_CUBE</code></li>\n  <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" title=\"WebGL 2 context\">WebGL 2 context</a>, the\n    following values are possible additionally:\n    <ul>\n      <li><code>gl.UNSIGNED_INT</code></li>\n      <li><code>gl.UNSIGNED_INT_VEC2</code></li>\n      <li><code>gl.UNSIGNED_INT_VEC3</code></li>\n      <li><code>gl.UNSIGNED_INT_VEC4</code></li>\n      <li><code>gl.FLOAT_MAT2x3</code></li>\n      <li><code>gl.FLOAT_MAT2x4</code></li>\n      <li><code>gl.FLOAT_MAT3x2</code></li>\n      <li><code>gl.FLOAT_MAT3x4</code></li>\n      <li><code>gl.FLOAT_MAT4x2</code></li>\n      <li><code>gl.FLOAT_MAT4x3</code></li>\n      <li><code>gl.SAMPLER_3D</code></li>\n      <li><code>gl.SAMPLER_2D_SHADOW</code></li>\n      <li><code>gl.SAMPLER_2D_ARRAY</code></li>\n      <li><code>gl.SAMPLER_2D_ARRAY_SHADOW</code></li>\n      <li><code>gl.SAMPLER_CUBE_SHADOW</code></li>\n      <li><code>gl.INT_SAMPLER_2D</code></li>\n      <li><code>gl.INT_SAMPLER_3D</code></li>\n      <li><code>gl.INT_SAMPLER_CUBE</code></li>\n      <li><code>gl.INT_SAMPLER_2D_ARRAY</code></li>\n      <li><code>gl.UNSIGNED_INT_SAMPLER_2D</code></li>\n      <li><code>gl.UNSIGNED_INT_SAMPLER_3D</code></li>\n      <li><code>gl.UNSIGNED_INT_SAMPLER_CUBE</code></li>\n      <li><code>gl.UNSIGNED_INT_SAMPLER_2D_ARRAY</code></li>\n    </ul>\n  </li>\n</ul>\n\n<p>When <code>gl.linkProgram</code> is called, WebGL creates a list of active uniforms.\n  These are possible values of the <code>name</code> attribute of return values of\n  <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getActiveUniform\" title=\"getActiveUniform\" aria-current=\"page\"><code>getActiveUniform</code></a>. WebGL\n  generates one or more entries in the list depending on the declared type of the uniform\n  in the shader:</p>\n\n<ul>\n  <li>Single basic type: one entry with the name of the uniform. E.g. \n    <code>uniform vec4 a;</code> will result in  <code>a</code>.</li>\n  <li>Array of basic type: one entry with the name of the uniform suffixed with\n    <code>[0]</code>. E.g. <code>uniform vec4 b[];</code> will result in\n    <code>b[0]</code>.</li>\n  <li>Struct type: one entry for each member of the struct. E.g.\n    <code>uniform struct { float foo; vec4 bar; } c;</code> will result in\n    <code>c.foo</code> and <code>c.bar</code>.</li>\n  <li>Arrays of structs or arrays: each entry of the array will generate its own entries.\n    E.g. <code>uniform struct { float foo; vec4 bar; } d[2];</code> will result in:\n    <ul>\n      <li><code>d[0].foo</code></li>\n      <li><code>d[0].bar</code></li>\n      <li><code>d[1].foo</code></li>\n      <li><code>d[1].bar</code></li>\n    </ul>\n  </li>\n  <li>Uniform blocks: one entry for each member. If the uniform block has an instance\n    name, the block name is prefixed. E.g. <code>uniform Block { float foo; };</code> will\n    result in <code>foo</code>, and <code>uniform Block { float bar; } e;</code> will\n    result in <code>Block.bar</code>.</li>\n</ul>\n\n<p>The <code>size</code> attribute of the return value corresponds to the length of the\n  array for uniforms declared as arrays. Otherwise, it is 1 (this includes interface\n  blocks instanced with arrays).</p>"
    },
    "webglrenderingcontext.getattachedshaders": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getattachedshaders",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getAttachedShaders()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns a list of\n<a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> objects attached to a <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> object to get attached shaders for."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> objects that are attached to the\n  given <code>WebGLProgram</code>.</p>"
    },
    "webglrenderingcontext.getattriblocation": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getattriblocation",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getAttribLocation()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns the location of an\nattribute variable in a given <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> containing the attribute variable.",
        "name": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the name of the attribute variable whose location to get."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> number indicating the location of the variable name if found.\n  Returns -1 otherwise.</p>"
    },
    "webglrenderingcontext.getbufferparameter": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getbufferparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getBufferParameter()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns information about the\nbuffer.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying the target buffer object. Possible values: <ul> <li><code>gl.ARRAY_BUFFER</code>: Buffer containing vertex attributes, such as vertex coordinates, texture coordinate data, or vertex color data.</li> <li><code>gl.ELEMENT_ARRAY_BUFFER</code>: Buffer used for element indices.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.COPY_READ_BUFFER</code>: Buffer for copying from one buffer object to another.</li> <li><code>gl.COPY_WRITE_BUFFER</code>: Buffer for copying from one buffer object to another.</li> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER</code>: Buffer for transform feedback operations.</li> <li><code>gl.UNIFORM_BUFFER</code>: Buffer used for storing uniform blocks.</li> <li><code>gl.PIXEL_PACK_BUFFER</code>: Buffer used for pixel transfer operations.</li> <li><code>gl.PIXEL_UNPACK_BUFFER</code>: Buffer used for pixel transfer operations.</li> </ul> </li> </ul>",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying information to query. Possible values: <ul> <li><code>gl.BUFFER_SIZE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the size of the buffer in bytes.</li> <li><code>gl.BUFFER_USAGE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the usage pattern of the buffer. This is either: <ul> <li><code>gl.STATIC_DRAW</code>,</li> <li><code>gl.DYNAMIC_DRAW</code>,</li> <li><code>gl.STREAM_DRAW</code>.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.STATIC_READ</code>,</li> <li><code>gl.DYNAMIC_READ,</code></li> <li><code>gl.STREAM_READ</code>,</li> <li><code>gl.STATIC_COPY</code>,</li> <li><code>gl.DYNAMIC_COPY,</code></li> <li><code>gl.STREAM_COPY</code>.</li> </ul> </li> </ul> </li> </ul>"
      },
      "returns": "<p>Depends on the requested information (as specified with <code>pname</code>). Either a\n  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> or a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a>.</p>"
    },
    "webglrenderingcontext.getcontextattributes": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getcontextattributes",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <code><strong>WebGLRenderingContext.getContextAttributes()</strong></code> method\nreturns a <code>WebGLContextAttributes</code> object that contains the actual context\nparameters. Might return <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a>, if the context is lost.</p>",
      "returns": "<p>A <code>WebGLContextAttributes</code> object that contains the actual context\n  parameters, or <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a> if the context is lost.</p>"
    },
    "webglrenderingcontext.geterror": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/geterror",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getError()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns error information.</p>",
      "returns": "<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Constant</th>\n      <th scope=\"col\">Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>gl.NO_ERROR</code></td>\n      <td>No error has been recorded. The value of this constant is 0.</td>\n    </tr>\n    <tr>\n      <td><code>gl.INVALID_ENUM</code></td>\n      <td>An unacceptable value has been specified for an enumerated argument. The command\n        is ignored and the error flag is set.</td>\n    </tr>\n    <tr>\n      <td><code>gl.INVALID_VALUE</code></td>\n      <td>A numeric argument is out of range. The command is ignored and the error flag is\n        set.</td>\n    </tr>\n    <tr>\n      <td><code>gl.INVALID_OPERATION</code></td>\n      <td>The specified command is not allowed for the current state. The command is\n        ignored and the error flag is set.</td>\n    </tr>\n    <tr>\n      <td><code>gl.INVALID_FRAMEBUFFER_OPERATION</code></td>\n      <td>The currently bound framebuffer is not framebuffer complete when trying to\n        render to or to read from it.</td>\n    </tr>\n    <tr>\n      <td><code>gl.OUT_OF_MEMORY</code></td>\n      <td>Not enough memory is left to execute the command.</td>\n    </tr>\n    <tr>\n      <td><code>gl.CONTEXT_LOST_WEBGL</code></td>\n      <td>If the WebGL context is lost, this error is returned on the first call to\n        <code>getError</code>. Afterwards and until the context has been restored, it\n        returns <code>gl.NO_ERROR</code>.</td>\n    </tr>\n  </tbody>\n</table>"
    },
    "webglrenderingcontext.getextension": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getextension",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <code><strong>WebGLRenderingContext.getExtension()</strong></code> method enables a\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL</a> extension.</p>",
      "parameters": {
        "name": "A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> for the name of the WebGL extension to enable."
      },
      "returns": "<p>A WebGL extension object, or <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a> if name does not match\n  (case-insensitive) to one of the strings in\n  <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getSupportedExtensions\"><code>WebGLRenderingContext.getSupportedExtensions</code></a>.</p>"
    },
    "webglrenderingcontext.getframebufferattachmentparameter": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getframebufferattachmentparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The\n<strong><code>WebGLRenderingContext.getFramebufferAttachmentParameter()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns information\nabout a framebuffer's attachment.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.FRAMEBUFFER</code>: Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.DRAW_FRAMEBUFFER</code>: Equivalent to <code>gl.FRAMEBUFFER</code>. Used as a destination for drawing, rendering, clearing, and writing operations.</li> <li><code>gl.READ_FRAMEBUFFER</code>: Used as a source for reading operations. </li> </ul> </li> </ul>",
        "attachment": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the attachment point for the <code>texture</code> . Possible values: <ul> <li><code>gl.COLOR_ATTACHMENT0</code>: Texture attachment for the framebuffer's color buffer.</li> <li><code>gl.DEPTH_ATTACHMENT</code>: Texture attachment for the framebuffer's depth buffer.</li> <li><code>gl.STENCIL_ATTACHMENT</code>: Texture attachment for the framebuffer's stencil buffer.</li> <li><code>gl.DEPTH_STENCIL_ATTACHMENT</code>: Texture attachment for both, the depth and stencil buffer.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.COLOR_ATTACHMENT1<br> gl.COLOR_ATTACHMENT2<br> gl.COLOR_ATTACHMENT3<br> gl.COLOR_ATTACHMENT4<br> gl.COLOR_ATTACHMENT5<br> gl.COLOR_ATTACHMENT6<br> gl.COLOR_ATTACHMENT7<br> gl.COLOR_ATTACHMENT8<br> gl.COLOR_ATTACHMENT9<br> gl.COLOR_ATTACHMENT10<br> gl.COLOR_ATTACHMENT11<br> gl.COLOR_ATTACHMENT12<br> gl.COLOR_ATTACHMENT13<br> gl.COLOR_ATTACHMENT14<br> gl.COLOR_ATTACHMENT15</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_draw_buffers\"><code>WEBGL_draw_buffers</code></a> extension: <ul> <li><code>ext.COLOR_ATTACHMENT0_WEBGL</code> (same as <code>gl.COLOR_ATTACHMENT0</code>)<br> <code>ext.COLOR_ATTACHMENT1_WEBGL<br> ext.COLOR_ATTACHMENT2_WEBGL<br> ext.COLOR_ATTACHMENT3_WEBGL<br> ext.COLOR_ATTACHMENT4_WEBGL<br> ext.COLOR_ATTACHMENT5_WEBGL<br> ext.COLOR_ATTACHMENT6_WEBGL<br> ext.COLOR_ATTACHMENT7_WEBGL<br> ext.COLOR_ATTACHMENT8_WEBGL<br> ext.COLOR_ATTACHMENT9_WEBGL<br> ext.COLOR_ATTACHMENT10_WEBGL<br> ext.COLOR_ATTACHMENT11_WEBGL<br> ext.COLOR_ATTACHMENT12_WEBGL<br> ext.COLOR_ATTACHMENT13_WEBGL<br> ext.COLOR_ATTACHMENT14_WEBGL<br> ext.COLOR_ATTACHMENT15_WEBGL</code> </li> </ul> </li> </ul>",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying information to query. Possible values: <ul> <li><code>gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code>: The type which contains the attached image.</li> <li><code>gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</code>: The texture or renderbuffer of the attached image (<a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a> or <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a>).</li> <li><code>gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</code>: Mipmap level. Default value: 0.</li> <li><code>gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</code>: The name of cube-map face of the texture.</li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_sRGB\"><code>EXT_sRGB</code></a> extension: <ul> <li><code>ext.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT</code>: The framebuffer color encoding.</li> </ul> </li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE</code></li> <li><code>gl.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE</code></li> <li><code>gl.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING</code></li> <li><code>gl.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE</code></li> <li><code>gl.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE</code></li> <li><code>gl.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE</code></li> <li><code>gl.FRAMEBUFFER_ATTACHMENT_RED_SIZE</code></li> <li><code>gl.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE</code></li> <li><code>gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/OVR_multiview2\"><code>OVR_multiview2</code></a> extension: <ul> <li><code>ext.FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR</code>: the number of views of the framebuffer object attachment.</li> <li><code>ext.FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR</code>:  the base view index of the framebuffer object attachment.</li> </ul> </li> </ul>"
      },
      "returns": "<p>Depends on the requested information (as specified with <code>pname</code>). Either a\n  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a>, a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a>, a <a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a>, or a\n  <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a>.</p>\n\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\"><code>pname</code> parameter</th>\n      <th scope=\"col\">Return value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a> indicating the type of the texture. Either\n        <code>gl.RENDERBUFFER</code>, <code>gl.TEXTURE</code>, or if no image is attached,\n        <code>gl.NONE</code>.</td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</code></td>\n      <td>The texture (<a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a>) or renderbuffer\n        (<a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a>) of the attached image.</td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> indicating the mipmap level. Default value: 0.</td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a> indicating the name of cube-map face of the texture.\n        Possible values:\n        <ul>\n          <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_X</code>: Image for the positive X face\n            of the cube.</li>\n          <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_X</code>: Image for the negative X face\n            of the cube.</li>\n          <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Y</code>: Image for the positive Y face\n            of the cube.</li>\n          <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Y</code>: Image for the negative Y face\n            of the cube.</li>\n          <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Z</code>: Image for the positive Z face\n            of the cube.</li>\n          <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Z</code>: Image for the negative Z face\n            of the cube.</li>\n        </ul>\n      </td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> indicating the number of bits in the alpha component of\n        the attachment.</td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> indicating the number of bits in the blue component of\n        the attachment.</td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a> indicating the encoding of components of the specified\n        attachment. Either <code>gl.LINEAR</code> or <code>gl.SRGB</code>.</td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a> indicating the format of the components of the specified\n        attachment. Either <code>gl.FLOAT</code>, <code>gl.INT</code>,\n        <code>gl.UNSIGNED_INT</code>, <code>gl.SIGNED_NORMALIZED</code>, or\n        <code>gl.UNSIGNED_NORMALIZED</code>.</td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> indicating the number of bits in the depth component of\n        the attachment.</td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> indicating the number of bits in the green component of\n        the attachment.</td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_RED_SIZE</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> indicating the number of bits in the red component of the\n        attachment.</td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> indicating the number of bits in the stencil component of\n        the attachment.</td>\n    </tr>\n    <tr>\n      <td><code>gl.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> indicating the number of the texture layer which contains\n        the attached image.</td>\n    </tr>\n    <tr>\n      <td><code>ext.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a> indicating the framebuffer color encoding. Either\n        <code>gl.LINEAR</code> or <code>ext.SRGB_EXT</code>.</td>\n    </tr>\n    <tr>\n      <td><code>ext.FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLsizei\")}}\"><code>GLsizei</code></a> indicating the number of views of the framebuffer\n        object attachment.</td>\n    </tr>\n    <tr>\n      <td><code>ext.FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR</code></td>\n      <td>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> indicating the base view index of the framebuffer object\n        attachment.</td>\n    </tr>\n  </tbody>\n</table>"
    },
    "webglrenderingcontext.getparameter": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getParameter()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns a value for the passed\nparameter name.</p>",
      "parameters": {
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying which parameter value to return. See below for possible values."
      },
      "returns": "<p>Depends on the parameter.</p>"
    },
    "webglrenderingcontext.getprograminfolog": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getprograminfolog",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLRenderingContext.getProgramInfoLog</strong> returns the information\nlog for the specified <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> object. It contains errors that\noccurred during failed linking or validation of <code>WebGLProgram</code> objects.</p>",
      "parameters": {
        "program": "The <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> to query."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that contains diagnostic messages, warning messages, and\n  other information about the last linking or validation operation. When a\n  <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> object is initially created, its information log will be a\n  string of length 0.</p>"
    },
    "webglrenderingcontext.getprogramparameter": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getprogramparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getProgramParameter()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns information about the\ngiven program.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> to get parameter information from.",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying the information to query. Possible values: <ul> <li><code>gl.DELETE_STATUS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> indicating whether or not the program is flagged for deletion.</li> <li><code>gl.LINK_STATUS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> indicating whether or not the last link operation was successful.</li> <li><code>gl.VALIDATE_STATUS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> indicating whether or not the last validation operation was successful.</li> <li><code>gl.ATTACHED_SHADERS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the number of attached shaders to a program.</li> <li><code>gl.ACTIVE_ATTRIBUTES</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the number of active attribute variables to a program.</li> <li><code>gl.ACTIVE_UNIFORMS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the number of active uniform variables to a program.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.TRANSFORM_FEEDBACK_BUFFER_MODE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the buffer mode when transform feedback is active. May be <code>gl.SEPARATE_ATTRIBS</code> or <code>gl.INTERLEAVED_ATTRIBS</code>.</li> <li><code>gl.TRANSFORM_FEEDBACK_VARYINGS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the number of varying variables to capture in transform feedback mode.</li> <li><code>gl.ACTIVE_UNIFORM_BLOCKS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the number of uniform blocks containing active uniforms.</li> </ul> </li> </ul>"
      },
      "returns": "<p>Returns the requested program information (as specified with <code>pname</code>).</p>"
    },
    "webglrenderingcontext.getrenderbufferparameter": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getrenderbufferparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getRenderbufferParameter()</code></strong>\nmethod of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns information\nabout the renderbuffer.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying the target renderbuffer object. Possible values: <ul> <li><code>gl.RENDERBUFFER</code>: Buffer data storage for single images in a renderable internal format.</li> </ul>",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying the information to query. Possible values: <ul> <li><code>gl.RENDERBUFFER_WIDTH</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the width of the image of the currently bound renderbuffer.</li> <li><code>gl.RENDERBUFFER_HEIGHT</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the height of the image of the currently bound renderbuffer.</li> <li><code>gl.RENDERBUFFER_INTERNAL_FORMAT</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating the internal format of the currently bound renderbuffer. The default is <code>gl.RGBA4</code>. Possible return values: <ul> <li><code>gl.RGBA4</code>: 4 red bits, 4 green bits, 4 blue bits 4 alpha bits. </li> <li><code>gl.RGB565</code>: 5 red bits, 6 green bits, 5 blue bits. </li> <li><code>gl.RGB5_A1</code>: 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit. </li> <li><code>gl.DEPTH_COMPONENT16</code>: 16 depth bits.</li> <li><code>gl.STENCIL_INDEX8</code>: 8 stencil bits.</li> </ul> </li> <li><code>gl.RENDERBUFFER_GREEN_SIZE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> that is the resolution size (in bits) for the green color.</li> <li><code>gl.RENDERBUFFER_BLUE_SIZE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> that is the resolution size (in bits) for the blue color.</li> <li><code>gl.RENDERBUFFER_RED_SIZE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> that is the resolution size (in bits) for the red color.</li> <li><code>gl.RENDERBUFFER_ALPHA_SIZE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> that is the resolution size (in bits) for the alpha component.</li> <li><code>gl.RENDERBUFFER_DEPTH_SIZE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> that is the resolution size (in bits) for the depth component.</li> <li><code>gl.RENDERBUFFER_STENCIL_SIZE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> that is the resolution size (in bits) for the stencil component.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following value is available additionally: <ul> <li><code>gl.RENDERBUFFER_SAMPLES</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the number of samples of the image of the currently bound renderbuffer.</li> </ul> </li> </ul>"
      },
      "returns": "<p>Depends on the requested information (as specified with <code>pname</code>). Either a\n  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a> or a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLenum\")}}\"><code>GLenum</code></a>.</p>"
    },
    "webglrenderingcontext.getshaderinfolog": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getshaderinfolog",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLRenderingContext.getShaderInfoLog</strong> returns the information log\nfor the specified <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> object. It contains warnings, debugging and\ncompile information.</p>",
      "parameters": {
        "shader": "A <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> to query."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> that contains diagnostic messages, warning messages, and\n  other information about the last compile operation. When a <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a>\n  object is initially created, its information log will be a string of length 0.</p>"
    },
    "webglrenderingcontext.getshaderparameter": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getshaderparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getShaderParameter()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns information about the\ngiven shader.</p>",
      "parameters": {
        "shader": "A <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> to get parameter information from.",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the information to query. Possible values: <ul> <li><code>gl.DELETE_STATUS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> indicating whether or not the shader is flagged for deletion.</li> <li><code>gl.COMPILE_STATUS</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> indicating whether or not the last shader compilation was successful.</li> <li><code>gl.SHADER_TYPE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> indicating whether the shader is a vertex shader (<code>gl.VERTEX_SHADER</code>) or fragment shader (<code>gl.FRAGMENT_SHADER</code>) object.</li> </ul>"
      },
      "returns": "<p>Returns the requested shader information (as specified with <code>pname</code>).</p>"
    },
    "webglrenderingcontext.getshaderprecisionformat": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getshaderprecisionformat",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p class=\"summary\">The\n<strong><code>WebGLRenderingContext.getShaderPrecisionFormat()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns a new\n<a href=\"$MDN_URL$/Web/API/WebGLShaderPrecisionFormat\"><code>WebGLShaderPrecisionFormat</code></a> object describing the range and precision for\nthe specified shader numeric format.</p>",
      "parameters": {
        "shaderType": "Either a <code>gl.FRAGMENT_SHADER</code> or a <code>gl.VERTEX_SHADER</code> .",
        "precisionType": "A precision type value. Either <code>gl.LOW_FLOAT</code> , <code>gl.MEDIUM_FLOAT</code> , <code>gl.HIGH_FLOAT</code> , <code>gl.LOW_INT</code> , <code>gl.MEDIUM_INT</code> , or <code>gl.HIGH_INT</code> ."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLShaderPrecisionFormat\"><code>WebGLShaderPrecisionFormat</code></a> object or <code>null</code>, if an error\n  occurs.</p>"
    },
    "webglrenderingcontext.getshadersource": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getshadersource",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getShaderSource()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns the source code of a\n<a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> as a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>.</p>",
      "parameters": {
        "shader": "A <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> object to get the source code from."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the source code of the shader.</p>"
    },
    "webglrenderingcontext.getsupportedextensions": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getsupportedextensions",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <code><strong>WebGLRenderingContext.getSupportedExtensions()</strong></code> method\nreturns a list of all the supported <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL</a>\nextensions.</p>",
      "returns": "<p>An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of strings with all the supported WebGL extensions.</p>"
    },
    "webglrenderingcontext.gettexparameter": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/gettexparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getTexParameter()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns information about the\ngiven texture.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP</code>: A cube-mapped texture.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.TEXTURE_3D</code>: A three-dimensional texture.</li> <li><code>gl.TEXTURE_2D_ARRAY</code>: A two-dimensional array texture.</li> </ul> </li> </ul>",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying the information to query. Possible values: <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">pname</th> <th scope=\"col\">Return type</th> <th scope=\"col\">Description</th> <th scope=\"col\">Possible return values</th> </tr> </thead> <tbody> <tr> <th colspan=\"4\">Available in a WebGL 1 context</th> </tr> <tr> <td><code>gl.TEXTURE_MAG_FILTER</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a></td> <td>Texture magnification filter</td> <td><code>gl.LINEAR</code> (default value), <code>gl.NEAREST</code>.</td> </tr> <tr> <td><code>gl.TEXTURE_MIN_FILTER</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a></td> <td>Texture minification filter</td> <td><code>gl.LINEAR</code>, <code>gl.NEAREST</code>, <code>gl.NEAREST_MIPMAP_NEAREST</code>, <code>gl.LINEAR_MIPMAP_NEAREST</code>, <code>gl.NEAREST</code>_MIPMAP_LINEAR (default value), <code>gl.LINEAR_MIPMAP_LINEAR</code>.</td> </tr> <tr> <td><code>gl.TEXTURE_WRAP_S</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a></td> <td>Wrapping function for texture coordinate <code>s</code></td> <td><code>gl.REPEAT</code> (default value), <code>gl.CLAMP_TO_EDGE</code>, <code>gl.MIRRORED_REPEAT</code>.</td> </tr> <tr> <td><code>gl.TEXTURE_WRAP_T</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a></td> <td>Wrapping function for texture coordinate <code>t</code></td> <td><code>gl.REPEAT</code> (default value), <code>gl.CLAMP_TO_EDGE</code>, <code>gl.MIRRORED_REPEAT</code>.</td> </tr> <tr> <th colspan=\"4\">Additionally available when using the <a href=\"$MDN_URL$/Web/API/EXT_texture_filter_anisotropic\"><code>EXT_texture_filter_anisotropic</code></a> extension</th> </tr> <tr> <td><code>ext.TEXTURE_MAX_ANISOTROPY_EXT</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a></td> <td>Maximum anisotropy for a texture</td> <td>Any float values.</td> </tr> <tr> <th colspan=\"4\">Additionally available when using a WebGL 2 context</th> </tr> <tr> <td><code>gl.TEXTURE_BASE_LEVEL</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a></td> <td>Texture mipmap level</td> <td>Any int values.</td> </tr> <tr> <td><code>gl.TEXTURE_COMPARE_FUNC</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a></td> <td>Comparison function</td> <td><code>gl.LEQUAL</code> (default value), <code>gl.GEQUAL</code>, <code>gl.LESS</code>, <code>gl.GREATER</code>, <code>gl.EQUAL</code>, <code>gl.NOTEQUAL</code>, <code>gl.ALWAYS</code>, <code>gl.NEVER</code>.</td> </tr> <tr> <td><code>gl.TEXTURE_COMPARE_MODE</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a></td> <td>Texture comparison mode</td> <td><code>gl.NONE</code> (default value), <code>gl.COMPARE_REF_TO_TEXTURE</code>.</td> </tr> <tr> <td><code>gl.TEXTURE_IMMUTABLE_FORMAT</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a></td> <td>Immutability of the texture format and size</td> <td>true or false.</td> </tr> <tr> <td><code>gl.TEXTURE_IMMUTABLE_LEVELS</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a></td> <td>?</td> <td>Any uint values.</td> </tr> <tr> <td><code>gl.TEXTURE_MAX_LEVEL</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a></td> <td>Maximum texture mipmap array level</td> <td>Any int values.</td> </tr> <tr> <td><code>gl.TEXTURE_MAX_LOD</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a></td> <td>Texture maximum level-of-detail value</td> <td>Any float values.</td> </tr> <tr> <td><code>gl.TEXTURE_MIN_LOD</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a></td> <td>Texture minimum level-of-detail value</td> <td>Any float values.</td> </tr> <tr> <td><code>gl.TEXTURE_WRAP_R</code></td> <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a></td> <td>Wrapping function for texture coordinate <code>r</code></td> <td><code>gl.REPEAT</code> (default value), <code>gl.CLAMP_TO_EDGE</code>, <code>gl.MIRRORED_REPEAT</code>.</td> </tr> </tbody> </table>"
      },
      "returns": "<p>Returns the requested texture information (as specified with <code>pname</code>). If an\n  error occurs, <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a> is returned.</p>"
    },
    "webglrenderingcontext.getuniform": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getuniform",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getUniform()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns the value of a uniform\nvariable at a given location.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> containing the uniform attribute.",
        "location": "A <a href=\"$MDN_URL$/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code></a> object containing the location of the uniform attribute to get."
      },
      "returns": "<p>The returned type depends on the uniform type:</p>\n\n<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Uniform type</th>\n      <th scope=\"col\">Returned type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th colspan=\"2\">WebGL 1 only</th>\n    </tr>\n    <tr>\n      <td><code>boolean</code></td>\n      <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLBoolean\")}}\"><code>GLBoolean</code></a></td>\n    </tr>\n    <tr>\n      <td><code>int</code></td>\n      <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a></td>\n    </tr>\n    <tr>\n      <td><code>float</code></td>\n      <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLfloat\")}}\"><code>GLfloat</code></a></td>\n    </tr>\n    <tr>\n      <td><code>vec2</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 2 elements)</td>\n    </tr>\n    <tr>\n      <td><code>ivec2</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a> (with 2 elements)</td>\n    </tr>\n    <tr>\n      <td><code>bvec2</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLBoolean\")}}\"><code>GLBoolean</code></a> (with 2 elements)</td>\n    </tr>\n    <tr>\n      <td><code>vec3</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 3 elements)</td>\n    </tr>\n    <tr>\n      <td><code>ivec3</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a> (with 3 elements)</td>\n    </tr>\n    <tr>\n      <td><code>bvec3</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLBoolean\")}}\"><code>GLBoolean</code></a> (with 3 elements)</td>\n    </tr>\n    <tr>\n      <td><code>vec4</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 4 elements)</td>\n    </tr>\n    <tr>\n      <td><code>ivec4</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a> (with 4 elements)</td>\n    </tr>\n    <tr>\n      <td><code>bvec4</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLBoolean\")}}\"><code>GLBoolean</code></a> (with 4 elements)</td>\n    </tr>\n    <tr>\n      <td><code>mat2</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 4 elements)</td>\n    </tr>\n    <tr>\n      <td><code>mat3</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 9 elements)</td>\n    </tr>\n    <tr>\n      <td><code>mat4</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 16 elements)</td>\n    </tr>\n    <tr>\n      <td><code>sampler2D</code></td>\n      <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a></td>\n    </tr>\n    <tr>\n      <td><code>samplerCube</code></td>\n      <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a></td>\n    </tr>\n    <tr>\n      <th colspan=\"2\">Additionally available in WebGL 2</th>\n    </tr>\n    <tr>\n      <td><code>uint</code></td>\n      <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLuint\")}}\"><code>GLuint</code></a></td>\n    </tr>\n    <tr>\n      <td><code>uvec2</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a> (with 2 elements)</td>\n    </tr>\n    <tr>\n      <td><code>uvec3</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a> (with 3 elements)</td>\n    </tr>\n    <tr>\n      <td><code>uvec4</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a> (with 4 elements)</td>\n    </tr>\n    <tr>\n      <td><code>mat2x3</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 6 elements)</td>\n    </tr>\n    <tr>\n      <td><code>mat2x4</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 8 elements)</td>\n    </tr>\n    <tr>\n      <td><code>mat3x2</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 6 elements)</td>\n    </tr>\n    <tr>\n      <td><code>mat3x4</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 12 elements)</td>\n    </tr>\n    <tr>\n      <td><code>mat4x2</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 8 elements)</td>\n    </tr>\n    <tr>\n      <td><code>mat4x3</code></td>\n      <td><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 12 elements)</td>\n    </tr>\n    <tr>\n      <td>any sampler type</td>\n      <td><a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLint\")}}\"><code>GLint</code></a></td>\n    </tr>\n  </tbody>\n</table>"
    },
    "webglrenderingcontext.getuniformlocation": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getuniformlocation",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p><span class=\"seoSummary\">Part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL\nAPI</a>, the <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> method\n<strong><code>getUniformLocation()</code></strong> returns the location of a\nspecific <strong>uniform</strong> variable which is part of a given\n<a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>.</span> The uniform variable is returned as a\n<a href=\"$MDN_URL$/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code></a> object, which is an opaque identifier used to\nspecify where in the GPU's memory that uniform variable is located.</p>\n<p>Once you have the uniform's location, you can access the uniform itself using one of\nthe other uniform access methods, passing in the uniform location as one of the\ninputs:</p>\n<dl>\n<dt><a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getUniform\" ><code>getUniform()</code></a></dt>\n<dd>Returns the value of the uniform at the given location.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/uniform\" ><code>uniform[1234][fi][v]()</code></a></dt>\n<dd>Sets the uniform's value to the specified value, which may be a single floating\npoint or integer number, or a 2-4 component vector specified either as a list of\nvalues or as a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> or <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a>.</dd>\n<dt><a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/uniformMatrix\" ><code>uniformMatrix[234][fv]()</code></a>\n</dt>\n<dd>Sets the uniform's value to the specified matrix, possibly with transposition. The\nvalue is represented as a sequence of <code>GLfloat</code> values or as a\n<code>Float32Array</code>.</dd>\n</dl>\n<p>The uniform itself is declared in the shader program using GLSL.</p>",
      "parameters": {
        "program": "The <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> in which to locate the specified uniform variable.",
        "name": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the name of the uniform variable whose location is to be returned. The name can't have any whitespace in it, and you can't use this function to get the location of any uniforms starting with the reserved string <code>\"gl_\"</code> , since those are internal to the WebGL layer. <br> <br> The possible values correspond to the uniform names returned by <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getActiveUniform\" ><code>getActiveUniform</code></a> ; see that function for specifics on how declared uniforms map to uniform location names. <br> <br> Additionally, for uniforms declared as arrays, the following names are also valid: <br> <ul> <li>The uniform name without the <code>[0]</code> suffix. E.g. the location returned for <code>arrayUniform</code> is equivalent to the one for <code>arrayUniform[0]</code>.</li> <li>The uniform name indexed with an integer. E.g. the location returned for <code>arrayUniform[2]</code> would point directly to the third entry of the <code>arrayUniform</code> uniform.</li> </ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code></a> value indicating the location of the named\n    variable, if it exists. If the specified variable doesn't exist, <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a> is\n    returned instead.</p>\n\n<p>The <code>WebGLUniformLocation</code> is an opaque value used to uniquely identify the\n    location in the GPU's memory at which the uniform variable is located. With this value\n    in hand, you can call other WebGL methods to access the value of the uniform variable.</p>\n\n<div class=\"note notecard\">\n    <p>The <code>WebGLUniformLocation</code> type is compatible with the\n        <code>GLint</code> type when specifying the index or location of a uniform\n        attribute.</p>\n</div>"
    },
    "webglrenderingcontext.getvertexattrib": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getvertexattrib",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getVertexAttrib()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns information about a vertex\nattribute at a given position.</p>",
      "parameters": {
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the vertex attribute.",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the information to query. Possible values: <ul> <li><code>gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</code>: Returns the currently bound <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a>.</li> <li><code>gl.VERTEX_ATTRIB_ARRAY_ENABLED</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> that is <code>true</code> if the vertex attribute is enabled at this <code>index</code>. Otherwise <code>false</code>.</li> <li><code>gl.VERTEX_ATTRIB_ARRAY_SIZE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the size of an element of the vertex array.</li> <li><code>gl.VERTEX_ATTRIB_ARRAY_STRIDE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> indicating the number of bytes between successive elements in the array. 0 means that the elements are sequential.</li> <li><code>gl.VERTEX_ATTRIB_ARRAY_TYPE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> representing the array type. One of <ul> <li><code>gl.BYTE</code>,</li> <li><code>gl.UNSIGNED_BYTE</code>,</li> <li><code>gl.SHORT</code>,</li> <li><code>gl.UNSIGNED_SHORT</code>,</li> <li><code>gl.FLOAT</code>.</li> </ul> </li> <li><code>gl.VERTEX_ATTRIB_ARRAY_NORMALIZED</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> that is true if fixed-point data types are normalized for the vertex attribute array at the given <code>index</code>.</li> <li><code>gl.CURRENT_VERTEX_ATTRIB</code>: Returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> (with 4 elements) representing the current value of the vertex attribute at the given <code>index</code>.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.VERTEX_ATTRIB_ARRAY_INTEGER</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> indicating whether or not an integer data type is in the vertex attribute array at the given <code>index</code>.</li> <li><code>gl.VERTEX_ATTRIB_ARRAY_DIVISOR</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> describing the frequency divisor used for instanced rendering.</li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/ANGLE_instanced_arrays\"><code>ANGLE_instanced_arrays</code></a> extension: <ul> <li><code>ext.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE</code>: Returns a <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> describing the frequency divisor used for instanced rendering.</li> </ul> </li> </ul>"
      },
      "returns": "<p>Returns the requested vertex attribute information (as specified with\n  <code>pname</code>).</p>"
    },
    "webglrenderingcontext.getvertexattriboffset": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/getvertexattriboffset",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.getVertexAttribOffset()</code></strong> method\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns the address of a\nspecified vertex attribute.</p>",
      "parameters": {
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the vertex attribute.",
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> which must be <code>gl.VERTEX_ATTRIB_ARRAY_POINTER</code> ."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLintptr\")}}\"><code>GLintptr</code></a> indicating the address of the vertex attribute.</p>"
    },
    "webglrenderingcontext.hint": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/hint",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.hint()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies hints for certain\nbehaviors. The interpretation of these hints depend on the implementation.</p>",
      "parameters": {
        "target": "Sets which behavior to be controlled. Possible values: <ul> <li><code>gl.GENERATE_MIPMAP_HINT</code>: Quality of filtering when generating mipmap images with <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/generateMipmap\"><code>WebGLRenderingContext.generateMipmap()</code></a>.</li> <li>When using the <a href=\"$MDN_URL$/Web/API/OES_standard_derivatives\"><code>OES_standard_derivatives</code></a> extension: <ul> <li><code>ext.FRAGMENT_SHADER_DERIVATIVE_HINT_OES</code>: Accuracy of the derivative calculation for the GLSL built-in functions: <code>dFdx</code>, <code>dFdy</code>, and <code>fwidth</code>.</li> </ul> </li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.FRAGMENT_SHADER_DERIVATIVE_HINT</code>: Same as <code>ext.FRAGMENT_SHADER_DERIVATIVE_HINT_OES</code></li> </ul> </li> </ul>",
        "mode": "Sets the behavior. The default value is <code>gl.DONT_CARE</code> . The possible values are: <ul> <li><code>gl.FASTEST</code>: The most efficient behavior should be used.</li> <li><code>gl.NICEST</code>: The most correct or the highest quality option should be used.</li> <li><code>gl.DONT_CARE</code>: There is no preference for this behavior.</li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.isbuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/isbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.isBuffer()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns <code>true</code> if the\npassed <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> is valid and <code>false</code> otherwise.</p>",
      "parameters": {
        "buffer": "A <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> to check."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating whether or not the buffer is valid.</p>"
    },
    "webglrenderingcontext.iscontextlost": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/iscontextlost",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p><span class=\"seoSummary\">The\n<code><strong>WebGLRenderingContext.isContextLost()</strong></code> method returns a\nboolean value indicating whether or not the WebGL context has been lost and\nmust be re-established before rendering can resume.</span></p>",
      "returns": "<p>A boolean value which is <code>true</code> if the context is lost, or\n  <code>false</code> if not.</p>"
    },
    "webglrenderingcontext.isenabled": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/isenabled",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.isEnabled()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> tests whether a specific WebGL\ncapability is enabled or not for this context.</p>\n<p>By default, all capabilities except <code>gl.DITHER</code> are\n<strong>disabled</strong>.</p>",
      "parameters": {
        "cap": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying which WebGL capability to test. Possible values:<table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Constant</th> <th scope=\"col\">Description</th> </tr> </thead> <tbody> <tr> <td><code>gl.BLEND</code></td> <td>Blending of the computed fragment color values. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/blendFunc\"><code>WebGLRenderingContext.blendFunc()</code></a>.</td> </tr> <tr> <td><code>gl.CULL_FACE</code></td> <td>Culling of polygons. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/cullFace\"><code>WebGLRenderingContext.cullFace()</code></a>. </td> </tr> <tr> <td><code>gl.DEPTH_TEST</code></td> <td>Depth comparisons and updates to the depth buffer. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/depthFunc\"><code>WebGLRenderingContext.depthFunc()</code></a>.</td> </tr> <tr> <td><code>gl.DITHER</code></td> <td>Dithering of color components before they get written to the color buffer. </td> </tr> <tr> <td><code>gl.POLYGON_OFFSET_FILL</code></td> <td>Adding an offset to depth values of polygon's fragments. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/polygonOffset\"><code>WebGLRenderingContext.polygonOffset()</code></a>.</td> </tr> <tr> <td><code>gl.SAMPLE_ALPHA_TO_COVERAGE</code></td> <td>Computation of a temporary coverage value determined by the alpha value. </td> </tr> <tr> <td><code>gl.SAMPLE_COVERAGE</code></td> <td>ANDing the fragment's coverage with the temporary coverage value. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/sampleCoverage\"><code>WebGLRenderingContext.sampleCoverage()</code></a>.</td> </tr> <tr> <td><code>gl.SCISSOR_TEST</code></td> <td>Scissor test that discards fragments that are outside of the scissor rectangle. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/scissor\"><code>WebGLRenderingContext.scissor()</code></a>.</td> </tr> <tr> <td><code>gl.STENCIL_TEST</code></td> <td>Stencil testing and updates to the stencil buffer. See <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/stencilFunc\"><code>WebGLRenderingContext.stencilFunc()</code></a>.</td> </tr> </tbody> </table> When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a> , the following values are available additionally: <table class=\"standard-table\"> <thead> <tr> <th scope=\"col\">Constant</th> <th scope=\"col\">Description</th> </tr> </thead> <tbody> <tr> <td><code>gl.RASTERIZER_DISCARD</code></td> <td>Primitives are discarded immediately before the rasterization stage, but after the optional transform feedback stage. <code>gl.clear()</code> commands are ignored.</td> </tr> </tbody> </table>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating if the capability <em>cap</em> is enabled\n  (<code>true</code>), or not (<code>false</code>).</p>"
    },
    "webglrenderingcontext.isframebuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/isframebuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.isFramebuffer()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns <code>true</code> if the\npassed <a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> is valid and <code>false</code> otherwise.</p>",
      "parameters": {
        "framebuffer": "A <a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a> to check."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating whether or not the frame buffer is valid.</p>"
    },
    "webglrenderingcontext.isprogram": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/isprogram",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.isProgram()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns <code>true</code> if the\npassed <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> is valid, <code>false</code> otherwise.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> to check."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating whether or not the program is valid.</p>"
    },
    "webglrenderingcontext.isrenderbuffer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/isrenderbuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.isRenderbuffer()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns <code>true</code> if the\npassed <a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a> is valid and <code>false</code> otherwise.</p>",
      "parameters": {
        "renderbuffer": "A <a href=\"$MDN_URL$/Web/API/WebGLRenderbuffer\"><code>WebGLRenderbuffer</code></a> to check."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating whether or not the renderbuffer is valid.</p>"
    },
    "webglrenderingcontext.isshader": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/isshader",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.isShader()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns <code>true</code> if the\npassed <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> is valid, <code>false</code> otherwise.</p>",
      "parameters": {
        "shader": "A <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> to check."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating whether or not the shader is valid.</p>"
    },
    "webglrenderingcontext.istexture": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/istexture",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.isTexture()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> returns <code>true</code> if the\npassed <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> is valid and <code>false</code> otherwise.</p>",
      "parameters": {
        "texture": "A <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> to check."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" data-flaw-src=\"{{domxref(\"GLboolean\")}}\"><code>GLboolean</code></a> indicating whether or not the texture is valid.</p>"
    },
    "webglrenderingcontext.linewidth": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/linewidth",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "IE": "11"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.lineWidth()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> sets the line width of rasterized\nlines.</p>\n<div class=\"warning notecard\">\n<p>The webgl spec, based on the OpenGL ES 2.0/3.0 specs points out that the minimum and\nmaximum width for a line is implementation defined. The maximum minimum width is\nallowed to be 1.0. The minimum maximum width is also allowed to be 1.0. Because of\nthese implementation defined limits it is not recommended to use line widths other\nthan 1.0 since there is no guarantee any user's browser will display any other width.</p>\n<p>As of January 2017 most implementations of WebGL only support a minimum of 1 and a\nmaximum of 1 as the technology they are based on has these same limits.</p>\n</div>",
      "parameters": {
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a> specifying the width of rasterized lines. Default value: 1."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.linkprogram": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/linkprogram",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> interface's\n<code><strong>linkProgram()</strong></code> method links a given\n<a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>, completing the process of preparing the GPU code for the\nprogram's fragment and vertex shaders.</span></p>",
      "parameters": {
        "program": "The <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> to link."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.makexrcompatible": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/makexrcompatible",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> method\n<code><strong>makeXRCompatible()</strong></code> ensures that the rendering context\ndescribed by the <code>WebGLRenderingContext</code> is ready to render the scene for the\nimmersive <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR</a> device on which it\nwill be displayed. If necessary, the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL</a>\nlayer may reconfigure the context to be ready to render to a different device than it\noriginally was.</p>\n<p>This is useful if you have an application which can start out being presented on a\nstandard 2D display but can then be transitioned to a 3D immersion system.</p>",
      "returns": "<p>A\n  <code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></code>\n  which successfully resolves once the WebGL context is ready to be used for rendering <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR</a> content.</p>",
      "throws": {
        "AbortError": "Switching the context over to the WebXR-compatible context failed.",
        "InvalidStateError": "The WebGL context has been lost or there is no available WebXR device."
      }
    },
    "webglrenderingcontext.pixelstorei": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/pixelstorei",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.pixelStorei()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies the pixel storage modes.</p>",
      "parameters": {
        "pname": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying which parameter to set. See below for possible values.",
        "param": "A  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying a value to set the <em><code>pname</code></em> parameter to. See below for possible values."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.polygonoffset": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/polygonoffset",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.polygonOffset()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies the scale factors and\nunits to calculate depth values.</p>\n<p>The offset is added before the depth test is performed and before the value is written\ninto the depth buffer.</p>",
      "parameters": {
        "factor": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a> which sets the scale factor for the variable depth offset for each polygon. The default value is 0.",
        "units": "A  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLfloat</code></a> which sets the multiplier by which an implementation-specific value is multiplied with to create a constant depth offset. The default value is 0."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.readpixels": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/readpixels",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.readPixels()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> reads a block of pixels from a\nspecified rectangle of the current color framebuffer into an\n<a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a> object.</p>",
      "parameters": {
        "x": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the first horizontal pixel that is read from the lower left corner of a rectangular block of pixels.",
        "y": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the first vertical pixel that is read from the lower left corner of a rectangular block of pixels.",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the rectangle.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the rectangle.",
        "format": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the format of the pixel data. Possible values: <ul> <li><code>gl.ALPHA</code>: Discards the red, green and blue components and reads the alpha component.</li> <li><code>gl.RGB</code>: Discards the alpha components and reads the red, green and blue components.</li> <li><code>gl.RGBA</code>: Red, green, blue and alpha components are read from the color buffer.</li> </ul> WebGL2 adds<br> <ul> <li><code>gl.RED</code></li> <li><code>gl.RG</code></li> <li><code>gl.RED_INTEGER</code></li> <li><code>gl.RG_INTEGER</code></li> <li><code>gl.RGB_INTEGER</code></li> <li><code>gl.RGBA_INTEGER</code></li> </ul>",
        "type": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the data type of the pixel data. Possible values: <ul> <li><code>gl.UNSIGNED_BYTE</code></li> <li><code>gl.UNSIGNED_SHORT_5_6_5</code></li> <li><code>gl.UNSIGNED_SHORT_4_4_4_4</code></li> <li><code>gl.UNSIGNED_SHORT_5_5_5_1</code></li> <li><code>gl.FLOAT</code></li> </ul> WebGL2 adds<br> <ul> <li><code>gl.BYTE</code></li> <li><code>gl.UNSIGNED_INT_2_10_10_10_REV</code></li> <li><code>gl.HALF_FLOAT</code></li> <li><code>gl.SHORT</code></li> <li><code>gl.UNSIGNED_SHORT</code></li> <li><code>gl.INT</code></li> <li><code>gl.UNSIGNED_INT</code></li> <li><code>gl.UNSIGNED_INT_10F_11F_11F_REV</code></li> <li><code>gl.UNSIGNED_INT_5_9_9_9_REV</code></li> </ul>",
        "pixels": "An <a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a> object to read data into. The array type must match the type of the <code>type</code> parameter. <ul> <li><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a> for <code>gl.UNSIGNED_BYTE</code>.</li> <li><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint16Array\"><code>Uint16Array</code></a> for <code>gl.UNSIGNED_SHORT_5_6_5</code>, <code>gl.UNSIGNED_SHORT_4_4_4_4</code>, or <code>gl.UNSIGNED_SHORT_5_5_5_1</code>. </li> <li><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> for <code>gl.FLOAT</code>.</li> </ul>",
        "dstOffset": "Offset. Defaults to 0."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.renderbufferstorage": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/renderbufferstorage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.renderbufferStorage()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> creates and initializes a\nrenderbuffer object's data store.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying the target renderbuffer object. Possible values: <ul> <li><code>gl.RENDERBUFFER</code>: Buffer data storage for single images in a renderable internal format.</li> </ul>",
        "internalFormat": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glenum</code></a> specifying the internal format of the renderbuffer. Possible values: <ul> <li><code>gl.RGBA4</code>: 4 red bits, 4 green bits, 4 blue bits 4 alpha bits.</li> <li><code>gl.RGB565</code>: 5 red bits, 6 green bits, 5 blue bits.</li> <li><code>gl.RGB5_A1</code>: 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit. </li> <li><code>gl.DEPTH_COMPONENT16</code>: 16 depth bits.</li> <li><code>gl.STENCIL_INDEX8</code>: 8 stencil bits.</li> <li><code>gl.DEPTH_STENCIL</code></li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.R8</code></li> <li><code>gl.R8UI</code></li> <li><code>gl.R8I</code></li> <li><code>gl.R16UI</code></li> <li><code>gl.R16I</code></li> <li><code>gl.R32UI</code></li> <li><code>gl.R32I</code></li> <li><code>gl.RG8</code></li> <li><code>gl.RG8UI</code></li> <li><code>gl.RG8I</code></li> <li><code>gl.RG16UI</code></li> <li><code>gl.RG16I</code></li> <li><code>gl.RG32UI</code></li> <li><code>gl.RG32I</code></li> <li><code>gl.RGB8</code></li> <li><code>gl.RGBA8</code></li> <li><code>gl.SRGB8_ALPHA8</code> (also available as an extension for WebGL 1, see below)</li> <li><code>gl.RGB10_A2</code></li> <li><code>gl.RGBA8UI</code></li> <li><code>gl.RGBA8I</code></li> <li><code>gl.RGB10_A2UI</code></li> <li><code>gl.RGBA16UI</code></li> <li><code>gl.RGBA16I</code></li> <li><code>gl.RGBA32I</code></li> <li><code>gl.RGBA32UI</code></li> <li><code>gl.DEPTH_COMPONENT24</code></li> <li><code>gl.DEPTH_COMPONENT32F</code></li> <li><code>gl.DEPTH24_STENCIL8</code></li> <li><code>gl.DEPTH32F_STENCIL8</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_color_buffer_float\"><code>WEBGL_color_buffer_float</code></a> extension: <ul> <li><code>ext.RGBA32F_EXT</code>: RGBA 32-bit floating-point type.</li> <li><code>ext.RGB32F_EXT</code>: RGB 32-bit floating-point type.</li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_sRGB\"><code>EXT_sRGB</code></a> extension: <ul> <li><code>ext.SRGB8_ALPHA8_EXT</code>: 8-bit sRGB and alpha.</li> </ul> </li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a> and the <a href=\"$MDN_URL$/Web/API/EXT_color_buffer_float\"><code>EXT_color_buffer_float</code></a> extension: <ul> <li><code>gl.R16F</code></li> <li><code>gl.RG16F</code></li> <li><code>gl.RGBA16F</code></li> <li><code>gl.R32F</code></li> <li><code>gl.RG32F</code></li> <li><code>gl.RGBA32F</code></li> <li><code>gl.R11F_G11F_B10F</code></li> </ul> </li> </ul>",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the renderbuffer in pixels.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the renderbuffer in pixels."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.samplecoverage": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/samplecoverage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.sampleCoverage()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specifies multi-sample coverage\nparameters for anti-aliasing effects.</p>",
      "parameters": {
        "value": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLclampf</code></a> which sets a single floating-point coverage value clamped to the range [0,1]. The default value is 1.0.",
        "invert": "A  <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> which sets whether or not the coverage masks should be inverted. The default value is <code>false</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.scissor": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/scissor",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.scissor()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> sets a scissor box, which limits\nthe drawing to a specified rectangle.</p>",
      "parameters": {
        "x": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the horizontal coordinate for the lower left corner of the box. Default value: 0.",
        "y": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the vertical coordinate for the lower left corner of the box. Default value: 0.",
        "width": "A non-negative <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glsizei</code></a> specifying the width of the scissor box. Default value: width of the canvas.",
        "height": "A non-negative <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glsizei</code></a> specifying the height of the scissor box. Default value: height of the canvas."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.shadersource": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/shadersource",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.shaderSource()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> sets the source code of a\n<a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a>.</p>",
      "parameters": {
        "shader": "A <a href=\"$MDN_URL$/Web/API/WebGLShader\"><code>WebGLShader</code></a> object in which to set the source code.",
        "source": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the GLSL source code to set."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.stencilfunc": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/stencilfunc",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.stencilFunc()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> sets the front and back function\nand reference value for stencil testing.</p>\n<p>Stenciling enables and disables drawing on a per-pixel basis. It is typically used in\nmultipass rendering to achieve special effects.</p>",
      "parameters": {
        "func": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the test function. The default function is <code>gl.ALWAYS</code> . The possible values are: <ul> <li><code>gl.NEVER</code>:       Never pass.</li> <li><code>gl.LESS</code>:         Pass if <code>(ref &amp; mask) &lt;  (stencil &amp; mask)</code>.</li> <li><code>gl.EQUAL</code>:       Pass if <code>(ref &amp; mask) =  (stencil &amp; mask)</code>.</li> <li><code>gl.LEQUAL</code>:     Pass if <code>(ref &amp; mask) &lt;= (stencil &amp; mask)</code>.</li> <li><code>gl.GREATER</code>:   Pass if <code>(ref &amp; mask) &gt;  (stencil &amp; mask)</code>.</li> <li><code>gl.NOTEQUAL</code>: Pass if <code>(ref &amp; mask) != (stencil &amp; mask)</code>.</li> <li><code>gl.GEQUAL</code>:     Pass if <code>(ref &amp; mask) &gt;= (stencil &amp; mask)</code>.</li> <li><code>gl.ALWAYS</code>:     Always pass.</li> </ul>",
        "ref": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the reference value for the stencil test. This value is clamped to the range 0 to 2^n - 1 where n is the number of bitplanes in the stencil buffer. The default value is 0.",
        "mask": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying a bit-wise mask that is used to AND the reference value and the stored stencil value when the test is done. The default value is all 1."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.stencilfuncseparate": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/stencilfuncseparate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.stencilFuncSeparate()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> sets the front and/or back\nfunction and reference value for stencil testing.</p>\n<p>Stencilling enables and disables drawing on a per-pixel basis. It is typically used in\nmultipass rendering to achieve special effects.</p>",
      "parameters": {
        "face": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying whether the front and/or back stencil state is updated. The possible values are: <ul> <li><code>gl.FRONT</code></li> <li><code>gl.BACK</code></li> <li><code>gl.FRONT_AND_BACK</code></li> </ul>",
        "func": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the test function. The default function is <code>gl.ALWAYS</code> . The possible values are: <ul> <li><code>gl.NEVER</code>:       Never pass.</li> <li><code>gl.LESS</code>:         Pass if <code>(ref &amp; mask) &lt;  (stencil &amp; mask)</code>.</li> <li><code>gl.EQUAL</code>:       Pass if <code>(ref &amp; mask) =  (stencil &amp; mask)</code>.</li> <li><code>gl.LEQUAL</code>:     Pass if <code>(ref &amp; mask) &lt;= (stencil &amp; mask)</code>.</li> <li><code>gl.GREATER</code>:   Pass if <code>(ref &amp; mask) &gt;  (stencil &amp; mask)</code>.</li> <li><code>gl.NOTEQUAL</code>: Pass if <code>(ref &amp; mask) != (stencil &amp; mask)</code>.</li> <li><code>gl.GEQUAL</code>:     Pass if <code>(ref &amp; mask) &gt;= (stencil &amp; mask)</code>.</li> <li><code>gl.ALWAYS</code>:     Always pass.</li> </ul>",
        "ref": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the reference value for the stencil test. This value is clamped to the range 0 to 2^n - 1 where n is the number of bitplanes in the stencil buffer. The default value is 0.",
        "mask": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying a bit-wise mask that is used to AND the reference value and the stored stencil value when the test is done. The default value is all 1."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.stencilmask": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/stencilmask",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.stencilMask()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> controls enabling and disabling of\nboth the front and back writing of individual bits in the stencil planes.</p>\n<p>The <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/stencilMaskSeparate\"><code>WebGLRenderingContext.stencilMaskSeparate()</code></a> method can set front and\nback stencil writemasks to different values.</p>",
      "parameters": {
        "mask": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying a bit mask to enable or disable writing of individual bits in the stencil planes. By default, the mask is all 1."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.stencilmaskseparate": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/stencilmaskseparate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.stencilMaskSeparate()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> controls enabling and\ndisabling of front and/or back writing of individual bits in the stencil planes.</p>\n<p>The <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/stencilMask\"><code>WebGLRenderingContext.stencilMask()</code></a> method can set both, the front\nand back stencil writemasks to one value at the same time.</p>",
      "parameters": {
        "face": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying whether the front and/or back stencil writemask is updated. The possible values are: <ul> <li><code>gl.FRONT</code></li> <li><code>gl.BACK</code></li> <li><code>gl.FRONT_AND_BACK</code></li> </ul>",
        "mask": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying a bit mask to enable or disable writing of individual bits in the stencil planes. By default, the mask is all 1."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.stencilop": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/stencilop",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.stencilOp()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> sets both the front and back-facing\nstencil test actions.</p>",
      "parameters": {
        "fail": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the function to use when the stencil test fails. The default value is <code>gl.KEEP</code> .",
        "zfail": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the function to use when the stencil test passes, but the depth test fails. The default value is <code>gl.KEEP</code> .",
        "zpass": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the function to use when both the stencil test and the depth test pass, or when the stencil test passes and there is no depth buffer or depth testing is disabled. The default value is <code>gl.KEEP</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.stencilopseparate": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/stencilopseparate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.stencilOpSeparate()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> sets the front and/or\nback-facing stencil test actions.</p>",
      "parameters": {
        "face": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying whether the front and/or back stencil state is updated. The possible values are: <ul> <li><code>gl.FRONT</code></li> <li><code>gl.BACK</code></li> <li><code>gl.FRONT_AND_BACK</code></li> </ul>",
        "fail": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the function to use when the stencil test fails. The default value is <code>gl.KEEP</code> .",
        "zfail": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the function to use when the stencil test passes, but the depth test fails. The default value is <code>gl.KEEP</code> .",
        "zpass": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the function to use when both the stencil test and the depth test pass, or when the stencil test passes and there is no depth buffer or depth testing is disabled. The default value is <code>gl.KEEP</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.teximage2d": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/teximage2d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.texImage2D()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API </a>specifies a two-dimensional texture\nimage.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_X</code>: Positive X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_X</code>: Negative X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Y</code>: Positive Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Y</code>: Negative Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Z</code>: Positive Z face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Z</code>: Negative Z face for a cube-mapped texture.</li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the level of detail. Level 0 is the base image level and level <em>n</em> is the <em>n</em> th mipmap reduction level.",
        "internalformat": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the color components in the texture.Possible values in both WebGL1 and WebGL2",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture.",
        "border": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the width of the border. Must be 0.",
        "format": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the format of the texel data. In WebGL 1, this must be the same as <code>internalformat</code> (see above). in WebGL 2, the combinations are listed in <a href=\"https://www.khronos.org/registry/webgl/specs/latest/2.0/#TEXTURE_TYPES_FORMATS_FROM_DOM_ELEMENTS_TABLE\" class=\"external\" rel=\" noopener\">this table</a> .",
        "type": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the data type of the texel data. Possible values: <ul> <li><code>gl.UNSIGNED_BYTE</code>: 8 bits per channel for <code>gl.RGBA</code></li> <li><code>gl.UNSIGNED_SHORT_5_6_5</code>: 5 red bits, 6 green bits, 5 blue bits. </li> <li><code>gl.UNSIGNED_SHORT_4_4_4_4</code>: 4 red bits, 4 green bits, 4 blue bits, 4 alpha bits.</li> <li><code>gl.UNSIGNED_SHORT_5_5_5_1</code>: 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit.</li> <li>When using the <a href=\"$MDN_URL$/Web/API/WEBGL_depth_texture\"><code>WEBGL_depth_texture</code></a> extension: <ul> <li><code>gl.UNSIGNED_SHORT</code></li> <li><code>gl.UNSIGNED_INT</code></li> <li><code>ext.UNSIGNED_INT_24_8_WEBGL</code> (constant provided by the extension)</li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/OES_texture_float\"><code>OES_texture_float</code></a> extension: <ul> <li><code>gl.FLOAT</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/OES_texture_half_float\"><code>OES_texture_half_float</code></a> extension: <ul> <li><code>ext.HALF_FLOAT_OES</code> (constant provided by the extension)</li> </ul> </li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.BYTE</code></li> <li><code>gl.UNSIGNED_SHORT</code></li> <li><code>gl.SHORT</code></li> <li><code>gl.UNSIGNED_INT</code></li> <li><code>gl.INT</code></li> <li><code>gl.HALF_FLOAT</code></li> <li><code>gl.FLOAT</code></li> <li><code>gl.UNSIGNED_INT_2_10_10_10_REV</code></li> <li><code>gl.UNSIGNED_INT_10F_11F_11F_REV</code></li> <li><code>gl.UNSIGNED_INT_5_9_9_9_REV</code></li> <li><code>gl.UNSIGNED_INT_24_8</code></li> <li><code>gl.FLOAT_32_UNSIGNED_INT_24_8_REV</code> (pixels must be <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a>)</li> </ul> </li> </ul>",
        "pixels": "One of the following objects can be used as a pixel source for the texture: <ul> <li><a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a>, <ul> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a> must be used if <code>type</code> is <code>gl.UNSIGNED_BYTE</code>.</li> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint16Array\"><code>Uint16Array</code></a> must be used if <code>type</code> is either <code>gl.UNSIGNED_SHORT_5_6_5</code>, <code>gl.UNSIGNED_SHORT_4_4_4_4</code>, <code>gl.UNSIGNED_SHORT_5_5_5_1</code>, <code>gl.UNSIGNED_SHORT</code> or <code>ext.HALF_FLOAT_OES</code>.</li> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint32Array\"><code>Uint32Array</code></a> must be used if <code>type</code> is <code>gl.UNSIGNED_INT</code> or <code>ext.UNSIGNED_INT_24_8_WEBGL</code>.</li> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> must be used if <code>type</code> is <code>gl.FLOAT</code>.</li> </ul> </li> <li><a href=\"$MDN_URL$/Web/API/ImageData\"><code>ImageData</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>.</li> </ul>",
        "offset": "(WebGL 2 only) A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> byte offset into the <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> 's data store. Used to upload data to the currently bound <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> from the <code>WebGLBuffer</code> bound to the <code>PIXEL_UNPACK_BUFFER</code> target."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.texparameterf": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/texparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.texParameter[fi]()</code></strong> methods of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> set texture parameters.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP</code>: A cube-mapped texture.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.TEXTURE_3D</code>: A three-dimensional texture.</li> <li><code>gl.TEXTURE_2D_ARRAY</code>: A two-dimensional array texture.</li> </ul> </li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.texparameteri": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/texparameter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.texParameter[fi]()</code></strong> methods of\nthe <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> set texture parameters.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target). Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP</code>: A cube-mapped texture.</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.TEXTURE_3D</code>: A three-dimensional texture.</li> <li><code>gl.TEXTURE_2D_ARRAY</code>: A two-dimensional array texture.</li> </ul> </li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.texsubimage2d": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/texsubimage2d",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.texSubImage2D()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API </a>specifies a sub-rectangle of the\ncurrent texture.</p>",
      "parameters": {
        "target": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the binding point (target) of the active texture. Possible values: <ul> <li><code>gl.TEXTURE_2D</code>: A two-dimensional texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_X</code>: Positive X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_X</code>: Negative X face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Y</code>: Positive Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Y</code>: Negative Y face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_POSITIVE_Z</code>: Positive Z face for a cube-mapped texture.</li> <li><code>gl.TEXTURE_CUBE_MAP_NEGATIVE_Z</code>: Negative Z face for a cube-mapped texture.</li> </ul>",
        "level": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the level of detail. Level 0 is the base image level and level <em>n</em> is the <em>n</em> th mipmap reduction level.",
        "xoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the lower left texel x coordinate of a width-wide by height-wide rectangular subregion of the texture array.",
        "yoffset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the lower left texel y coordinate of a width-wide by height-wide rectangular subregion of the texture array..",
        "width": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the width of the texture in texels.",
        "height": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the height of the texture in texels.",
        "format": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the format of the texel data. Possible values: <ul> <li><code>gl.ALPHA</code>: Discards the red, green and blue components and reads the alpha component.</li> <li><code>gl.RGB</code>: Discards the alpha components and reads the red, green and blue components.</li> <li><code>gl.RGBA</code>: Red, green, blue and alpha components are read from the color buffer.</li> <li><code>gl.LUMINANCE</code>: Each color component is a luminance component, alpha is 1.0.</li> <li><code>gl.LUMINANCE_ALPHA</code>: Each component is a luminance/alpha component. </li> <li>When using the <a href=\"$MDN_URL$/Web/API/EXT_sRGB\"><code>EXT_sRGB</code></a> extension: <ul> <li><code>ext.SRGB_EXT</code></li> <li><code>ext.SRGB_ALPHA_EXT</code></li> </ul> </li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.RED</code></li> <li><code>gl.RG</code></li> <li><code>gl.RED_INTEGER</code></li> <li><code>gl.RG_INTEGER</code></li> <li><code>gl.RGB_INTEGER</code></li> <li><code>gl.RGBA_INTEGER</code></li> </ul> </li> </ul>",
        "type": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the data type of the texel data. Possible values: <ul> <li><code>gl.UNSIGNED_BYTE</code>: 8 bits per channel for <code>gl.RGBA</code></li> <li><code>gl.UNSIGNED_SHORT_5_6_5</code>: 5 red bits, 6 green bits, 5 blue bits. </li> <li><code>gl.UNSIGNED_SHORT_4_4_4_4</code>: 4 red bits, 4 green bits, 4 blue bits, 4 alpha bits.</li> <li><code>gl.UNSIGNED_SHORT_5_5_5_1</code>: 5 red bits, 5 green bits, 5 blue bits, 1 alpha bit.</li> <li>When using the <a href=\"$MDN_URL$/Web/API/OES_texture_float\"><code>OES_texture_float</code></a> extension: <ul> <li><code>gl.FLOAT</code></li> </ul> </li> <li>When using the <a href=\"$MDN_URL$/Web/API/OES_texture_half_float\"><code>OES_texture_half_float</code></a> extension: <ul> <li><code>gl.HALF_FLOAT_OES</code></li> </ul> </li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.BYTE</code></li> <li><code>gl.UNSIGNED_SHORT</code></li> <li><code>gl.SHORT</code></li> <li><code>gl.UNSIGNED_INT</code></li> <li><code>gl.INT</code></li> <li><code>gl.HALF_FLOAT</code></li> <li><code>gl.FLOAT</code></li> <li><code>gl.UNSIGNED_INT_2_10_10_10_REV</code></li> <li><code>gl.UNSIGNED_INT_10F_11F_11F_REV</code></li> <li><code>gl.UNSIGNED_INT_5_9_9_9_REV</code></li> <li><code>gl.UNSIGNED_INT_24_8</code></li> <li><code>gl.FLOAT_32_UNSIGNED_INT_24_8_REV</code> (pixels must be <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/null\"><code>null</code></a>)</li> </ul> </li> </ul>",
        "pixels": "One of the following objects can be used as a pixel source for the texture: <ul> <li><a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a>, <ul> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint8Array\"><code>Uint8Array</code></a> must be used if <code>type</code> is <code>gl.UNSIGNED_BYTE</code>.</li> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Uint16Array\"><code>Uint16Array</code></a> must be used if <code>type</code> is either <code>gl.UNSIGNED_SHORT_5_6_5</code>, <code>gl.UNSIGNED_SHORT_4_4_4_4</code>, <code>gl.UNSIGNED_SHORT_5_5_5_1</code>, or <code>ext.HALF_FLOAT_OES</code>. </li> <li>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> must be used if <code>type</code> is <code>gl.FLOAT</code>.</li> </ul> </li> <li><a href=\"$MDN_URL$/Web/API/ImageData\"><code>ImageData</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a>,</li> <li><a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>.</li> </ul>",
        "offset": "(WebGL 2 only) A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> byte offset into the <a href=\"$MDN_URL$/Web/API/WebGLBuffer\"><code>WebGLBuffer</code></a> 's data store. Used to upload data to the currently bound <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> from the <code>WebGLBuffer</code> bound to the <code>PIXEL_UNPACK_BUFFER</code> target."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.uniform": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/uniform",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.uniform[1234][fi][v]()</code></strong> methods\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specify values of uniform\nvariables. All active uniform variables defined in a program object are initialized to 0\nwhen the program object is linked successfully. They retain the values assigned to them\nby a call to this method until the next successful link operation occurs on the program\nobject, when they are once again initialized to 0.</p>\n<div class=\"note notecard\">\n<p>Many of the functions described here have expanded WebGL 2 interfaces, which can be\nfound under\n<a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/uniform\" ><code>WebGL2RenderingContext.uniform[1234][uif][v]()</code></a>.</p>\n</div>",
      "parameters": {
        "location": "A <a href=\"$MDN_URL$/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code></a> object containing the location of the uniform attribute to modify.",
        "value, v0, v1, v2, v3": "A new value to be used for the uniform variable. Possible types: <ul> <li>A floating point <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> for floating point values (methods with \"f\").</li> <li>A sequence of floating point numbers (for example a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> or an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of numbers) for floating point vector methods (methods with \"fv\").</li> <li>An integer <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> for integer values (methods with \"i\").</li> <li>An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Int32Array\"><code>Int32Array</code></a> for integer vector methods (methods with \"iv\").</li> </ul>"
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.uniformmatrix": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/uniformmatrix",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.uniformMatrix[234]fv()</code></strong> methods\nof the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specify matrix values for\nuniform variables.</p>\n<p>The three versions of this method (<code>uniformMatrix2fv()</code>,\n<code>uniformMatrix3fv()</code>, and <code>uniformMatrix4fv()</code>) take as the input\nvalue 2-component, 3-component, and 4-component square matrices, respectively.  They are\nexpected to have 4, 9 or 16 floats.</p>",
      "parameters": {
        "location": "A <a href=\"$MDN_URL$/Web/API/WebGLUniformLocation\"><code>WebGLUniformLocation</code></a> object containing the location of the uniform attribute to modify. The location is obtained using <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getUniformLocation\" ><code>getUniformLocation()</code></a> .",
        "transpose": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> specifying whether to transpose the matrix. Must be <code>false</code> .",
        "value": "A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> or sequence of <code>GLfloat</code> values. The values are assumed to be supplied in column major order."
      },
      "returns": "<p><code>undefined</code></p>"
    },
    "webglrenderingcontext.useprogram": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/useprogram",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.useProgram()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> sets the specified\n<a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> as part of the current rendering state.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> to use."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.validateprogram": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/validateprogram",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.validateProgram()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> validates a\n<a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a>. It checks if it is successfully linked and if it can be\nused in the current WebGL state.</p>",
      "parameters": {
        "program": "A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> to validate."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.vertexattrib": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/vertexattrib",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.vertexAttrib[1234]f[v]()</code></strong>\nmethods of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> specify constant\nvalues for generic vertex attributes.</p>",
      "parameters": {
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the position of the vertex attribute to be modified.",
        "v0, v1, v2, v3": "A floating point <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Number\"><code>Number</code></a> for the vertex attribute value.",
        "value": "A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Float32Array\"><code>Float32Array</code></a> for floating point vector vertex attribute values."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.vertexattribpointer": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/vertexattribpointer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p class=\"summary\">The\n<strong><code>WebGLRenderingContext.vertexAttribPointer()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> binds the buffer currently bound\nto <code>gl.ARRAY_BUFFER</code> to a generic vertex attribute of the current vertex\nbuffer object and specifies its layout.</p>",
      "parameters": {
        "index": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLuint</code></a> specifying the index of the vertex attribute that is to be modified.",
        "size": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the number of components per vertex attribute. Must be 1, 2, 3, or 4.",
        "type": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLenum</code></a> specifying the data type of each component in the array. Possible values: <ul> <li><code>gl.BYTE</code>: signed 8-bit integer, with values in [-128, 127]</li> <li><code>gl.SHORT</code>: signed 16-bit integer, with values in [-32768, 32767] </li> <li><code>gl.UNSIGNED_BYTE</code>: unsigned 8-bit integer, with values in [0, 255] </li> <li><code>gl.UNSIGNED_SHORT</code>: unsigned 16-bit integer, with values in [0, 65535]</li> <li><code>gl.FLOAT</code>: 32-bit IEEE floating point number</li> <li>When using a <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\" >WebGL 2 context</a>, the following values are available additionally: <ul> <li><code>gl.HALF_FLOAT</code>: 16-bit IEEE floating point number</li> </ul> </li> </ul>",
        "normalized": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLboolean</code></a> specifying whether integer data values should be normalized into a certain range when being cast to a float. <ul> <li>For types <code>gl.BYTE</code> and <code>gl.SHORT</code>, normalizes the values to [-1, 1] if true.</li> <li>For types <code>gl.UNSIGNED_BYTE</code> and <code>gl.UNSIGNED_SHORT</code>, normalizes the values to [0, 1] if true.</li> <li>For types <code>gl.FLOAT</code> and <code>gl.HALF_FLOAT</code>, this parameter has no effect.</li> </ul>",
        "stride": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLsizei</code></a> specifying the offset in bytes between the beginning of consecutive vertex attributes. Cannot be larger than 255. If stride is 0, the attribute is assumed to be tightly packed, that is, the attributes are not interleaved but each attribute is in a separate block, and the next vertex' attribute follows immediately after the current vertex.",
        "offset": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLintptr</code></a> specifying an offset in bytes of the first component in the vertex attribute array. Must be a multiple of the byte length of  <code>type</code> ."
      },
      "returns": "<p>None.</p>"
    },
    "webglrenderingcontext.viewport": {
      "url": "$MDN_URL$/web/api/webglrenderingcontext/viewport",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>WebGLRenderingContext.viewport()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> sets the viewport, which specifies\nthe affine transformation of x and y from normalized device coordinates to window\ncoordinates.</p>",
      "parameters": {
        "x": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the horizontal coordinate for the lower left corner of the viewport origin. Default value: 0.",
        "y": "A <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>GLint</code></a> specifying the vertical coordinate for the lower left corner of the viewport origin. Default value: 0.",
        "width": "A non-negative <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glsizei</code></a> specifying the width of the viewport. Default value: width of the canvas.",
        "height": "A non-negative <a href=\"$MDN_URL$/Web/API/WebGL_API/Types\" ><code>Glsizei</code></a> specifying the height of the viewport. Default value: height of the canvas."
      },
      "returns": "<p>None.</p>"
    },
    "webglsampler": {
      "url": "$MDN_URL$/web/api/webglsampler",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43"
      },
      "doc": "<p>The <strong><code>WebGLSampler</code></strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2</a> API and stores sampling parameters for <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> access inside of a shader.</p>\n<p>When working with <code>WebGLSampler</code> objects, the following methods of the <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a> are useful:</p>\n<ul>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/createSampler\"><code>WebGL2RenderingContext.createSampler()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/deleteSampler\"><code>WebGL2RenderingContext.deleteSampler()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/isSampler\"><code>WebGL2RenderingContext.isSampler()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/bindSampler\"><code>WebGL2RenderingContext.bindSampler()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/getSamplerParameter\"><code>WebGL2RenderingContext.getSamplerParameter()</code></a></li>\n</ul>"
    },
    "webglshader": {
      "url": "$MDN_URL$/web/api/webglshader",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLShader</strong> is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> and can either be a vertex or a fragment shader. A <a href=\"$MDN_URL$/Web/API/WebGLProgram\"><code>WebGLProgram</code></a> requires both types of shaders.</p>"
    },
    "webglshaderprecisionformat": {
      "url": "$MDN_URL$/web/api/webglshaderprecisionformat",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLShaderPrecisionFormat</strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> and represents the information returned by calling the <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/getShaderPrecisionFormat\"><code>WebGLRenderingContext.getShaderPrecisionFormat()</code></a> method.</p>"
    },
    "webglshaderprecisionformat.precision": {
      "url": "$MDN_URL$/web/api/webglshaderprecisionformat/precision",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The read-only <strong><code>WebGLShaderPrecisionFormat.precision</code></strong> property returns the number of bits of precision that can be represented.</p>\n<p>For integer formats this value is always 0.</p>"
    },
    "webglshaderprecisionformat.rangemax": {
      "url": "$MDN_URL$/web/api/webglshaderprecisionformat/rangemax",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The read-only <strong><code>WebGLShaderPrecisionFormat.rangeMax</code></strong> property returns the base 2 log of the absolute value of the maximum value that can be represented.</p>"
    },
    "webglshaderprecisionformat.rangemin": {
      "url": "$MDN_URL$/web/api/webglshaderprecisionformat/rangemin",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The read-only <strong><code>WebGLShaderPrecisionFormat.rangeMin</code></strong> property returns the base 2 log of the absolute value of the minimum value that can be represented.</p>"
    },
    "webglsync": {
      "url": "$MDN_URL$/web/api/webglsync",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43"
      },
      "doc": "<p>The <strong><code>WebGLSync</code></strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2</a> API and is used to synchronize activities between the GPU and the application.</p>\n<p>When working with <code>WebGLSync</code> objects, the following methods of the <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a> are useful:</p>\n<ul>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/fenceSync\"><code>WebGL2RenderingContext.fenceSync()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/deleteSync\"><code>WebGL2RenderingContext.deleteSync()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/isSync\"><code>WebGL2RenderingContext.isSync()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/clientWaitSync\"><code>WebGL2RenderingContext.clientWaitSync()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/waitSync\"><code>WebGL2RenderingContext.waitSync()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/getSyncParameter\"><code>WebGL2RenderingContext.getSyncParameter()</code></a></li>\n</ul>"
    },
    "webgltexture": {
      "url": "$MDN_URL$/web/api/webgltexture",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLTexture</strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> and represents an opaque texture object providing storage and state for texturing operations.</p>"
    },
    "webgltransformfeedback": {
      "url": "$MDN_URL$/web/api/webgltransformfeedback",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGLTransformFeedback</code></strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2</a> API and enables transform feedback, which is the process of capturing primitives generated by vertex processing. It allows to preserve the post-transform rendering state of an object and resubmit this data multiple times.</p>\n<p>When working with <code>WebGLTransformFeedback</code> objects, the following methods of the <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a> are useful:</p>\n<ul>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/createTransformFeedback\"><code>WebGL2RenderingContext.createTransformFeedback()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/deleteTransformFeedback\"><code>WebGL2RenderingContext.deleteTransformFeedback()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/isTransformFeedback\"><code>WebGL2RenderingContext.isTransformFeedback()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/bindTransformFeedback\"><code>WebGL2RenderingContext.bindTransformFeedback()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/beginTransformFeedback\"><code>WebGL2RenderingContext.beginTransformFeedback()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/endTransformFeedback\"><code>WebGL2RenderingContext.endTransformFeedback()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/pauseTransformFeedback\"><code>WebGL2RenderingContext.pauseTransformFeedback()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/resumeTransformFeedback\"><code>WebGL2RenderingContext.resumeTransformFeedback()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/transformFeedbackVaryings\"><code>WebGL2RenderingContext.transformFeedbackVaryings()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/getTransformFeedbackVarying\"><code>WebGL2RenderingContext.getTransformFeedbackVarying()</code></a></li>\n</ul>"
    },
    "webgluniformlocation": {
      "url": "$MDN_URL$/web/api/webgluniformlocation",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "4",
        "IE": "11",
        "Opera": "12",
        "Safari": "5.1",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong>WebGLUniformLocation</strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL API</a> and represents the location of a uniform variable in a shader program.</p>"
    },
    "webglvertexarrayobject": {
      "url": "$MDN_URL$/web/api/webglvertexarrayobject",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "56",
        "ChromeAndroid": "58",
        "Edge": "79",
        "Firefox": "51",
        "Opera": "43",
        "Safari": "15",
        "SafariIOS": "15"
      },
      "doc": "<p>The <strong><code>WebGLVertexArrayObject</code></strong> interface is part of the <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL 2 API</a>, represents vertex array objects (VAOs) pointing to vertex array data, and provides names for different sets of vertex data.</p>\n<p>When working with <code>WebGLVertexArrayObject</code> objects, the following methods are useful:</p>\n<ul>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/createVertexArray\"><code>WebGL2RenderingContext.createVertexArray()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/deleteVertexArray\"><code>WebGL2RenderingContext.deleteVertexArray()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/isVertexArray\"><code>WebGL2RenderingContext.isVertexArray()</code></a></li>\n<li><a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext/bindVertexArray\"><code>WebGL2RenderingContext.bindVertexArray()</code></a></li>\n</ul>\n<div class=\"note notecard\">\n<p><strong>WebGL 1:</strong> The <a href=\"$MDN_URL$/Web/API/OES_vertex_array_object\"><code>OES_vertex_array_object</code></a> extension allows you to use vertex array objects in a WebGL 1 context.</p>\n</div>"
    },
    "webkitpoint": {
      "url": "$MDN_URL$/web/api/webkitpoint",
      "status": [
        "Deprecated"
      ],
      "compatibility": {
        "Safari": "4",
        "SafariIOS": "3.2"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><strong><code>Point</code></strong> is an interface which represents a point in 2-dimensional space. It is non-standard, not broadly compatible, and should not be used.</p>\n<div class=\"note notecard\">\n<p>Although it is not directly related to this defunct interface, you are probably looking for <a href=\"$MDN_URL$/Web/API/DOMPoint\"><code>DOMPoint</code></a>.</p>\n</div>"
    },
    "websocket": {
      "url": "$MDN_URL$/web/api/websocket",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "11",
        "IE": "10",
        "Opera": "12.1",
        "Safari": "5",
        "SafariIOS": "4.2"
      },
      "doc": "<p>The <code>WebSocket</code> object provides the API for creating and managing a <a href=\"$MDN_URL$/Web/API/WebSockets_API\">WebSocket</a> connection to a server, as well as for sending and receiving data on the connection.</p>\n<p>To construct a <code>WebSocket</code>, use the <code><a href=\"$MDN_URL$/Web/API/WebSocket/WebSocket\">WebSocket()</a></code> constructor.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "websocket.binarytype": {
      "url": "$MDN_URL$/web/api/websocket/binarytype",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>WebSocket.binaryType</code></strong> property controls the type of\nbinary data being received over the WebSocket connection.</p>"
    },
    "websocket.bufferedamount": {
      "url": "$MDN_URL$/web/api/websocket/bufferedamount",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>WebSocket.bufferedAmount</code></strong> read-only property returns\nthe number of bytes of data that have been queued using calls to <code><a href=\"$MDN_URL$/Web/API/WebSocket/bufferedAmount#send()\" aria-current=\"page\">send()</a></code> but\nnot yet transmitted to the network. This value resets to zero once all queued data has\nbeen sent. This value does not reset to zero when the connection is closed; if you keep\ncalling <code><a href=\"$MDN_URL$/Web/API/WebSocket/bufferedAmount#send()\" aria-current=\"page\">send()</a></code>, this will continue to climb.</p>"
    },
    "websocket.close": {
      "url": "$MDN_URL$/web/api/websocket/close",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "8",
        "IE": "10",
        "Opera": "12.1",
        "Safari": "5",
        "SafariIOS": "4.2"
      },
      "doc": "<p>The <strong><code>WebSocket.close()</code></strong> method closes the\n<a href=\"$MDN_URL$/Web/API/WebSocket\"><code>WebSocket</code></a> connection or connection attempt, if any. If the connection is\nalready <code>CLOSED</code>, this method does nothing.</p>",
      "parameters": {
        "code": "A numeric value indicating the status code explaining why the connection is being closed. If this parameter is not specified, a default value of 1005 is assumed. See the <a href=\"$MDN_URL$/Web/API/CloseEvent#status_codes\">list of status codes</a> of <a href=\"$MDN_URL$/Web/API/CloseEvent\"><code>CloseEvent</code></a> for permitted values.",
        "reason": "A human-readable string explaining why the connection is closing. This string must be no longer than 123 bytes of UTF-8 text ( <strong>not</strong> characters)."
      }
    },
    "websocket.extensions": {
      "url": "$MDN_URL$/web/api/websocket/extensions",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "8",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>WebSocket.extensions</code></strong> read-only property returns the\nextensions selected by the server. This is currently only the empty string or a list of\nextensions as negotiated by the connection.</p>"
    },
    "websocket.onclose": {
      "url": "$MDN_URL$/web/api/websocket/onclose",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>WebSocket.onclose</strong></code> property is\nan <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> that is called when the WebSocket connection's\n<a href=\"$MDN_URL$/Web/API/WebSocket/readyState\" ><code>readyState</code></a> changes\nto <a href=\"$MDN_URL$/Web/API/WebSocket/readyState\" ><code>CLOSED</code></a>. It is called with a\n<a href=\"$MDN_URL$/Web/API/CloseEvent\"><code>CloseEvent</code></a>.</p>"
    },
    "websocket.onerror": {
      "url": "$MDN_URL$/web/api/websocket/onerror",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebSocket\"><code>WebSocket</code></a> interface's\n<code><strong>onerror</strong></code> event handler property is a function which gets\ncalled when an error occurs on the WebSocket.</span></p>\n<p>You can also add an <code>error</code> event handler using\n<a href=\"$MDN_URL$/Web/API/EventTarget/addEventListener\" ><code>addEventListener()</code></a>.</p>"
    },
    "websocket.onmessage": {
      "url": "$MDN_URL$/web/api/websocket/onmessage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>WebSocket.onmessage</code></strong> property is an\n<a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> that is called when a message is received from the server.\nIt is called with a <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a>.</p>"
    },
    "websocket.onopen": {
      "url": "$MDN_URL$/web/api/websocket/onopen",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>WebSocket.onopen</code></strong> property is an\n<a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> that is called when the <a href=\"$MDN_URL$/Web/API/WebSocket\"><code>WebSocket</code></a>\nconnection's <a href=\"$MDN_URL$/Web/API/WebSocket/readyState\" ><code>readyState</code></a> changes to\n<a href=\"$MDN_URL$/Web/API/WebSocket/readyState\" ><code>1</code></a>; this indicates that the connection is ready to\nsend and receive data. It is called with an <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a>.</p>"
    },
    "websocket.protocol": {
      "url": "$MDN_URL$/web/api/websocket/protocol",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>WebSocket.protocol</code></strong> read-only property returns the\nname of the sub-protocol the server selected; this will be one of the strings specified\nin the <code>protocols</code> parameter when creating the <a href=\"$MDN_URL$/Web/API/WebSocket\"><code>WebSocket</code></a>\nobject, or the empty string if no connection is established.</p>"
    },
    "websocket.readystate": {
      "url": "$MDN_URL$/web/api/websocket/readystate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "43",
        "ChromeAndroid": "43",
        "Edge": "",
        "Firefox": "19",
        "IE": "10",
        "Opera": "30",
        "Safari": "10",
        "SafariIOS": "10"
      },
      "doc": "<p>The <strong><code>WebSocket.readyState</code></strong> read-only property returns the\ncurrent state of the <a href=\"$MDN_URL$/Web/API/WebSocket\"><code>WebSocket</code></a> connection.</p>"
    },
    "websocket.send": {
      "url": "$MDN_URL$/web/api/websocket/send",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "18",
        "IE": "10",
        "Opera": "12.1",
        "Safari": "5",
        "SafariIOS": "4.2"
      },
      "doc": "<p>The <strong><code>WebSocket.send()</code></strong> method enqueues the specified data\nto be transmitted to the server over the WebSocket connection, increasing the value of\n<code>bufferedAmount</code> by the number of bytes needed to contain the data. If the\ndata can't be sent (for example, because it needs to be buffered but the buffer is\nfull), the socket is closed automatically.</p>",
      "parameters": {
        "data": "The data to send to the server. It may be one of the following types: <dl> <dt><a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a></dt> <dd>A text string. The string is added to the buffer in UTF-8 format, and the value of <code>bufferedAmount</code> is increased by the number of bytes required to represent the UTF-8 string.</dd> <dt><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a></dt> <dd>You can send the underlying binary data used by a typed array object; its binary data contents are queued in the buffer, increasing the value of <code>bufferedAmount</code> by the requisite number of bytes.</dd> <dt><a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a></dt> <dd>Specifying a <code>Blob</code> enqueues the blob's raw data to be transmitted in a binary frame. The value of <code>bufferedAmount</code> is increased by the byte size of that raw data.</dd> <dt><a href=\"$MDN_URL$/Web/API/ArrayBufferView\"><code>ArrayBufferView</code></a></dt> <dd>You can send any <a href=\"$MDN_URL$/Web/JavaScript/Typed_arrays\">JavaScript typed array</a> object as a binary frame; its binary data contents are queued in the buffer, increasing the value of <code>bufferedAmount</code> by the requisite number of bytes.</dd> </dl>"
      }
    },
    "websocket.url": {
      "url": "$MDN_URL$/web/api/websocket/url",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>WebSocket.url</code></strong> read-only property returns the absolute\nURL of the <a href=\"$MDN_URL$/Web/API/WebSocket\"><code>WebSocket</code></a> as resolved by the constructor.</p>"
    },
    "websocket.websocket": {
      "url": "$MDN_URL$/web/api/websocket/websocket",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "7",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>WebSocket()</strong></code> constructor returns a new\n<a href=\"$MDN_URL$/Web/API/WebSocket\"><code>WebSocket</code></a> object.</p>",
      "parameters": {
        "url": "The URL to which to connect; this should be the URL to which the WebSocket server will respond.",
        "protocols": "Either a single protocol string or an array of protocol strings. These strings are used to indicate sub-protocols, so that a single server can implement multiple WebSocket sub-protocols (for example, you might want one server to be able to handle different types of interactions depending on the specified <code>protocol</code> ).If it is omitted, an empty array is used by default, i.e. <code>[]</code> ."
      }
    },
    "wheelevent": {
      "url": "$MDN_URL$/web/api/wheelevent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "31",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "17",
        "IE": "9",
        "Opera": "18",
        "Safari": "6.1"
      },
      "doc": "<p>The <strong><code>WheelEvent</code></strong> interface represents events that occur due to the user moving a mouse wheel or similar input device.</p>\n<div class=\"notecard warning\">\n<p><strong>Important: This is the standard wheel event interface to use.</strong> Old versions of browsers implemented the non-standard and non-cross-browser-compatible <a href=\"$MDN_URL$/Web/API/MouseWheelEvent\"><code>MouseWheelEvent</code></a> and <a href=\"$MDN_URL$/Web/API/MouseScrollEvent\"><code>MouseScrollEvent</code></a> interfaces. Use this interface and avoid the non-standard ones.</p>\n</div>\n<div class=\"notecard note\">\n<p><strong>Do not confuse the <a href=\"$MDN_URL$/Web/API/Element/wheel_event\" ><code>wheel</code></a> event with the <a href=\"$MDN_URL$/Web/API/Element/scroll_event\" ><code>scroll</code></a> event:</strong> The default action of a <code>wheel</code> event is implementation-defined. Thus, a <code>wheel</code> event doesn't necessarily dispatch a <code>scroll</code> event. Even when it does, that doesn't mean that the <code>delta*</code> values in the <code>wheel</code> event necessarily reflect the content's scrolling direction. Therefore, do not rely on <code>delta*</code> properties to get the content's scrolling direction. Instead, detect value changes to <a href=\"$MDN_URL$/Web/API/Element/scrollLeft\" ><code>scrollLeft</code></a> and <a href=\"$MDN_URL$/Web/API/Element/scrollTop\" ><code>scrollTop</code></a> of the target in the <code>scroll</code> event.</p>\n</div>"
    },
    "wheelevent.deltamode": {
      "url": "$MDN_URL$/web/api/wheelevent/deltamode",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "31",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "17",
        "IE": "9",
        "Opera": "18",
        "Safari": "6.1"
      },
      "doc": "<p>The <code><strong>WheelEvent.deltaMode</strong></code> read-only property returns an\n<code>unsigned long</code> representing the unit of the delta values scroll amount.\nPermitted values are:</p>\n<table class=\"standard-table\">\n<tbody>\n<tr>\n<td class=\"header\">Constant</td>\n<td class=\"header\">Value</td>\n<td class=\"header\">Description</td>\n</tr>\n<tr>\n<td><code>DOM_DELTA_PIXEL</code></td>\n<td><code>0x00</code></td>\n<td>The delta values are specified in pixels.</td>\n</tr>\n<tr>\n<td><code>DOM_DELTA_LINE</code></td>\n<td><code>0x01</code></td>\n<td>The delta values are specified in lines.</td>\n</tr>\n<tr>\n<td><code>DOM_DELTA_PAGE</code></td>\n<td><code>0x02</code></td>\n<td>The delta values are specified in pages.</td>\n</tr>\n</tbody>\n</table>"
    },
    "wheelevent.deltax": {
      "url": "$MDN_URL$/web/api/wheelevent/deltax",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "31",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "17",
        "IE": "9",
        "Opera": "18",
        "Safari": "6.1"
      },
      "doc": "<p>The <code><strong>WheelEvent.deltaX</strong></code> read-only property is a\n<code>double</code> representing the horizontal scroll amount in the\n<a href=\"$MDN_URL$/Web/API/WheelEvent/deltaMode\"><code>WheelEvent.deltaMode</code></a> unit.</p>"
    },
    "wheelevent.deltay": {
      "url": "$MDN_URL$/web/api/wheelevent/deltay",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "31",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "17",
        "IE": "9",
        "Opera": "18",
        "Safari": "6.1"
      },
      "doc": "<p>The <code><strong>WheelEvent.deltaY</strong></code> read-only property is a\n<code>double</code> representing the vertical scroll amount in the\n<a href=\"$MDN_URL$/Web/API/WheelEvent/deltaMode\"><code>WheelEvent.deltaMode</code></a> unit.</p>"
    },
    "wheelevent.deltaz": {
      "url": "$MDN_URL$/web/api/wheelevent/deltaz",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "31",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "17",
        "IE": "9",
        "Opera": "18",
        "Safari": "6.1"
      },
      "doc": "<p>The <code><strong>WheelEvent.deltaZ</strong></code> read-only property is a\n<code>double</code> representing the scroll amount along the z-axis, in the\n<a href=\"$MDN_URL$/Web/API/WheelEvent/deltaMode\"><code>WheelEvent.deltaMode</code></a> unit.</p>"
    },
    "wheelevent.wheelevent": {
      "url": "$MDN_URL$/web/api/wheelevent/wheelevent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "17",
        "Opera": "",
        "Safari": "6.1"
      },
      "doc": "<p>The <code><strong>WheelEvent()</strong></code> constructor returns a newly created\n<a href=\"$MDN_URL$/Web/API/WheelEvent\"><code>WheelEvent</code></a> object.</p>"
    },
    "window": {
      "url": "$MDN_URL$/web/api/window",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>Window</code></strong> interface represents a window containing a <a href=\"$MDN_URL$/Glossary/DOM\">DOM</a> document; the <code>document</code> property points to the <a href=\"$MDN_URL$/Web/API/Document\">DOM document</a> loaded in that window.</span> A window for a given document can be obtained using the <a href=\"$MDN_URL$/Web/API/Document/defaultView\"><code>document.defaultView</code></a> property.</p>\n<p>A global variable, <code>window</code>, representing the window in which the script is running, is exposed to JavaScript code.</p>\n<p>The <code>Window</code> interface is home to a variety of functions, namespaces, objects, and constructors which are not necessarily directly associated with the concept of a user interface window. However, the <code>Window</code> interface is a suitable place to include these items that need to be globally available. Many of these are documented in the <a href=\"$MDN_URL$/Web/JavaScript/Reference\">JavaScript Reference</a> and the <a href=\"$MDN_URL$/Web/API/Document_Object_Model\">DOM Reference</a>.</p>\n<p>In a tabbed browser, each tab is represented by its own <code>Window</code> object; the global <code>window</code> seen by JavaScript code running within a given tab always represents the tab in which the code is running. That said, even in a tabbed browser, some properties and methods still apply to the overall window that contains the tab, such as <a href=\"$MDN_URL$/Web/API/Window/resizeTo\" ><code>resizeTo()</code></a> and <a href=\"$MDN_URL$/Web/API/Window/innerHeight\" ><code>innerHeight</code></a>. Generally, anything that can't reasonably pertain to a tab pertains to the window instead.</p>"
    },
    "window.alert": {
      "url": "$MDN_URL$/web/api/window/alert",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><code>window.alert()</code> instructs the browser to display a dialog with an optional message, and to wait until the user dismisses the dialog.</p>\n<p>Under some conditions — for example, when the user switches tabs — the browser may not actually display a dialog, or may not wait for the user to dismiss the dialog.</p>",
      "parameters": {
        "message": "A string you want to display in the alert dialog, or, alternatively, an object that is converted into a string and displayed."
      }
    },
    "window.applicationcache": {
      "url": "$MDN_URL$/web/api/window/applicationcache",
      "status": [
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "79",
        "Firefox": "29",
        "Opera": "10.6"
      },
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<div class=\"notecard warning\">\n<h4 id=\"important\">Important</h4>\n<p>Application Cache is deprecated as of Firefox 44, and is no longer available in\ninsecure contexts from Firefox 60 onwards (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1354175\" class=\"external\" rel=\" noopener\">bug 1354175</a>, currently Nightly/Beta\nonly). Don't use it to offline websites — consider using <a href=\"$MDN_URL$/Web/API/Service_Worker_API\">service workers</a> instead.</p>\n</div>\n<p>Returns a reference to the application cache object for the window.</p>"
    },
    "window.back": {
      "url": "$MDN_URL$/web/api/window/back",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The obsolete and non-standard method <code>back()</code> on the <a href=\"$MDN_URL$/Web/API/Window\"><code>window</code></a>\ninterface returns the window to the previous item in the history. This was a\nFirefox-specific method and was removed in Firefox 31.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Use the standard <a href=\"$MDN_URL$/Web/API/History/back\"><code>history.back</code></a> method instead.</p>\n</div>",
      "returns": "<p><code>undefined</code>.</p>"
    },
    "window.blur": {
      "url": "$MDN_URL$/web/api/window/blur",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>Shifts focus away from the window.</p>"
    },
    "window.cancelanimationframe": {
      "url": "$MDN_URL$/web/api/window/cancelanimationframe",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "24",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "23",
        "IE": "10",
        "Opera": "15",
        "Safari": "6.1",
        "SafariIOS": "7"
      },
      "doc": "<p>The <code><strong>window.cancelAnimationFrame()</strong></code> method cancels an\nanimation frame request previously scheduled through a call to\n<a href=\"$MDN_URL$/Web/API/window/requestAnimationFrame\"><code>window.requestAnimationFrame()</code></a>.</p>",
      "parameters": {
        "requestID": "The ID value returned by the call to <a href=\"$MDN_URL$/Web/API/window/requestAnimationFrame\"><code>window.requestAnimationFrame()</code></a> that requested the callback."
      }
    },
    "window.cancelidlecallback": {
      "url": "$MDN_URL$/web/api/window/cancelidlecallback",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "47",
        "ChromeAndroid": "47",
        "Edge": "79",
        "Firefox": "55",
        "Opera": ""
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>",
      "parameters": {
        "handle": "The ID value returned by <a href=\"$MDN_URL$/Web/API/Window/requestIdleCallback\"><code>window.requestIdleCallback()</code></a> when the callback was established."
      },
      "returns": "<p><code>undefined</code>.</p>"
    },
    "window.captureevents": {
      "url": "$MDN_URL$/web/api/window/captureevents",
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>Window.captureEvents()</strong></code> method registers the window to\ncapture all events of the specified type.</p>"
    },
    "window.clearimmediate": {
      "url": "$MDN_URL$/web/api/window/clearimmediate",
      "compatibility": {
        "IE": "10"
      },
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>This method clears the action specified by <a href=\"$MDN_URL$/Web/API/Window/setImmediate\"><code>window.setImmediate</code></a>.</p>\n<div class=\"notecard note\">\n<p>This method is not expected to become standard, and is only implemented by recent\nbuilds of Internet Explorer and Node.js 0.10+. It meets resistance both from <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=686201\" class=\"external\" rel=\" noopener\">Gecko</a> (Firefox) and\n<a href=\"https://code.google.com/p/chromium/issues/detail?id=146172\" data-flaw=\"link1\" class=\"external\" rel=\" noopener\">Webkit</a>\n(Google/Apple).</p>\n</div>"
    },
    "window.close": {
      "url": "$MDN_URL$/web/api/window/close",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.close()</strong></code> method closes the current window, or\nthe window on which it was called.</p>\n<p>This method can only be called on windows that were opened by a script using the\n<a href=\"$MDN_URL$/Web/API/Window/open\"><code>Window.open()</code></a> method. If the window was not opened by a script, an error\nsimilar to this one appears in the console:\n<code>Scripts may not close windows that were not opened by script.</code></p>\n<p>Note also that <code>close()</code> has no effect when called on <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>\nobjects returned by\n<code><a href=\"$MDN_URL$/Web/API/HTMLIFrameElement/contentWindow\">HTMLIFrameElement.contentWindow</a></code>.</p>"
    },
    "window.closed": {
      "url": "$MDN_URL$/web/api/window/closed",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.closed</strong></code> read-only property indicates whether\nthe referenced window is closed or not.</p>"
    },
    "window.confirm": {
      "url": "$MDN_URL$/web/api/window/confirm",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><code>window.confirm()</code> instructs the browser to display a dialog with an optional message, and to wait until the user either confirms or cancels the dialog.</p>\n<p>Under some conditions — for example, when the user switches tabs — the browser may not actually display a dialog, or may not wait for the user to confirm or cancel the dialog.</p>",
      "parameters": {
        "message": "A string you want to display in the confirmation dialog."
      },
      "returns": "<p>A boolean indicating whether OK (<code>true</code>) or Cancel (<code>false</code>) was\n  selected. If a browser is ignoring in-page dialogs, then the returned value is always\n  <code>false</code>.</p>"
    },
    "window.console": {
      "url": "$MDN_URL$/web/api/window/console",
      "doc": "<p>The <strong><code>Window.console</code></strong> property returns a reference to the <a href=\"$MDN_URL$/Web/API/console\"><code>console</code></a> object, which provides methods for logging information to the browser's console. These methods are intended for debugging purposes only and should not be relied on for presenting information to end users.</p>"
    },
    "window.content": {
      "url": "$MDN_URL$/web/api/window/content",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Since Firefox 57 (initially Nightly-only), both the <code>content</code> and <code>_content</code> variants are only available to chrome (privileged) code, and not available to the web anymore.</p>\n</div>\n<p>Returns a <a href=\"$MDN_URL$/Web/API/Window\">Window object</a> for the primary content window. This is useful in XUL windows that have a <code>&lt;browser&gt;</code> (or <code>tabbrowser</code> or <code>&lt;iframe&gt;</code>) with <code>type=\"content-primary\"</code> attribute on it — the most famous example is Firefox main window, <code>browser.xul</code>. In such cases, <code>content</code> returns a reference to the <code>Window</code> object for the document currently displayed in the browser. It is a shortcut for <code><var>browserRef</var>.contentWindow</code>.</p>\n<p>In unprivileged content (webpages), <code>content</code> is normally equivalent to <a href=\"$MDN_URL$/Web/API/Window/top\">top</a> (except in the case of a webpage loaded in a sidebar, <code>content</code> still refers to the <code>Window</code> of the currently selected tab).</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Some examples use <code>_content</code> instead of <code>content</code>. The former has been deprecated for a long time, and you should use <code>content</code> in any new code.</p>\n</div>"
    },
    "window.controllers": {
      "url": "$MDN_URL$/web/api/window/controllers",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>controllers</strong></code> property of the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>\ninterface returns the XUL controllers of the chrome window.</p>"
    },
    "window.crypto": {
      "url": "$MDN_URL$/web/api/window/crypto",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "37",
        "ChromeAndroid": "37",
        "Edge": "",
        "Firefox": "",
        "Opera": "24",
        "Safari": "6.1",
        "SafariIOS": "6.1"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><code>Window.crypto</code></strong>\nproperty returns the <a href=\"$MDN_URL$/Web/API/Crypto\"><code>Crypto</code></a> object associated to the global object.\nThis object allows web pages access to certain cryptographic related services.</span>\nAlthough the property itself is read-only, all of its methods (and the methods of its\nchild object, <a href=\"$MDN_URL$/Web/API/SubtleCrypto\"><code>SubtleCrypto</code></a>) are not read-only, and therefore vulnerable\nto attack by <a href=\"$MDN_URL$/Glossary/Polyfill\">polyfill</a>.</p>\n<p>Although <code>window.crypto</code> is available on all windows, the\nreturned <code>Crypto</code> object only has one usable feature in insecure contexts:\nthe <a href=\"$MDN_URL$/Web/API/Crypto/getRandomValues\" ><code>getRandomValues()</code></a> method. In general, you\nshould use this API only in secure contexts.</p>"
    },
    "window.customelements": {
      "url": "$MDN_URL$/web/api/window/customelements",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "54",
        "ChromeAndroid": "54",
        "Edge": "79",
        "Firefox": "63",
        "Opera": "41",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>customElements</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface returns a reference to the <a href=\"$MDN_URL$/Web/API/CustomElementRegistry\"><code>CustomElementRegistry</code></a> object, which can be used to register new <a href=\"$MDN_URL$/Web/Web_Components/Using_custom_elements\">custom elements</a> and get information about previously registered custom elements.</span></p>"
    },
    "window.defaultstatus": {
      "url": "$MDN_URL$/web/api/window/defaultstatus",
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<div class=\"note notebox notecard\">\n<p><strong>Note:</strong>This method was removed from Firefox 23 and onward.</p>\n</div>"
    },
    "window.devicepixelratio": {
      "url": "$MDN_URL$/web/api/window/devicepixelratio",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "18",
        "IE": "11",
        "Opera": "11.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>devicePixelRatio</strong></code> of\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface returns the ratio of the resolution in <em>physical\npixels</em> to the resolution in <em>CSS pixels</em> for the current display\ndevice.</span> This value could also be interpreted as the ratio of pixel sizes: the\nsize of one <em>CSS pixel</em> to the size of one <em>physical pixel</em>. In simpler\nterms, this tells the browser how many of the screen's actual pixels should be used to\ndraw a single CSS pixel.</p>\n<p>This is useful when dealing with the difference between rendering on a standard display\nversus a HiDPI or Retina display, which use more screen pixels to draw the same objects,\nresulting in a sharper image.</p>\n<p>You can use <a href=\"$MDN_URL$/Web/API/Window/matchMedia\" ><code>window.matchMedia()</code></a> to check if the\nvalue of <code>devicePixelRatio</code> changes (which can happen, for example, if the\nuser drags the window to a display with a different pixel density). See\n<a href=\"#monitoring_screen_resolution_or_zoom_level_changes\">the example below</a>.</p>"
    },
    "window.dialogarguments": {
      "url": "$MDN_URL$/web/api/window/dialogarguments",
      "status": [
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p><span class=\"seoSummary\">The <code>dialogArguments</code> property returns the\nparameters that were passed into the <a href=\"$MDN_URL$/Web/API/Window/showModalDialog\"><code>window.showModalDialog()</code></a>\nmethod.</span> This lets you determine what parameters were specified when the modal\ndialog was created.</p>"
    },
    "window.directories": {
      "url": "$MDN_URL$/web/api/window/directories",
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<div class=\"note notebox notecard\">\n<p><strong>Note:</strong>This method was removed from Firefox 4 and onward.</p>\n</div>"
    },
    "window.document": {
      "url": "$MDN_URL$/web/api/window/document",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\"><strong><code>window.document</code></strong> returns a reference to the <a href=\"$MDN_URL$/Web/API/Document\">document</a> contained in the window.</span></p>"
    },
    "window.dump": {
      "url": "$MDN_URL$/web/api/window/dump",
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><code><strong>Window.dump()</strong></code> prints messages to the (native) console.</p>"
    },
    "window.event": {
      "url": "$MDN_URL$/web/api/window/event",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "66",
        "IE": "4",
        "Opera": "7",
        "Safari": "1.1",
        "SafariIOS": ""
      },
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The read-only <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> property <code><strong>event</strong></code> returns the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> which is currently being handled by the site's code. Outside the context of an event handler, the value is always <code>undefined</code>.</p>\n<p>You <em>should</em> avoid using this property in new code, and should instead use the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> passed into the event handler function. This property is not universally supported and even when supported introduces potential fragility to your code.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This property can be fragile, in that there may be situations in which the returned <code>Event</code> is not the expected value. In addition, <code>Window.event</code> is not accurate for events dispatched within <a href=\"$MDN_URL$/Glossary/Shadow_tree\">shadow trees</a>.</p>\n</div>"
    },
    "window.external": {
      "url": "$MDN_URL$/web/api/window/external",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "2",
        "IE": "4",
        "Opera": "15"
      },
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code>external</code> property of the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> API returns an instance of the <code>External</code> interface, which was intended to contain functions related to adding external search providers to the browser. However, this is now deprecated, and the contained methods are now dummy functions that do nothing as per spec.</p>"
    },
    "window.find": {
      "url": "$MDN_URL$/web/api/window/find",
      "status": [
        "Experimental"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "79",
        "Firefox": "",
        "Opera": "15",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Support for <code>Window.find()</code> might change in future\nversions of Gecko. See <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=672395\" class=\"external\" rel=\" noopener\">bug 672395</a>.</p>\n</div>\n<p>The <code><strong>Window.find()</strong></code> method finds a string in a window sequentially.</p>",
      "parameters": {
        "aString": "The text string for which to search.",
        "aCaseSensitive": "A boolean value. If <code>true</code> , specifies a case-sensitive search.",
        "aBackwards": "A boolean value. If <code>true</code> , specifies a backward search.",
        "aWrapAround": "A boolean value. If <code>true</code> , specifies a wrap around search.",
        "aWholeWord": "A boolean value. If <code>true</code> , specifies a whole word search. This is not implemented; see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=481513\" class=\"external\" rel=\" noopener\">bug 481513</a> .",
        "aSearchInFrames": "A boolean value. If <code>true</code> , specifies a search in frames."
      }
    },
    "window.focus": {
      "url": "$MDN_URL$/web/api/window/focus",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>Makes a request to bring the window to the front. It may fail due to user settings and the window isn't guaranteed to be frontmost before this method returns.</p>"
    },
    "window.forward": {
      "url": "$MDN_URL$/web/api/window/forward",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>Moves the window one document forward in history. This was a Firefox-specific method and was removed in Firefox 31.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Use the standard <a href=\"$MDN_URL$/Web/API/History/forward\" ><code>window.history.forward()</code></a> method instead.</p>\n</div>",
      "returns": "<p><code>undefined</code>.</p>"
    },
    "window.frameelement": {
      "url": "$MDN_URL$/web/api/window/frameelement",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "5.5",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>Window.frameElement</strong></code> property\nreturns the element (such as <a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a>)\nin which the window is embedded.</span></p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> Despite this property's name, it works for documents embedded\nwithin any embedding point, including <a href=\"$MDN_URL$/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a>,\n<a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>, or <a href=\"$MDN_URL$/Web/HTML/Element/embed\"><code>&lt;embed&gt;</code></a>.</p>\n</div>"
    },
    "window.frames": {
      "url": "$MDN_URL$/web/api/window/frames",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>Returns the window itself, which is an array-like object, listing the direct sub-frames\nof the current window.</p>"
    },
    "window.fullscreen": {
      "url": "$MDN_URL$/web/api/window/fullscreen",
      "compatibility": {
        "Firefox": ""
      },
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>fullScreen</strong></code> property of the <code>Window</code>\ninterface indicates whether the window is displayed in full screen mode or not.</p>",
      "returns": "<dl>\n  <dt><code>isInFullScreen</code></dt>\n  <dd>A boolean. Possible Values:</dd>\n</dl>\n\n<ul>\n  <li><code>true</code>: The window is in full screen mode.</li>\n  <li><code>false</code>: The window is not in full screen mode.</li>\n</ul>"
    },
    "window.getcomputedstyle": {
      "url": "$MDN_URL$/web/api/window/getcomputedstyle",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "7.2",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p class=\"summary\"><span class=\"seoSummary\">The\n<strong><code>Window.getComputedStyle()</code></strong> method returns an object\ncontaining the values of all CSS properties of an element, after applying active\nstylesheets and resolving any basic computation those values may contain.</span>\nIndividual CSS property values are accessed through APIs provided by the object, or by\nindexing with CSS property names.</p>",
      "parameters": {
        "element": "The <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> for which to get the computed style.",
        "pseudoElt": "A string specifying the pseudo-element to match. Omitted (or <code>null</code> ) for real elements."
      }
    },
    "window.getdefaultcomputedstyle": {
      "url": "$MDN_URL$/web/api/window/getdefaultcomputedstyle",
      "compatibility": {
        "Firefox": "19"
      },
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <strong><code>getDefaultComputedStyle()</code></strong> method gives the default <a href=\"$MDN_URL$/Web/CSS/computed_value\">computed values</a> of all the CSS\nproperties of an element, ignoring author styling. That is, only user-agent and user\nstyles are taken into account.</p>",
      "parameters": {
        "element": "The <a href=\"$MDN_URL$/Web/API/Element\"><code>Element</code></a> for which to get the computed style.",
        "pseudoElt": "A string specifying the pseudo-element to match. Must be <code>null</code> (or not specified) for regular elements."
      },
      "returns": "<p>The returned <code>style</code> is a <a href=\"$MDN_URL$/Web/API/CSSStyleDeclaration\"><code>CSSStyleDeclaration</code></a>\n  object. The object is of the same type as the object returned by\n  <a href=\"$MDN_URL$/Web/API/Window/getComputedStyle\"><code>Window.getComputedStyle()</code></a>, but only takes into account user-agent and\n  user rules.</p>"
    },
    "window.getselection": {
      "url": "$MDN_URL$/web/api/window/getselection",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "9",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.getSelection()</strong></code> method returns a\n<a href=\"$MDN_URL$/Web/API/Selection\"><code>Selection</code></a> object representing the range of text selected by the user or\nthe current position of the caret.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/Selection\"><code>Selection</code></a> object.</p>\n\n<p>When cast to string, either by appending an empty string (<code>\"\"</code>) or using\n  <a href=\"$MDN_URL$/Web/API/Selection/toString\"><code>Selection.toString()</code></a>, this object returns the text selected.</p>\n\n<p>When called on an <a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> that is not displayed (eg. where\n  <code>display: none</code> is set) Firefox will return <code>null</code>, whereas other\n  browsers will return a <a href=\"$MDN_URL$/Web/API/Selection\"><code>Selection</code></a> object with\n  <a href=\"$MDN_URL$/Web/API/Selection/type\"><code>Selection.type</code></a> set to <code>None</code>.</p>"
    },
    "window.history": {
      "url": "$MDN_URL$/web/api/window/history",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window</strong>.<strong>history</strong></code> read-only property returns a reference to the <a href=\"$MDN_URL$/Web/API/History\"><code>History</code></a> object, which provides an interface for manipulating the browser <em>session history</em> (pages visited in the tab or frame that the current page is loaded in).</p>\n<p>See <a href=\"$MDN_URL$/Web/API/History_API\">Manipulating the browser history</a> for examples and details. In particular, that article explains security features of the <a href=\"$MDN_URL$/Web/API/History/pushState\" ><code>pushState()</code></a> and <a href=\"$MDN_URL$/Web/API/History/replaceState\" ><code>replaceState()</code></a> methods that you should be aware of before using them.</p>"
    },
    "window.home": {
      "url": "$MDN_URL$/web/api/window/home",
      "status": [
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>Window.home()</strong></code> method returns the window to the home\npage.</p>"
    },
    "window.innerheight": {
      "url": "$MDN_URL$/web/api/window/innerheight",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "9",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <strong><code>innerHeight</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface returns the interior height of the window in pixels,\nincluding the height of the horizontal scroll bar, if present.</p>\n<p>The value of <code>innerHeight</code> is taken from the height of the window's\n<a href=\"$MDN_URL$/Glossary/Layout_viewport\">layout viewport</a>. The width can be obtained using the\n<a href=\"$MDN_URL$/Web/API/Window/innerWidth\" ><code>innerWidth</code></a> property.</p>"
    },
    "window.innerwidth": {
      "url": "$MDN_URL$/web/api/window/innerwidth",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "9",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> property\n<strong><code>innerWidth</code></strong> returns the interior width of the window in\npixels. This includes the width of the vertical scroll bar, if one is present.</span></p>\n<p>More precisely, <code>innerWidth</code> returns the width of the window's\n<a href=\"$MDN_URL$/Glossary/Visual_Viewport\">visual viewport</a>. The interior height of the window—the height of the\nlayout viewport—can be obtained from the <a href=\"$MDN_URL$/Web/API/Window/innerHeight\" ><code>innerHeight</code></a> property.</p>"
    },
    "window.issecurecontext": {
      "url": "$MDN_URL$/web/api/window/issecurecontext",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "47",
        "ChromeAndroid": "47",
        "Edge": "15",
        "Firefox": "49",
        "Opera": "34",
        "Safari": "11.1",
        "SafariIOS": "11.3"
      },
      "doc": "<p>The <code><strong>window.isSecureContext</strong></code> read-only property indicates\nwhether a context is capable of using features that require <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a>.</p>"
    },
    "window.length": {
      "url": "$MDN_URL$/web/api/window/length",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>Returns the number of frames (either <a href=\"$MDN_URL$/Web/HTML/Element/frame\"><code>&lt;frame&gt;</code></a> or\n<a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> elements) in the window.</p>"
    },
    "window.localstorage": {
      "url": "$MDN_URL$/web/api/window/localstorage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "8",
        "Opera": "10.5",
        "Safari": "4",
        "SafariIOS": "3.2"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>localStorage</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/Window\"><code>window</code></a> interface allows you to access a <a href=\"$MDN_URL$/Web/API/Storage\"><code>Storage</code></a> object for the <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>'s <a href=\"$MDN_URL$/Glossary/Origin\">origin</a>; the stored data is saved across browser sessions.</span></p>\n<p><code>localStorage</code> is similar to <a href=\"$MDN_URL$/Web/API/Window/sessionStorage\" ><code>sessionStorage</code></a>, except that while <code>localStorage</code> data has no expiration time, <code>sessionStorage</code> data gets cleared when the page session ends — that is, when the page is closed. (<code>localStorage</code> data for a document loaded in a \"private browsing\" or \"incognito\" session is cleared when the last \"private\" tab is closed.)</p>",
      "throws": {
        "SecurityError": "The request violates a policy decision, or the origin is not <a href=\"$MDN_URL$/Web/Security/Same-origin_policy#definition_of_an_origin\">a valid scheme/host/port tuple</a> (this can happen if the origin uses the <code>file:</code> or <code>data:</code> schemes, for example). For example, the user may have their browser configured to deny permission to persist data for the specified origin."
      }
    },
    "window.location": {
      "url": "$MDN_URL$/web/api/window/location",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>Window.location</code></strong> read-only property returns a\n<a href=\"$MDN_URL$/Web/API/Location\"><code>Location</code></a> object with information about the current location of the\ndocument.</p>\n<p>Though <code>Window.location</code> is a <em>read-only</em> <code>Location</code>\nobject, you can also assign a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> to it. This means that you can\nwork with <code>location</code> as if it were a string in most cases:\n<code>location = 'http://www.example.com'</code> is a synonym of\n<code>location.href = 'http://www.example.com'</code>.</p>\n<p>See <a href=\"$MDN_URL$/Web/API/Location\"><code>Location</code></a> for all available properties.</p>"
    },
    "window.locationbar": {
      "url": "$MDN_URL$/web/api/window/locationbar",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "15",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>Returns the <code>locationbar</code> object, whose visibility can be checked.</p>"
    },
    "window.matchmedia": {
      "url": "$MDN_URL$/web/api/window/matchmedia",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "6",
        "IE": "10",
        "Opera": "12.1",
        "Safari": "5.1",
        "SafariIOS": "5"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface's <code><strong>matchMedia()</strong></code> method\nreturns a new <a href=\"$MDN_URL$/Web/API/MediaQueryList\"><code>MediaQueryList</code></a> object that can then be used to determine if\nthe <a href=\"$MDN_URL$/Web/API/Document\"><code>document</code></a> matches the <a href=\"$MDN_URL$/Web/CSS/Media_Queries/Using_media_queries\">media query</a> string,\nas well as to monitor the document to detect when it matches (or stops matching) that\nmedia query.</p>",
      "parameters": {
        "mediaQueryString": "A string specifying the media query to parse into a  <a href=\"$MDN_URL$/Web/API/MediaQueryList\"><code>MediaQueryList</code></a> ."
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/MediaQueryList\"><code>MediaQueryList</code></a> object for the media query. Use this object's\n  properties and events to detect matches and to monitor for changes to those matches over\n  time.</p>"
    },
    "window.menubar": {
      "url": "$MDN_URL$/web/api/window/menubar",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "15",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.menubar</strong></code> property returns the\n<code>menubar</code> object, whose visibility can be checked.</p>"
    },
    "window.minimize": {
      "url": "$MDN_URL$/web/api/window/minimize",
      "compatibility": {},
      "doc": "<p>The <code><strong>Window.minimize()</strong></code> method sets the window to a minimized state.</p>\n<p>A way to undo this method programmatically is by calling <a href=\"$MDN_URL$/Web/API/Window/moveTo\"><code>window.moveTo()</code></a>.</p>"
    },
    "window.moveby": {
      "url": "$MDN_URL$/web/api/window/moveby",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>moveBy()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>\ninterface moves the current window by a specified amount.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This function moves the window relative to its current\nlocation. In contrast, <a href=\"$MDN_URL$/Web/API/Window/moveTo\"><code>window.moveTo()</code></a> moves the window to an absolute\nlocation.</p>\n</div>"
    },
    "window.moveto": {
      "url": "$MDN_URL$/web/api/window/moveto",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>moveTo()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>\ninterface moves the current window to the specified coordinates.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This function moves the window to an absolute location. In\ncontrast, <a href=\"$MDN_URL$/Web/API/Window/moveBy\"><code>window.moveBy()</code></a> moves the window relative to its current\nlocation.</p>\n</div>"
    },
    "window.mozanimationstarttime": {
      "url": "$MDN_URL$/web/api/window/mozanimationstarttime",
      "status": [
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>Returns the time, in milliseconds since the epoch, at which animations started now should be considered to have started. This value should be used instead of, for example, <code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Date/now\">Date.now()</a></code>, because this value will be the same for all animations started in this window during this refresh interval, allowing them to remain in sync with one another.</p>\n<p>This also allows JavaScript-based animations to remain synchronized with CSS transitions and SMIL animations triggered during the same refresh interval.</p>"
    },
    "window.mozinnerscreenx": {
      "url": "$MDN_URL$/web/api/window/mozinnerscreenx",
      "compatibility": {
        "Firefox": "3.6"
      },
      "doc": ""
    },
    "window.mozinnerscreeny": {
      "url": "$MDN_URL$/web/api/window/mozinnerscreeny",
      "compatibility": {
        "Firefox": "3.6"
      },
      "doc": ""
    },
    "window.mozpaintcount": {
      "url": "$MDN_URL$/web/api/window/mozpaintcount",
      "status": [
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>Returns the number of times the current document has been painted to the screen in this\nwindow.</p>"
    },
    "window.name": {
      "url": "$MDN_URL$/web/api/window/name",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p class=\"summary\"><span class=\"seoSummary\">The <code>Window.name</code> property\ngets/sets the name of the window's browsing context.</span></p>"
    },
    "window.navigator": {
      "url": "$MDN_URL$/web/api/window/navigator",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>Window.navigator</code></strong> read-only property returns a\nreference to the <a href=\"$MDN_URL$/Web/API/Navigator\"><code>Navigator</code></a> object, which has methods and properties about\nthe application running the script.</p>"
    },
    "window.onappinstalled": {
      "url": "$MDN_URL$/web/api/window/onappinstalled",
      "status": [
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "64",
        "ChromeAndroid": "57",
        "Edge": "79"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>onappinstalled</strong></code> attribute of the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>\nobject serves as an event handler for the <code><a href=\"$MDN_URL$/Web/API/Window/appinstalled_event\" >appinstalled</a></code> event, which is\ndispatched once the web application is successfully installed as a <a href=\"$MDN_URL$/Web/Progressive_web_apps\" data-flaw=\"link1\">progressive web app</a>. The event that is fired is a\n\"simple event\" that implements the <a href=\"$MDN_URL$/Web/API/Event\"><code>Event</code></a> interface. </p>"
    },
    "window.onbeforeinstallprompt": {
      "url": "$MDN_URL$/web/api/window/onbeforeinstallprompt",
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "79",
        "Opera": ""
      },
      "doc": "<p>The <code><strong>Window.onbeforeinstallprompt</strong></code> property is an event\nhandler for processing a <code><a href=\"$MDN_URL$/Web/Events/beforeinstallprompt\"  class=\"page-not-created\">beforeinstallprompt</a></code>, which is dispatched on\ndevices when a user is about to be prompted to \"install\" a web application. <a href=\"../BeforeInstallPromptEvent\">Its associated event</a> may be saved for later and\nused to prompt the user at a more suitable time. </p>"
    },
    "window.ondevicemotion": {
      "url": "$MDN_URL$/web/api/window/ondevicemotion",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "31",
        "ChromeAndroid": "31",
        "Edge": "",
        "Firefox": "9",
        "IE": "11",
        "Opera": "18"
      },
      "doc": "<p>An event handler for the <a href=\"$MDN_URL$/Web/API/Window/devicemotion_event\" ><code>devicemotion</code></a>\nevents sent to the window.</p>"
    },
    "window.ondeviceorientation": {
      "url": "$MDN_URL$/web/api/window/ondeviceorientation",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "7",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "9",
        "IE": "11",
        "Opera": "15"
      },
      "doc": ""
    },
    "window.ondeviceorientationabsolute": {
      "url": "$MDN_URL$/web/api/window/ondeviceorientationabsolute",
      "compatibility": {
        "Chrome": "50",
        "ChromeAndroid": "50",
        "Edge": "79",
        "Opera": "37"
      },
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "window.ondragdrop": {
      "url": "$MDN_URL$/web/api/window/ondragdrop",
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<div class=\"warning notecard\">\n<p>Removed in Firefox 50, and never implemented in any other browser. Use the modern standard <a href=\"$MDN_URL$/Web/API/HTML_Drag_and_Drop_API\">HTML5 drag and drop</a> feature instead.</p>\n</div>",
      "parameters": {
        "funcRef ": "The event handler function to be registered."
      }
    },
    "window.ongamepadconnected": {
      "url": "$MDN_URL$/web/api/window/ongamepadconnected",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "35",
        "ChromeAndroid": "35",
        "Edge": "18",
        "Firefox": "29",
        "Opera": "22",
        "Safari": "10.1"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>ongamepadconnected</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface represents an event handler that will run when a gamepad\nis connected (when the <code><a href=\"$MDN_URL$/Web/API/Window/gamepadconnected_event\" >gamepadconnected</a></code> event fires).</p>\n<p>The event object is of type <a href=\"$MDN_URL$/Web/API/GamepadEvent\"><code>GamepadEvent</code></a>.</p>"
    },
    "window.ongamepaddisconnected": {
      "url": "$MDN_URL$/web/api/window/ongamepaddisconnected",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "35",
        "ChromeAndroid": "35",
        "Edge": "18",
        "Firefox": "29",
        "Opera": "22",
        "Safari": "10.1"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>ongamepaddisconnected</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface represents an event handler that will run when a gamepad\nis disconnected (when the <code><a href=\"$MDN_URL$/Web/API/Window/gamepaddisconnected_event\" >gamepaddisconnected</a></code> event fires).</p>\n<p>The event object is of type <a href=\"$MDN_URL$/Web/API/GamepadEvent\"><code>GamepadEvent</code></a>.</p>"
    },
    "window.onmozbeforepaint": {
      "url": "$MDN_URL$/web/api/window/onmozbeforepaint",
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<div class=\"note notebox notecard\">\n<p><strong>Note:</strong>This method was removed from Firefox 11 and onward.</p>\n</div>"
    },
    "window.onpaint": {
      "url": "$MDN_URL$/web/api/window/onpaint",
      "compatibility": {},
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><code><strong>Window.onpaint</strong></code> is an event handler for the\n<code>paint</code> event on the window.</p>\n<div class=\"notecard warning\">\n<p>Not working in Gecko-based applications currently, see Notes section!</p>\n</div>"
    },
    "window.onvrdisplayactivate": {
      "url": "$MDN_URL$/web/api/window/onvrdisplayactivate",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>onvrdisplayactivate</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface represents an event handler that will run when a display\nis able to be presented to (when the <code><a href=\"$MDN_URL$/Web/API/Window/vrdisplayactivate_event\" >vrdisplayactivate</a></code> event fires), for\nexample if an HMD has been moved to bring it out of standby, or woken up by being put\non.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This event handler was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The event object is of type <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a>.</p>"
    },
    "window.onvrdisplayblur": {
      "url": "$MDN_URL$/web/api/window/onvrdisplayblur",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>onvrdisplayblur</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>\ninterface represents an event handler that will run when presentation to a display has\nbeen paused for some reason by the browser, OS, or VR hardware (when the\n<code><a href=\"$MDN_URL$/Web/API/Window/vrdisplayblur_event\" >vrdisplayblur</a></code> event fires) — for example, while the user is interacting\nwith a system menu or browser, to prevent tracking or loss of experience.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This event handler was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>While a <a href=\"$MDN_URL$/Web/API/VRDisplay\"><code>VRDisplay</code></a> is blurred it does not lose it’s presenting status\n(<a href=\"$MDN_URL$/Web/API/VRDisplay/isPresenting\"><code>VRDisplay.isPresenting</code></a> continues to report <code>true</code>) but\n<a href=\"$MDN_URL$/Web/API/VRDisplay/getFrameData\"><code>VRDisplay.getFrameData()</code></a> returns <code>false</code> without updating the\nprovided <a href=\"$MDN_URL$/Web/API/VRFrameData\"><code>VRFrameData</code></a> and <a href=\"$MDN_URL$/Web/API/VRDisplay/getPose\"><code>VRDisplay.getPose()</code></a> returns a\n<a href=\"$MDN_URL$/Web/API/VRPose\"><code>VRPose</code></a> with <code>null</code> members.</p>\n<p>The event object is of type <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a>.</p>"
    },
    "window.onvrdisplayconnect": {
      "url": "$MDN_URL$/web/api/window/onvrdisplayconnect",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "ChromeAndroid": "",
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>onvrdisplayconnect</strong></code> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface represents an event handler that will run when a\ncompatible VR display has been connected to the computer (when the\n<code><a href=\"$MDN_URL$/Web/API/Window/vrdisplayconnect_event\" >vrdisplayconnect</a></code> event fires).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This event handler was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The event object is of type <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a>.</p>"
    },
    "window.onvrdisplaydeactivate": {
      "url": "$MDN_URL$/web/api/window/onvrdisplaydeactivate",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>onvrdisplaydeactivate</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface represents an event handler that will run when a display\ncan no longer be presented to (when the <code><a href=\"$MDN_URL$/Web/API/Window/vrdisplaydeactivate_event\" >vrdisplaydeactivate</a></code> event fires),\nfor example if an HMD has gone into standby or sleep mode due to a period of inactivity.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This event handler was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The event object is of type <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a>.</p>"
    },
    "window.onvrdisplaydisconnect": {
      "url": "$MDN_URL$/web/api/window/onvrdisplaydisconnect",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "ChromeAndroid": "56",
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <code><strong>onvrdisplaydisconnect</strong></code> event handler property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface is called when a compatible VR display has been\ndisconnected from the computer (when the <code><a href=\"$MDN_URL$/Web/API/Window/vrdisplaydisconnect_event\" >vrdisplaydisconnect</a></code> event fires).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This event handler was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The event object is of type <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a>.</p>"
    },
    "window.onvrdisplayfocus": {
      "url": "$MDN_URL$/web/api/window/onvrdisplayfocus",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>onvrdisplayfocus</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface represents an event handler that will run when\npresentation to a display has resumed after being blurred (when the\n<code><a href=\"$MDN_URL$/Web/API/Window/vrdisplayfocus_event\" >vrdisplayfocus</a></code> event fires).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This event handler was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The event object is of type <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a>.</p>"
    },
    "window.onvrdisplaypointerrestricted": {
      "url": "$MDN_URL$/web/api/window/onvrdisplaypointerrestricted",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>onvrdisplaypointerrestricted</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface represents an event handler that will run when the VR\ndisplay's pointer input is restricted to consumption via a <a href=\"$MDN_URL$/Web/API/Pointer_Lock_API\">pointerlocked element</a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This event handler was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The event object is of type <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a>.</p>"
    },
    "window.onvrdisplaypointerunrestricted": {
      "url": "$MDN_URL$/web/api/window/onvrdisplaypointerunrestricted",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>onvrdisplaypointerunrestricted</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface represents an event handler that will run when the VR\ndisplay's pointer input is no longer restricted to consumption via a <a href=\"$MDN_URL$/Web/API/Pointer_Lock_API\">pointerlocked element</a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This event handler was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The event object is of type <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a>.</p>"
    },
    "window.onvrdisplaypresentchange": {
      "url": "$MDN_URL$/web/api/window/onvrdisplaypresentchange",
      "status": [
        "Experimental",
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Edge": "15",
        "Firefox": "55*,64*"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>onvrdisplaypresentchange</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface represents an event handler that will run when the\npresenting state of a VR display changes — i.e. goes from presenting to not presenting,\nor vice versa (when the <code><a href=\"$MDN_URL$/Web/API/Window/vrdisplaypresentchange_event\" >vrdisplaypresentchange</a></code> event fires).</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This event handler was part of the old <a href=\"https://immersive-web.github.io/webvr/spec/1.1/\" class=\"external\" rel=\" noopener\">WebVR API</a>. It has been superseded by the <a href=\"https://immersive-web.github.io/webxr/\" class=\"external\" rel=\" noopener\">WebXR Device API</a>.</p>\n</div>\n<p>The event object is of type <a href=\"$MDN_URL$/Web/API/VRDisplayEvent\"><code>VRDisplayEvent</code></a>.</p>"
    },
    "window.open": {
      "url": "$MDN_URL$/web/api/window/open",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface's <strong><code>open()</code></strong> method loads\nthe specified resource into the new or existing browsing context (window,\n<a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> or tab) with the specified name. If the name doesn't exist,\nthen a new browsing context is opened in a new tab or a new window, and the specified\nresource is loaded into it.</p>\n<div class=\"notecard note\">\n<p>Note that for brevity, this document will generally use the term \"window\" as a\nshorthand for \"a browsing context in a tab or window\".</p>\n</div>",
      "parameters": {
        "url": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> indicating the URL of the resource to be loaded. This can be a path or URL to an HTML page, image file, or any other resource that is supported by the browser. If the empty string (\"\") is specified as <code><var>url</var></code> , a blank page is opened into the targeted browsing context.",
        "windowName": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the name of the browsing context (window, <a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> or tab) into which to load the specified resource; if the name doesn't indicate an existing context, a new window is created and is given the name specified by <code><var>windowName</var></code> . <br> <br> This name can be used as the target for the <code>target</code> attribute of <a href=\"$MDN_URL$/Web/HTML/Element/a#attr-target\"><code>&lt;a&gt;</code></a> or <a href=\"$MDN_URL$/Web/HTML/Element/form#attr-target\"><code>&lt;form&gt;</code></a> elements. The name should not contain whitespace. Keep in mind that this will NOT be used as the window's title.",
        "windowFeatures": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing a comma-separated list of window features given with their corresponding values in the form \"name=value\". These features include options such as the window's default size and position, whether or not to include toolbar, and so forth. There must be no whitespace in the string. See <a href=\"#window_features\">Window features</a> below for documentation of each of the features that can be specified."
      },
      "returns": "<p>A <code>WindowProxy</code> object, which is basically a thin wrapper for the\n  <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> object representing the newly created window, and has all its\n  features available. If the window couldn't be opened, the returned value is instead\n  <code>null</code>. The returned reference can be used to access properties and methods\n  of the new window as long as it complies with <a href=\"$MDN_URL$/Web/Security/Same-origin_policy\">Same-origin policy</a> security\n  requirements.</p>"
    },
    "window.opendialog": {
      "url": "$MDN_URL$/web/api/window/opendialog",
      "compatibility": {},
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p><code>window.openDialog()</code> is an extension to <a href=\"$MDN_URL$/Web/API/Window/open\"><code>window.open()</code></a>. It\nbehaves the same, except that it can optionally take one or more parameters past\n<code>windowFeatures</code>, and <code>windowFeatures</code> itself is treated a little\ndifferently.</p>\n<p>The optional parameters, if present, are bundled up in a JavaScript <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>\nobject and added to the newly created window as a property named\n<a class=\"page-not-created\"  ><code>window.arguments</code></a>. They may be referenced in the JavaScript of the window\nat any time, including during the execution of a <code><a href=\"$MDN_URL$/Web/API/Window/load_event\" >load</a></code> handler. These\nparameters may be used, then, to pass arguments to and from the dialog window.</p>\n<p>The call to <code>openDialog()</code> returns immediately. If you want the call to\nblock until the user has closed the dialog, supply <code>modal</code> as a\n<code>windowFeatures</code> parameter. Note that this also means the user won't be able\nto interact with the opener window until they close the modal dialog.</p>",
      "parameters": {
        "newWindow": "The opened window",
        "url": "The URL to be loaded in the newly opened window.",
        "name": "The window name (optional). See <a href=\"$MDN_URL$/Web/API/Window/open\"><code>window.open()</code></a> description for detailed information.",
        "features": "See <a href=\"$MDN_URL$/Web/API/Window/open\"><code>window.open()</code></a> for details.",
        "arg1, arg2, ...": "The arguments to be passed to the new window (optional)."
      }
    },
    "window.opener": {
      "url": "$MDN_URL$/web/api/window/opener",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface's\n<code><strong>opener</strong></code> property returns a reference to the window that\nopened the window, either with <a href=\"$MDN_URL$/Web/API/Window/open\" ><code>open()</code></a>, or by navigating\na link with a <a href=\"$MDN_URL$/Web/HTML/Element/a#attr-target\"><code>target</code></a> attribute.</span></p>\n<p>In other words, if window <code>A</code> opens window <code>B</code>,\n<code>B.opener</code> returns <code>A</code>.</p>"
    },
    "window.orientation": {
      "url": "$MDN_URL$/web/api/window/orientation",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "ChromeAndroid": "",
        "SafariIOS": ""
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>"
    },
    "window.outerheight": {
      "url": "$MDN_URL$/web/api/window/outerheight",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "9",
        "Safari": "3",
        "SafariIOS": "3"
      },
      "doc": "<p>The <strong><code>Window.outerHeight</code></strong> read-only property returns the height in pixels of the whole browser window, including any sidebar, window chrome, and window-resizing borders/handles.</p>"
    },
    "window.outerwidth": {
      "url": "$MDN_URL$/web/api/window/outerwidth",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "9",
        "Safari": "3",
        "SafariIOS": "3"
      },
      "doc": "<p><strong><code>Window.outerWidth</code></strong> read-only property returns the width of the outside of the browser window. It represents the width of the whole browser window including sidebar (if expanded), window chrome and window resizing borders/handles.</p>"
    },
    "window.pagexoffset": {
      "url": "$MDN_URL$/web/api/window/pagexoffset",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> property <strong><code>pageXOffset</code></strong> is an alias for <a href=\"$MDN_URL$/Web/API/Window/scrollX\"><code>scrollX</code></a>.</p>"
    },
    "window.pageyoffset": {
      "url": "$MDN_URL$/web/api/window/pageyoffset",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> property <strong><code>pageYOffset</code></strong>\nis an alias for <a href=\"$MDN_URL$/Web/API/Window/scrollY\" ><code>scrollY</code></a>; as such, it returns the number\nof pixels the document is currently scrolled along the vertical axis (that is, up or\ndown) with a value of 0.0, indicating that the top edge of the <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>\nis currently aligned with the top edge of the window's content area.</p>\n<p>There is slightly better support for <code>pageYOffset</code> than for\n<code>scrollY</code> in older browsers, but if you're not concerned about browsers more\nthan a handful of years old, you can use either one.</p>\n<p>The corresponding <a href=\"$MDN_URL$/Web/API/Window/pageXOffset\" ><code>pageXOffset</code></a> property, which\nreturns the number of pixels scrolled along the horizontal axis (left and right), is an\nalias for <a href=\"$MDN_URL$/Web/API/Window/scrollX\" ><code>scrollX</code></a>.</p>"
    },
    "window.parent": {
      "url": "$MDN_URL$/web/api/window/parent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "3",
        "Safari": "1.3",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.parent</strong></code> property is a reference to the parent\nof the current window or subframe.</p>\n<p>If a window does not have a parent, its <code>parent</code> property is a reference to\nitself.</p>\n<p>When a window is loaded in an <a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>, <a href=\"$MDN_URL$/Web/HTML/Element/object\"><code>&lt;object&gt;</code></a>, or\n<a href=\"$MDN_URL$/Web/HTML/Element/frame\"><code>&lt;frame&gt;</code></a>, its parent is the window with the element embedding the\nwindow.</p>"
    },
    "window.performance": {
      "url": "$MDN_URL$/web/api/window/performance",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "6",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "7",
        "IE": "9",
        "Opera": "15",
        "Safari": "8",
        "SafariIOS": "9"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface's <strong><code>performance</code></strong>\nproperty returns a <a href=\"$MDN_URL$/Web/API/Performance\"><code>Performance</code></a> object, which can be used to gather\nperformance information about the current document. It serves as the point of exposure\nfor the Performance Timeline API, the High Resolution Time API, the <a href=\"$MDN_URL$/Web/API/Navigation_timing_API\">Navigation Timing API</a>, the <a href=\"$MDN_URL$/Web/API/User_Timing_API\">User Timing API</a>, and the <a href=\"$MDN_URL$/Web/API/Resource_Timing_API\">Resource Timing API</a>.</p>"
    },
    "window.personalbar": {
      "url": "$MDN_URL$/web/api/window/personalbar",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>Returns the <code>personalbar</code> object, whose visibility can be toggled in the\nwindow.</p>"
    },
    "window.pkcs11": {
      "url": "$MDN_URL$/web/api/window/pkcs11",
      "status": [
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>"
    },
    "window.postmessage": {
      "url": "$MDN_URL$/web/api/window/postmessage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "6*,8*",
        "IE": "10",
        "Opera": "9.5",
        "Safari": "4",
        "SafariIOS": "3.2"
      },
      "doc": "<p>The <strong><code>window.postMessage()</code></strong> method safely enables\ncross-origin communication between <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> objects; <em>e.g.,</em> between\na page and a pop-up that it spawned, or between a page and an iframe embedded within it.</p>\n<p>Normally, scripts on different pages are allowed to access each other if and only if\nthe pages they originate from share the same protocol, port number, and host (also known\nas the \"<a href=\"$MDN_URL$/Web/Security/Same-origin_policy\">same-origin policy</a>\").\n<code>window.postMessage()</code> provides a controlled mechanism to securely circumvent\nthis restriction (if used properly).</p>\n<p>Broadly, one window may obtain a reference to another (<em>e.g.,</em> via\n<code>targetWindow = window.opener</code>), and then dispatch a\n<a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> on it with <code>targetWindow.postMessage()</code>. The\nreceiving window is then free to <a href=\"$MDN_URL$/Web/Events/Event_handlers\">handle this event</a> as needed. The arguments passed to <code>window.postMessage()</code>\n(<em>i.e.,</em> the “message”) are <a href=\"#the_dispatched_event\">exposed to the receiving window through the event object</a>.</p>",
      "parameters": {
        "targetWindow": "A reference to the window that will receive the message. Methods for obtaining such a reference include: <ul> <li><a href=\"$MDN_URL$/Web/API/Window/open\"><code>window.open</code></a> (to spawn a new window and then reference it),</li> <li><a href=\"$MDN_URL$/Web/API/Window/opener\"><code>window.opener</code></a> (to reference the window that spawned this one), </li> <li><a href=\"$MDN_URL$/Web/API/HTMLIFrameElement/contentWindow\"><code>HTMLIFrameElement.contentWindow</code></a> (to reference an embedded <a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a> from its parent window),</li> <li><a href=\"$MDN_URL$/Web/API/Window/parent\"><code>window.parent</code></a> (to reference the parent window from within an embedded <a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>), or</li> <li><a href=\"$MDN_URL$/Web/API/Window/frames\"><code>window.frames</code></a> + an index value (named or numeric).</li> </ul>",
        "message": "Data to be sent to the other window. The data is serialized using <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Structured_clone_algorithm\" ><code>the structured clone algorithm</code></a> . This means you can pass a broad variety of data objects safely to the destination window without having to serialize them yourself.",
        "targetOrigin": "Specifies what the origin of <code>targetWindow</code> must be for the event to be dispatched, either as the literal string <code>\"*\"</code> (indicating no preference) or as a URI. If at the time the event is scheduled to be dispatched the scheme, hostname, or port of <code>targetWindow</code> 's document does not match that provided in <code>targetOrigin</code> , the event will not be dispatched; only if all three match will the event be dispatched. This mechanism provides control over where messages are sent; for example, if <code>postMessage()</code> was used to transmit a password, it would be absolutely critical that this argument be a URI whose origin is the same as the intended receiver of the message containing the password, to prevent interception of the password by a malicious third party. <strong>Always provide a specific <code>targetOrigin</code>, not <code>*</code>, if you know where the other window's document should be located. Failing to provide a specific target discloses the data you send to any interested malicious site.</strong>",
        "transfer": "Is a sequence of <a href=\"$MDN_URL$/Web/API/Transferable\"><code>Transferable</code></a> objects that are transferred with the message. The ownership of these objects is given to the destination side and they are no longer usable on the sending side."
      }
    },
    "window.print": {
      "url": "$MDN_URL$/web/api/window/print",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "5",
        "Opera": "6",
        "Safari": "1.1",
        "SafariIOS": ""
      },
      "doc": "<p>Opens the Print Dialog to print the current document.</p>\n<p>In most browsers, this method will block while the print dialog is open. However in more recent versions of Safari, it may return immediately.</p>"
    },
    "window.prompt": {
      "url": "$MDN_URL$/web/api/window/prompt",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><code>window.prompt()</code> instructs the browser to display a dialog with an optional message prompting the user to input some text, and to wait until the user either submits the text or cancels the dialog.</p>\n<p>Under some conditions — for example, when the user switches tabs — the browser may not actually display a dialog, or may not wait for the user to submit text or to cancel the dialog.</p>",
      "parameters": {
        "message ": "A string of text to display to the user. Can be omitted if there is nothing to show in the prompt window.",
        "default ": "A string containing the default value displayed in the text input field. Note that in Internet Explorer 7 and 8, if you do not provide this parameter, the string <code>\"undefined\"</code> is the default value."
      },
      "returns": "<p>A string containing the text entered by the user, or <code>null</code>.</p>"
    },
    "window.releaseevents": {
      "url": "$MDN_URL$/web/api/window/releaseevents",
      "status": [
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "11",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>Releases the window from trapping events of a specific type.</p>"
    },
    "window.requestanimationframe": {
      "url": "$MDN_URL$/web/api/window/requestanimationframe",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "24",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "23",
        "IE": "10",
        "Opera": "15",
        "Safari": "6.1",
        "SafariIOS": "7"
      },
      "doc": "<p>The <strong><code>window.requestAnimationFrame()</code></strong> method tells the\nbrowser that you wish to perform an animation and requests that the browser calls a\nspecified function to update an animation before the next repaint. The method takes a\ncallback as an argument to be invoked before the repaint.</p>\n<div class=\"note notecard\"><strong>Note:</strong> Your callback routine must itself call\n<code>requestAnimationFrame()</code> again if you want to animate another frame at the\nnext repaint. <code>requestAnimationFrame()</code> is 1 shot.</div>\n<p>You should call this method whenever you're ready to update your animation onscreen.\nThis will request that your animation function be called before the browser performs the\nnext repaint. The number of callbacks is usually 60 times per second, but will generally\nmatch the display refresh rate in most web browsers as per W3C recommendation.\n<code>requestAnimationFrame()</code> calls are paused in most browsers when running in\nbackground tabs or hidden <a href=\"$MDN_URL$/Web/HTML/Element/iframe\"><code>&lt;iframe&gt;</code></a>s in order to improve performance\nand battery life.</p>\n<p>The callback method is passed a single argument, a <a href=\"$MDN_URL$/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a>,\nwhich indicates the current time (based on the number of milliseconds since <a href=\"$MDN_URL$/Web/API/DOMHighResTimeStamp#the_time_origin\">time origin</a>). When\nmultiple callbacks queued by <code>requestAnimationFrame()</code> begin to fire in a\nsingle frame, each receives the same timestamp even though time has passed during the\ncomputation of every previous callback's workload (in the code example below we only\nanimate the frame when the timestamp changes, i.e. on the first callback). This\ntimestamp is a decimal number, in milliseconds, but with a minimal precision of 1ms\n(1000 µs).</p>\n<div class=\"notecard warning\">\n<p>Be sure to always use the first argument (or some other method for getting the\ncurrent time) to calculate how much the animation will progress in a frame,\n<strong>otherwise the animation will run faster on high refresh rate screens</strong>.\nCheck the example below for a way to do this.</p>\n</div>",
      "parameters": {
        "callback": "The function to call when it's time to update your animation for the next repaint. The callback function is passed one single argument, a <a href=\"$MDN_URL$/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> similar to the one returned by <a href=\"$MDN_URL$/Web/API/Performance/now\"><code>performance.now()</code></a> , indicating the point in time when <code>requestAnimationFrame()</code> starts to execute callback functions."
      },
      "returns": "<p>A <code>long</code> integer value, the request id, that uniquely identifies the entry\n  in the callback list. This is a non-zero value, but you may not make any other\n  assumptions about its value. You can pass this value to\n  <a href=\"$MDN_URL$/Web/API/Window/cancelAnimationFrame\"><code>window.cancelAnimationFrame()</code></a> to cancel the refresh callback request.</p>"
    },
    "window.requestfilesystem": {
      "url": "$MDN_URL$/web/api/window/requestfilesystem",
      "status": [
        "Experimental",
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The non-standard <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> method\n<strong><code>requestFileSystem()</code></strong> method is a Google Chrome-specific\nmethod which lets a web site or app gain access to a sandboxed file system for its own\nuse. The returned <a href=\"$MDN_URL$/Web/API/FileSystem\"><code>FileSystem</code></a> is then available for use with the other <a href=\"$MDN_URL$/Web/API/File_and_Directory_Entries_API\">file system APIs</a>.</p>",
      "parameters": {
        "type": "The type of storage to request. Specify <code>Window.TEMPORARY</code> if it's acceptable for the browser to delete the files at its own discretion, such as if storage space runs low, or <code>Window.PERSISTENT</code> if you need the files to remain in place unless the user or the web site or app explicitly permit it. Persistent storage requires that the user grant the site quota.",
        "size": "The amount of storage space you wish to have allocated for your app's use.",
        "successCallback": "A function which is invoked when the file system has been successfully obtained. The callback receives a single parameter: a <a href=\"$MDN_URL$/Web/API/FileSystem\"><code>FileSystem</code></a> object representing the file system the app has permission to use.",
        "errorCallback": "An optional parameter specifying a function which is called if an error occurs while attempting to obtain the file system, or if the user denies permission to create or access the file system. The callback receives as input a single parameter: a <a href=\"$MDN_URL$/Web/API/FileError\"><code>FileError</code></a> object describing the error."
      },
      "returns": "<p><code>undefined</code></p>"
    },
    "window.requestidlecallback": {
      "url": "$MDN_URL$/web/api/window/requestidlecallback",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "47",
        "ChromeAndroid": "47",
        "Edge": "79",
        "Firefox": "55",
        "Opera": "34"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>window.requestIdleCallback()</strong></code> method queues a function\nto be called during a browser's idle periods. This enables developers to perform\nbackground and low priority work on the main event loop, without impacting\nlatency-critical events such as animation and input response. Functions are generally\ncalled in first-in-first-out order; however, callbacks which have a <code>timeout</code>\nspecified may be called out-of-order if necessary in order to run them before the\ntimeout elapses.</p>\n<p>You can call <code>requestIdleCallback()</code> within an idle callback function to\nschedule another callback to take place no sooner than the next pass through the event\nloop.</p>\n<div class=\"note notecard\">A <code>timeout</code> option is strongly recommended for required work,\nas otherwise it's possible multiple seconds will elapse before the callback is fired.\n</div>",
      "parameters": {
        "callback": "A reference to a function that should be called in the near future, when the event loop is idle. The callback function is passed an <a href=\"$MDN_URL$/Web/API/IdleDeadline\"><code>IdleDeadline</code></a> object describing the amount of time available and whether or not the callback has been run because the timeout period expired.",
        "options": "Contains optional configuration parameters. Currently only one property is defined: <ul> <li><code>timeout</code>: If <code>timeout</code> is specified and has a positive value, and the callback has not already been called by the time <em>timeout</em> milliseconds have passed, a task to execute the callback is queued in the event loop, even if doing so risks causing a negative performance impact.</li> </ul>"
      }
    },
    "window.resizeby": {
      "url": "$MDN_URL$/web/api/window/resizeby",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.resizeBy()</strong></code> method resizes the current window\nby a specified amount.</p>"
    },
    "window.resizeto": {
      "url": "$MDN_URL$/web/api/window/resizeto",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>Window.resizeTo()</code></strong> method dynamically resizes the\nwindow.</p>",
      "parameters": {
        "width": "An integer representing the new <a href=\"$MDN_URL$/Web/API/Window/outerWidth\" ><code>outerWidth</code></a> in pixels (including scroll bars, title bars, etc).",
        "height": "An integer value representing the new <a href=\"$MDN_URL$/Web/API/Window/outerHeight\" ><code>outerHeight</code></a> in pixels (including scroll bars, title bars, etc)."
      }
    },
    "window.routeevent": {
      "url": "$MDN_URL$/web/api/window/routeevent",
      "status": [
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> method <strong><code>routeEvent()</code></strong>, which is <em>obsolete</em> and no longer available, used to be called to forward an event to the next object that has asked to capture events.</span></p>"
    },
    "window.screen": {
      "url": "$MDN_URL$/web/api/window/screen",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> property <strong><code>screen</code></strong> returns a\nreference to the screen object associated with the window. The <code>screen</code>\nobject, implementing the <a href=\"$MDN_URL$/Web/API/Screen\"><code>Screen</code></a> interface, is a special object for\ninspecting properties of the screen on which the current window is being rendered.</p>"
    },
    "window.screenleft": {
      "url": "$MDN_URL$/web/api/window/screenleft",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "64",
        "IE": "5",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.screenLeft</strong></code> read-only property returns the\nhorizontal distance, in CSS pixels, from the left border of the user's browser viewport\nto the left side of the screen.</p>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: <code>screenLeft</code> is an alias of the older\n<a href=\"$MDN_URL$/Web/API/Window/screenX\"><code>Window.screenX</code></a> property. <code>screenLeft</code> was originally\nsupported only in IE but was introduced everywhere due to popularity.</p>\n</div>"
    },
    "window.screentop": {
      "url": "$MDN_URL$/web/api/window/screentop",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "64",
        "IE": "5",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.screenTop</strong></code> read-only property returns the\nvertical distance, in CSS pixels, from the top border of the user's browser viewport to\nthe top side of the screen.</p>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: <code>screenTop</code> is an alias of the older\n<a href=\"$MDN_URL$/Web/API/Window/screenY\"><code>Window.screenY</code></a> property. <code>screenTop</code> was originally\nsupported only in IE but was introduced everywhere due to popularity.</p>\n</div>"
    },
    "window.screenx": {
      "url": "$MDN_URL$/web/api/window/screenx",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.screenX</strong></code> read-only property returns the\nhorizontal distance, in CSS pixels, of the left border of the user's browser viewport to\nthe left side of the screen.</p>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: An alias of <code>screenX</code> was implemented across modern\nbrowsers in more recent times — <a href=\"$MDN_URL$/Web/API/Window/screenLeft\"><code>Window.screenLeft</code></a>. This was originally\nsupported only in IE but was introduced everywhere due to popularity.</p>\n</div>"
    },
    "window.screeny": {
      "url": "$MDN_URL$/web/api/window/screeny",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.screenY</strong></code> read-only property returns the vertical distance, in CSS pixels, of the top border of the user's browser viewport to the top edge of the screen.</p>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: An alias of <code>screenY</code> was implemented across modern browsers in more recent times — <a href=\"$MDN_URL$/Web/API/Window/screenTop\"><code>Window.screenTop</code></a>. This was originally supported only in IE but was introduced everywhere due to popularity.</p>\n</div>"
    },
    "window.scroll": {
      "url": "$MDN_URL$/web/api/window/scroll",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.scroll()</strong></code> method scrolls the window to a\nparticular place in the document.</p>"
    },
    "window.scrollbars": {
      "url": "$MDN_URL$/web/api/window/scrollbars",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.scrollbars</strong></code> property returns the\n<code>scrollbars</code> object, whose visibility can be checked.</p>"
    },
    "window.scrollby": {
      "url": "$MDN_URL$/web/api/window/scrollby",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "79",
        "Firefox": "",
        "Opera": "3",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.scrollBy()</strong></code> method scrolls the document in the\nwindow by the given amount.</p>"
    },
    "window.scrollbylines": {
      "url": "$MDN_URL$/web/api/window/scrollbylines",
      "compatibility": {
        "Firefox": ""
      },
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>Window.scrollByLines()</strong></code> method scrolls the document by\nthe specified number of lines.</p>"
    },
    "window.scrollbypages": {
      "url": "$MDN_URL$/web/api/window/scrollbypages",
      "compatibility": {
        "Firefox": ""
      },
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>Window.scrollByPages()</strong></code> method scrolls the current\ndocument by the specified number of pages.</p>"
    },
    "window.scrollmaxx": {
      "url": "$MDN_URL$/web/api/window/scrollmaxx",
      "compatibility": {
        "Firefox": ""
      },
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>Window.scrollMaxX</strong></code> read-only property returns the\nmaximum number of pixels that the document can be scrolled horizontally.</p>"
    },
    "window.scrollmaxy": {
      "url": "$MDN_URL$/web/api/window/scrollmaxy",
      "compatibility": {
        "Firefox": ""
      },
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>Window.scrollMaxY</strong></code> read-only property returns the\nmaximum number of pixels that the document can be scrolled vertically.</p>"
    },
    "window.scrollto": {
      "url": "$MDN_URL$/web/api/window/scrollto",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "4",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><strong><code>Window.scrollTo()</code></strong> scrolls to a particular set of\ncoordinates in the document.</p>"
    },
    "window.scrollx": {
      "url": "$MDN_URL$/web/api/window/scrollx",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "9.6",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <code><strong>scrollX</strong></code> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface returns the number of pixels that the document is\ncurrently scrolled horizontally. This value is subpixel precise in modern browsers,\nmeaning that it isn't necessarily a whole number. You can get the number of pixels the\ndocument is scrolled vertically from the <a href=\"$MDN_URL$/Web/API/Window/scrollY\" ><code>scrollY</code></a>\nproperty.</p>"
    },
    "window.scrolly": {
      "url": "$MDN_URL$/web/api/window/scrolly",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "9.6",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <code><strong>scrollY</strong></code> property\nof the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface returns the number of pixels that the document\nis currently scrolled vertically.</span> This value is subpixel precise in modern\nbrowsers, meaning that it isn't necessarily a whole number. You can get the number of\npixels the document is scrolled horizontally from the <a href=\"$MDN_URL$/Web/API/Window/scrollX\" ><code>scrollX</code></a> property.</p>"
    },
    "window.self": {
      "url": "$MDN_URL$/web/api/window/self",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.self</strong></code> read-only property returns the window itself, as a <a class=\"page-not-created\"  ><code>WindowProxy</code></a>. It can be used with dot notation on a <code>window</code> object (that is, <code>window.self</code>) or standalone (<code>self</code>). The advantage of the standalone notation is that a similar notation exists for non-window contexts, such as in <a href=\"$MDN_URL$/Web/API/Worker\" >Web Workers</a>. By using <code>self</code>, you can refer to the global scope in a way that will work not only in a window context (<code>self</code> will resolve to <code>window.self</code>) but also in a worker context (<code>self</code> will then resolve to <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope/self\"><code>WorkerGlobalScope.self</code></a>).</p>"
    },
    "window.sessionstorage": {
      "url": "$MDN_URL$/web/api/window/sessionstorage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "5",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "2",
        "IE": "8",
        "Opera": "10.5",
        "Safari": "4",
        "SafariIOS": "3.2"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <strong><code>sessionStorage</code></strong>\nproperty accesses a session <a href=\"$MDN_URL$/Web/API/Storage\"><code>Storage</code></a> object for the current\n<a href=\"$MDN_URL$/Glossary/Origin\">origin</a>. <code>sessionStorage</code> is similar to\n<a href=\"$MDN_URL$/Web/API/Window/localStorage\" ><code>localStorage</code></a>; the difference is that while data\nin <code>localStorage</code> doesn't expire, data in <code>sessionStorage</code> is\ncleared when the <em>page session</em> ends.</span></p>\n<ul>\n<li>Whenever a document is loaded in a particular tab in the browser, a unique page\nsession gets created and assigned to that particular tab. That page session is valid\nonly for that particular tab.</li>\n<li>A page session lasts as long as the tab or the browser is open, and survives over\npage reloads and restores.</li>\n<li><strong>Opening a page in a new tab or window creates a new session with the value\nof the top-level browsing context, which differs from how session cookies\nwork.</strong></li>\n<li>Opening multiple tabs/windows with the same URL creates <code>sessionStorage</code>\nfor each tab/window.</li>\n<li>Duplicating a tab copies the tab's <code>sessionStorage</code> into the new\ntab.</li>\n<li>Closing a tab/window ends the session and clears objects in\n<code>sessionStorage</code>.</li>\n</ul>\n<p>Data stored in <code>sessionStorage</code> <strong>is specific to the protocol of the\npage</strong>. In particular, data stored by a script on a site accessed with HTTP\n(e.g., <a href=\"https://example.com\" rel=\"noopener\" class=\"external\">http://example.com</a>) is\nput in a different <code>sessionStorage</code> object from the same site accessed with\nHTTPS (e.g., <a href=\"https://example.com\" rel=\"noopener\" class=\"external\">https://example.com</a>).</p>\n<p>The keys and the values are <em>always</em> in the UTF-16 <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>\nformat, which uses two bytes per character. As with objects, integer keys are\nautomatically converted to strings.</p>",
      "throws": {
        "SecurityError": "The request violates a policy decision, or the origin is not <a href=\"$MDN_URL$/Web/Security/Same-origin_policy#definition_of_an_origin\">a valid scheme/host/port tuple</a> (this can happen if the origin uses the <code>file:</code> or <code>data:</code> scheme, for example). For example, the user may have their browser configured to deny permission to persist data for the specified origin."
      }
    },
    "window.setcursor": {
      "url": "$MDN_URL$/web/api/window/setcursor",
      "compatibility": {},
      "doc": "<div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>Window.setCursor()</strong></code> method sets the cursor for the current window.</p>"
    },
    "window.setimmediate": {
      "url": "$MDN_URL$/web/api/window/setimmediate",
      "compatibility": {
        "IE": "10"
      },
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>This method is used to break up long running operations and run a callback function\nimmediately after the browser has completed other operations such as events and display\nupdates.</p>\n<div class=\"note notecard\">This method is not expected to become standard, and is only implemented\nby recent builds of Internet Explorer and Node.js 0.10+. It meets resistance both from\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=686201\" class=\"external\" rel=\" noopener\">Gecko</a> (Firefox) and <a href=\"https://code.google.com/p/chromium/issues/detail?id=146172\" class=\"external\" rel=\" noopener\">Webkit</a>\n(Google/Apple).</div>"
    },
    "window.showdirectorypicker": {
      "url": "$MDN_URL$/web/api/window/showdirectorypicker",
      "status": [
        "Experimental"
      ],
      "compatibility": {
        "Chrome": "86",
        "Edge": "86",
        "Opera": "72"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n</div>\n<p class=\"summary\">The <strong><code>showDirectoryPicker()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface displays a directory picker which allows the user to\nselect a directory.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/FileSystemDirectoryHandle\"><code>FileSystemDirectoryHandle</code></a>.</p>",
      "throws": {
        "AbortError": "Thrown if the user dismisses the prompt without making a selection, or if the user agent deems the selected content to be too sensitive or dangerous"
      }
    },
    "window.showmodaldialog": {
      "url": "$MDN_URL$/web/api/window/showmodaldialog",
      "status": [
        "Deprecated"
      ],
      "compatibility": {
        "IE": "4",
        "Safari": "5.1"
      },
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<div class=\"notecard warning\">\n<h4 id=\"warning\">Warning</h4>\n<p>This feature has been removed. Please fix your Web sites and applications.</p>\n<p>This method was removed in Chrome 43 and Firefox 56.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>Window.showModalDialog()</code></strong>\ncreated and displayed a modal dialog box containing a specified HTML document.</span></p>",
      "parameters": {
        "center: {on | off | yes | no | 1 | 0 }": "If <code>on</code> , <code>yes</code> , or <code>1</code> , the dialog window is centered on the desktop; otherwise it's hidden. Default is <code>yes</code> .",
        "dialogheight: height": "The height of the dialog box in pixels.",
        "dialogleft: left": "Distance of the dialog box from the left edge of the desktop.",
        "dialogwidth: width": "The width of the dialog box in pixels.",
        "dialogtop: top": "Distance of the dialog box from the top edge of the desktop.",
        "resizable: {on | off | yes | no | 1 | 0 }": "If this argument's value is <code>on</code> , <code>yes</code> , or 1, the dialog window can be resized by the user; otherwise its size is fixed. The default value is <code>no</code> .",
        "scroll: {on | off | yes | no | 1 | 0 }": "If <code>on</code> , <code>yes</code> , or 1, the dialog window has scroll bars; otherwise its size is fixed. Default is <code>no</code> ."
      }
    },
    "window.showopenfilepicker": {
      "url": "$MDN_URL$/web/api/window/showopenfilepicker",
      "status": [
        "Experimental"
      ],
      "compatibility": {
        "Chrome": "86",
        "Edge": "86",
        "Opera": "72"
      },
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n</div>\n<p class=\"summary\">The <strong><code>showOpenFilePicker()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface shows a file picker that allows a user to select a file\nor multiple files and returns a handle for the file(s).</p>",
      "parameters": {
        "options": "An optional object containing options, which are as follows: <ul> <li><code>multiple</code>: A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>. Default <code>false</code>. When set to <code>true</code> multiple files may be selected.</li> <li><code>excludeAcceptAllOption</code>:A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>. Default <code>false</code>. By default the picker should include an option to not apply any file type filters (instigated with the type option below). Setting this option to <code>true</code> means that option is <em>not</em> available.</li> <li><code>types</code>: An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of allowed file types to pick. Each item is an object with the following options: <ul> <li><code>description</code>: An optional description of the category of files types allowed.</li> <li><code>accept</code>: An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> with the keys set to the <a href=\"$MDN_URL$/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\">MIME type</a> and the values an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of file extensions (see below for an example).</li> </ul> </li> </ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of <a href=\"$MDN_URL$/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a> objects.</p>",
      "throws": {
        "AbortError": "An AbortError is thrown if a user dismisses the prompt without making a selection or if a file selected is deemed too sensitive or dangerous to be exposed to the website."
      }
    },
    "window.showsavefilepicker": {
      "url": "$MDN_URL$/web/api/window/showsavefilepicker",
      "status": [
        "Experimental"
      ],
      "compatibility": {
        "Chrome": "86",
        "Edge": "86",
        "Opera": "72"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n</div>\n<p class=\"summary\">The <strong><code>showSaveFilePicker()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface shows a file picker that allows a user to save a file.\nEither by selecting an existing file, or entering a name for a new file.</p>",
      "parameters": {
        "options": "An optional object containing options, which are as follows: <ul> <li><code>excludeAcceptAllOption</code>:A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Boolean\"><code>Boolean</code></a>. Default <code>false</code>. By default the picker should include an option to not apply any file type filters (instigated with the type option below). Setting this option to <code>true</code> means that option is <em>not</em> available.</li> <li><code>types</code>: An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of allowed file types to save. Each item is an object with the following options: <ul> <li><code>description</code>: An optional description of the category of files types allowed.</li> <li><code>accept</code>: An <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a> with the keys set to the <a href=\"$MDN_URL$/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\">MIME type</a> and the values an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a> of file extensions (see below for an example).</li> </ul> </li> </ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/FileSystemFileHandle\"><code>FileSystemFileHandle</code></a>.</p>",
      "throws": {
        "AbortError": "Thrown if the user dismisses the file picker without selecting or inputting a file, or if the user agent deems any selected files too sensitive or dangerous."
      }
    },
    "window.sidebar": {
      "url": "$MDN_URL$/web/api/window/sidebar",
      "status": [
        "Deprecated"
      ],
      "compatibility": {
        "Firefox": ""
      },
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>Returns a sidebar object which contains several methods for registering add-ons with the browser.</p>"
    },
    "window.sizetocontent": {
      "url": "$MDN_URL$/web/api/window/sizetocontent",
      "compatibility": {
        "Firefox": ""
      },
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>Window.sizeToContent()</strong></code> method sizes the window\naccording to its content. In order for it to work, the DOM content should be loaded when\nthis function is called—for example, once the <code><a href=\"$MDN_URL$/Web/API/Window/DOMContentLoaded_event\" >DOMContentLoaded</a></code> event has\nbeen thrown.</p>\n<p>Since Firefox 20, the mimimal size of the window is clamped to prevent the window from\nbeing too small for the user to interact with.</p>"
    },
    "window.speechsynthesis": {
      "url": "$MDN_URL$/web/api/window/speechsynthesis",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "33",
        "ChromeAndroid": "",
        "Edge": "14",
        "Firefox": "49",
        "Opera": "",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code>speechSynthesis</code> read-only property of the Window object returns a <a href=\"$MDN_URL$/Web/API/SpeechSynthesis\"><code>SpeechSynthesis</code></a> object, which is the entry point into using <a href=\"$MDN_URL$/Web/API/Web_Speech_API\">Web Speech API</a> speech synthesis functionality.</p>"
    },
    "window.status": {
      "url": "$MDN_URL$/web/api/window/status",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <code><strong>status</strong></code> property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface was originally intended to set the text in the status\nbar at the bottom of the browser window. However, the HTML standard now requires\nsetting <code>window.status</code> to have no effect on the text displayed in the\nstatus bar.</span></p>"
    },
    "window.statusbar": {
      "url": "$MDN_URL$/web/api/window/statusbar",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "15",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.statusbar</strong></code> property returns the statusbar\nobject, whose visibility can be toggled in the window.</p>"
    },
    "window.stop": {
      "url": "$MDN_URL$/web/api/window/stop",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "14",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<div> </div>\n<p>The <strong><code>window.stop()</code></strong> stops further resource loading in the current\nbrowsing context, equivalent to the stop button in the browser.</p>\n<p>Because of how scripts are executed, this method cannot interrupt its parent\ndocument's loading, but it will stop its images, new windows, and other still-loading\nobjects.</p>"
    },
    "window.toolbar": {
      "url": "$MDN_URL$/web/api/window/toolbar",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "15",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>Window.toolbar</strong></code> property returns the toolbar object,\nwhich can be used to check the browser toolbar visibility.</p>"
    },
    "window.top": {
      "url": "$MDN_URL$/web/api/window/top",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>Returns a reference to the topmost window in the window hierarchy.</p>"
    },
    "window.updatecommands": {
      "url": "$MDN_URL$/web/api/window/updatecommands",
      "compatibility": {
        "Firefox": ""
      },
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>"
    },
    "window.visualviewport": {
      "url": "$MDN_URL$/web/api/window/visualviewport",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "61",
        "Edge": "79",
        "Opera": "48",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<p>The <strong><code>visualViewport</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/VisualViewport\"><code>VisualViewport</code></a> object\nrepresenting the visual viewport for a given window.</p>"
    },
    "window.webkitconvertpointfromnodetopage": {
      "url": "$MDN_URL$/web/api/window/webkitconvertpointfromnodetopage",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>Given a <a href=\"$MDN_URL$/Web/API/WebKitPoint\" ><code>Point</code></a> specified in a particular DOM <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>'s\ncoordinate system, the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> method\n<code><strong>convertPointFromNodeToPage()</strong></code> returns a <code>Point</code>\nwhich specifies the same position in the page's coordinate system. This method is\nnon-standard and <em>should not be used</em>.</p>\n<div class=\"warning notecard\">\n<p>Please review the <a href=\"#browser_compatibility\">Browser compatibility</a> section before using this method,\nas it's not widely supported (nor is the <a href=\"$MDN_URL$/Web/API/WebKitPoint\" ><code>Point</code></a> object it uses).</p>\n</div>",
      "parameters": {
        "node": "The <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> in whose coordinate system the <code>Point</code> specified by <code>nodePoint</code> is described.",
        "nodePoint": "A <a href=\"$MDN_URL$/Web/API/WebKitPoint\" ><code>Point</code></a> object describing a point in <code>node</code> 's coordinate system; this point will be converted to the page's coordinate system."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WebKitPoint\" data-flaw-src=\"{{domxref(\"Point\")}}\"><code>Point</code></a> object specifying a point in the page's coordinate system.</p>"
    },
    "window.webkitconvertpointfrompagetonode": {
      "url": "$MDN_URL$/web/api/window/webkitconvertpointfrompagetonode",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>Given a <a href=\"$MDN_URL$/Web/API/WebKitPoint\" ><code>Point</code></a> specified in the page's coordinate system, the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> method <strong><code>convertPointFromPageToNode()</code></strong>\nreturns a <code>Point</code> object specifying the same location in the coordinate\nsystem of the specified DOM <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a>.</p>\n<div class=\"warning notecard\">\n<p>Please review the <a href=\"#browser_compatibility\">Browser compatibility</a> section before using this method,\nas it's not widely supported (nor is the <a href=\"$MDN_URL$/Web/API/WebKitPoint\" ><code>Point</code></a> object it uses).</p>\n</div>",
      "parameters": {
        "node": "The <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> into whose coordinate system the point is to be converted.",
        "pagePoint": "A <a href=\"$MDN_URL$/Web/API/WebKitPoint\" ><code>Point</code></a> object specifying a point in the coordinate system of the page, which is to be converted into the node's coordinate system."
      },
      "returns": "<p>A <code>Point</code> object describing the specified location in the node's coordinate\n  system.</p>"
    },
    "window.window": {
      "url": "$MDN_URL$/web/api/window/window",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>window</code></strong> property of a <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> object points to the window object itself.</span> Thus, the following expressions all return the same window object:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>window.window\nwindow.window.window\nwindow.window.window.window\n// ...\n</code></pre></div>\n<p>In web pages, the window object is also a <em>global object</em>. This means:</p>\n<ol>\n<li>global variables of your script are in fact properties of <code>window</code>:\n<div class=\"code-example\"><pre class=\"brush:js notranslate\"><code>var global = {data: 0};\nalert(global === window.global); // displays \"true\"\n</code></pre></div>\n</li>\n<li>you can access built-in properties of the window object without having to type <code>window.</code> prefix:\n<div class=\"code-example\"><pre class=\"brush:js notranslate\"><code>setTimeout(\"alert('Hi!')\", 50); // equivalent to using window.setTimeout.\nalert(window === window.window); // displays \"true\"\n</code></pre></div>\n</li>\n</ol>\n<p>The point of having the <code>window</code> property refer to the object itself, was likely to make it easy to refer to the global object. Otherwise, you'd have to do a manual <code>var window = this;</code> assignment at the top of your script.</p>\n<p>Another reason, is that without this property you wouldn't be able to write, for example, \"<a href=\"$MDN_URL$/Web/API/Window/open\" ><code>window.open('http://google.com/')</code></a>\". You'd have to use \"open('http://google.com/')\" instead.</p>\n<p>Yet another reason to use this property, is for libraries which wish to offer OOP-versions, and non-OOP versions (especially JavaScript modules). For example, if we refer to \"this.window.location.href\", a <a href=\"$MDN_URL$/Mozilla/JavaScript_code_modules\" class=\"page-not-created\"  data-flaw=\"link1\">JavaScript module</a> could define a property called \"window\" inside of a class it defined (since no global \"window\" variable exists for it by default) which could be created after passing in a window object to the module class' constructor.  Thus, \"this.window\" inside of its functions would refer to that window object. In the non-namespaced version, \"this.window\" would refer back to \"window\", and also be able to readily get the document location. Another advantage, is that the objects of such a class (even if the class were defined outside of a module) could change their reference to the window at will, they would not be able to do this if they had hard-coded a reference to \"window\". The default in the class could still be set as the current window object.</p>"
    },
    "windowclient": {
      "url": "$MDN_URL$/web/api/windowclient",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "42",
        "ChromeAndroid": "42",
        "Edge": "17",
        "Firefox": "44",
        "Safari": "11.1",
        "SafariIOS": "11.3"
      },
      "doc": "<p>The <code>WindowClient</code> interface of the <a href=\"$MDN_URL$/Web/API/Service_Worker_API\" data-flaw=\"link1\">ServiceWorker API</a> represents the scope of a service worker client that is a document in a browsing context, controlled by an active worker. The service worker client independently selects and uses a service worker for its own loading and sub-resources.</p>"
    },
    "windowclient.focus": {
      "url": "$MDN_URL$/web/api/windowclient/focus",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "42",
        "ChromeAndroid": "42",
        "Edge": "17",
        "Firefox": "44",
        "Safari": "11.1",
        "SafariIOS": "11.3"
      },
      "doc": "<p>The <strong><code>focus()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WindowClient\"><code>WindowClient</code></a>\ninterface gives user input focus to the current client and returns a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to the existing\n<a href=\"$MDN_URL$/Web/API/WindowClient\"><code>WindowClient</code></a>.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to the existing <a href=\"$MDN_URL$/Web/API/WindowClient\"><code>WindowClient</code></a>.</p>"
    },
    "windowclient.focused": {
      "url": "$MDN_URL$/web/api/windowclient/focused",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "42",
        "ChromeAndroid": "42",
        "Edge": "17",
        "Firefox": "44",
        "Safari": "11.1",
        "SafariIOS": "11.3"
      },
      "doc": "<p>The <strong><code>focused</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WindowClient\"><code>WindowClient</code></a> interface is a boolean value that indicates whether\nthe current client has focus.</p>"
    },
    "windowclient.navigate": {
      "url": "$MDN_URL$/web/api/windowclient/navigate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "17",
        "Firefox": "44",
        "Safari": "11.1",
        "SafariIOS": "11.3"
      },
      "doc": "<p>The <strong><code>navigate()</code></strong> method of the <a href=\"$MDN_URL$/Web/API/WindowClient\"><code>WindowClient</code></a>\ninterface loads a specified URL into a controlled client page then returns a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to the existing <a href=\"$MDN_URL$/Web/API/WindowClient\"><code>WindowClient</code></a>.</p>",
      "parameters": {
        "url": "The location to navigate to."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to the existing <a href=\"$MDN_URL$/Web/API/WindowClient\"><code>WindowClient</code></a>.</p>"
    },
    "windowclient.visibilitystate": {
      "url": "$MDN_URL$/web/api/windowclient/visibilitystate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "42",
        "ChromeAndroid": "42",
        "Edge": "17",
        "Firefox": "44",
        "Safari": "11.1",
        "SafariIOS": "11.3"
      },
      "doc": "<p>The <strong><code>visibilityState</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WindowClient\"><code>WindowClient</code></a> interface indicates the visibility of the current client.\nThis value can be one of <code>\"hidden\"</code>, <code>\"visible\"</code>, or\n<code>\"prerender\"</code>.</p>"
    },
    "windoweventhandlers": {
      "url": "$MDN_URL$/web/api/windoweventhandlers",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>WindowEventHandlers</code></strong> mixin describes the event handlers common to several interfaces like <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>, or <a href=\"$MDN_URL$/Web/API/HTMLBodyElement\"><code>HTMLBodyElement</code></a> and <a href=\"$MDN_URL$/Web/API/HTMLFrameSetElement\"><code>HTMLFrameSetElement</code></a>. Each of these interfaces can implement additional specific event handlers.</p>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: <code>WindowEventHandlers</code> is a mixin and not an interface; you can't actually create an object of type <code>WindowEventHandlers</code>.</p>\n</div>"
    },
    "windoweventhandlers.onafterprint": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onafterprint",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "63",
        "ChromeAndroid": "63",
        "Edge": "",
        "Firefox": "6",
        "IE": "",
        "Opera": "50",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<p>The <code><strong>onafterprint</strong></code> property of the\n<a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> for\nprocessing <code><a href=\"$MDN_URL$/Web/API/Window/afterprint_event\" >afterprint</a></code> events for the current window. These events are\nraised after the user prints, or if they abort the print dialog.</p>\n<p>The <code><a href=\"$MDN_URL$/Web/API/Window/beforeprint_event\" >beforeprint</a></code> and <code>afterprint</code> events allow pages to change\ntheir content before printing starts (perhaps to remove a banner, for example) and then\nrevert those changes after printing has completed. In general, you should prefer the use\nof\na <code><a href=\"$MDN_URL$/Web/CSS/Media_Queries/Using_media_queries#media_types\" data-flaw=\"link1\">@media print</a></code>\nCSS at-rule, but it may be necessary to use these events in some cases.</p>"
    },
    "windoweventhandlers.onbeforeprint": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onbeforeprint",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "63",
        "ChromeAndroid": "63",
        "Edge": "",
        "Firefox": "6",
        "IE": "",
        "Opera": "50",
        "Safari": "13",
        "SafariIOS": "13"
      },
      "doc": "<p>The <code><strong>onbeforeprint</strong></code> property of the\n<a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> for\nprocessing <code><a href=\"$MDN_URL$/Web/API/Window/beforeprint_event\" >beforeprint</a></code> events for the current window. These events are\nraised before the print dialog window is opened.</p>\n<p>The <code>beforeprint</code> and <code><a href=\"$MDN_URL$/Web/API/Window/afterprint_event\" >afterprint</a></code> events allow pages to change\ntheir content before printing starts (perhaps to remove a banner, for example) and then\nrevert those changes after printing has completed. In general, you should prefer the use\nof an\n<code><a href=\"$MDN_URL$/Web/CSS/Media_Queries/Using_media_queries#media_types\" data-flaw=\"link1\">@media print</a></code>\nCSS at-rule, but it may be necessary to use these events in some cases.</p>"
    },
    "windoweventhandlers.onbeforeunload": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onbeforeunload",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "12",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>onbeforeunload</strong></code> property of the\n<a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> for\nprocessing <code><a href=\"$MDN_URL$/Web/API/Window/beforeunload_event\" >beforeunload</a></code> events. These events fire when a window is about to\n<code><a href=\"$MDN_URL$/Web/API/Window/unload_event\" >unload</a></code> its resources. At this point, the document is still visible and the\nevent is still cancelable.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> To combat unwanted pop-ups, some browsers don't display\nprompts created in <code>beforeunload</code> event handlers unless the page has been\ninteracted with. Moreover, some don't display them at all.</p>\n</div>\n<div class=\"notecard note\">\n<p><strong>Note</strong>: You shouldn't use the\n<code><a href=\"$MDN_URL$/Web/API/Window/beforeunload_event\">beforeunload</a></code>\nevent with <code>sendBeacon()</code>. See the\n<code><a href=\"$MDN_URL$/Web/API/Navigator/sendBeacon\">Navigator.sendBeacon()</a></code>\npage for more details and best practices.</p>\n</div>"
    },
    "windoweventhandlers.onhashchange": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onhashchange",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "5",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.6",
        "IE": "8",
        "Opera": "10",
        "Safari": "5",
        "SafariIOS": "5"
      },
      "doc": "<p>The <code><strong>WindowEventHandlers.onhashchange</strong></code> property of the\n<a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> for\nprocessing\n<code><a href=\"$MDN_URL$/Web/API/Window/hashchange_event\">hashchange</a></code>\nevents.</p>\n<p>The <code>hashchange</code> event fires when a window's hash changes (see\n<a href=\"$MDN_URL$/Web/API/Window/location\"><code>Window.location</code></a> and <a href=\"$MDN_URL$/Web/API/HTMLAnchorElement/hash\"><code>HTMLAnchorElement.hash</code></a>).</p>",
      "parameters": {
        "funcRef": "A reference to a function."
      }
    },
    "windoweventhandlers.onlanguagechange": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onlanguagechange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "37",
        "ChromeAndroid": "37",
        "Edge": "79",
        "Firefox": "32",
        "Opera": "24",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<div> <div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>onlanguagechange</strong></code> property of the\n<a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> for\nprocessing <code><a href=\"$MDN_URL$/Web/API/Window/languagechange_event\" >languagechange</a></code> events.</p>\n<p>These events are received by the object implementing this interface, usually a\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a>, an <a href=\"$MDN_URL$/Web/API/HTMLBodyElement\"><code>HTMLBodyElement</code></a>, or an\n<a href=\"$MDN_URL$/Web/API/HTMLIFrameElement\"><code>HTMLIFrameElement</code></a>. Such an event is sent by the browser to inform that\nthe preferred languages list has been updated. The list is accessible via\n<a href=\"$MDN_URL$/Web/API/Navigator/languages\"><code>Navigator.languages</code></a>.</p>"
    },
    "windoweventhandlers.onmessage": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onmessage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "60",
        "ChromeAndroid": "60",
        "Edge": "",
        "Firefox": "9",
        "IE": "8",
        "Opera": "47",
        "Safari": "4",
        "SafariIOS": "4"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <strong><code>onmessage</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> called\nwhenever an object receives a <code><a href=\"$MDN_URL$/Web/API/BroadcastChannel/message_event\" >message</a></code> event.</p>"
    },
    "windoweventhandlers.onmessageerror": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onmessageerror",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "60",
        "ChromeAndroid": "60",
        "Edge": "18",
        "Firefox": "57",
        "Opera": "47"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>onmessageerror</strong></code> event handler\nof the <a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> interface is an\n<a href=\"$MDN_URL$/Web/API/EventListener\"><code>EventListener</code></a>, called whenever an <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> of type\n<code>messageerror</code> is fired on a window—that is, when it receives a message\nthat cannot be <a href=\"$MDN_URL$/Glossary/Deserialization\">deserialized</a>.</span></p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "windoweventhandlers.onpopstate": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onpopstate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "5",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "4",
        "IE": "10",
        "Opera": "11.5",
        "Safari": "5",
        "SafariIOS": "4.2"
      },
      "doc": "<p>The <strong><code>onpopstate</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> for\nprocessing <code><a href=\"$MDN_URL$/Web/API/Window/popstate_event\">popstate</a></code>\nevents on the window.</p>\n<p>A <code>popstate</code> event is dispatched to the window each time the active history\nentry changes between two history entries for the same document. If the activated\nhistory entry was created by a call to <code>history.pushState()</code>, or was affected\nby a call to <code>history.replaceState()</code>, the <code>popstate</code> event's\n<code>state</code> property contains a copy of the history entry's state object.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: Calling <code>history.pushState()</code> or\n<code>history.replaceState()</code> won't trigger a <code>popstate</code> event. The\n<code>popstate</code> event is only triggered by performing a browser action, such as\nclicking on the back button (or calling <code>history.back()</code> in JavaScript),\nwhen navigating between two history entries for the same document.</p>\n</div>"
    },
    "windoweventhandlers.onrejectionhandled": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onrejectionhandled",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "79",
        "Firefox": "69",
        "Opera": "36",
        "Safari": "11",
        "SafariIOS": "11.3"
      },
      "doc": "<p>The <strong><code>onrejectionhandled</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> for\nprocessing <code><a href=\"$MDN_URL$/Web/API/Window/rejectionhandled_event\" >rejectionhandled</a></code> events. These events are raised when\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>s are rejected.</p>"
    },
    "windoweventhandlers.onstorage": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onstorage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "15",
        "Firefox": "45",
        "IE": "9",
        "Opera": "15",
        "Safari": "4",
        "SafariIOS": "4"
      },
      "doc": "<p>The <strong><code>onstorage</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is an <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> for\nprocessing <code><a href=\"$MDN_URL$/Web/API/Window/storage_event\">storage</a></code>\nevents.</p>\n<p>The <code>storage</code> event fires when a storage area has been changed in the\ncontext of another document.</p>"
    },
    "windoweventhandlers.onunhandledrejection": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onunhandledrejection",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "49",
        "ChromeAndroid": "49",
        "Edge": "79",
        "Firefox": "69",
        "Opera": "36",
        "Safari": "11",
        "SafariIOS": "11.3"
      },
      "doc": "<p>The <strong><code>onunhandledrejection</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> for\nprocessing <code><a href=\"$MDN_URL$/Web/API/Window/unhandledrejection_event\" >unhandledrejection</a></code> events. These events are raised for unhandled\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> rejections.</p>"
    },
    "windoweventhandlers.onunload": {
      "url": "$MDN_URL$/web/api/windoweventhandlers/onunload",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>onunload</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/WindowEventHandlers\"><code>WindowEventHandlers</code></a> mixin is the <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> for\nprocessing <code><a href=\"$MDN_URL$/Web/API/Window/unload_event\" >unload</a></code> events. These events fire when the window is unloading\nits content and resources. The resource removal is processed <em>after</em> the\n<code>unload</code> event occurs.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Browsers equipped with pop-up blockers will ignore all\n<a href=\"$MDN_URL$/Web/API/Window/open\"><code>Window.open()</code></a> method calls in <code>onunload</code> event handler\nfunctions.</p>\n</div>\n<div class=\"notecard warning\">\n<p>The <code>onunload</code> (and the\n<code><a href=\"$MDN_URL$/Web/API/Window/unload_event\">unload</a></code> event\nitself) are not the right features to use with\n<code><a href=\"$MDN_URL$/Web/API/Navigator/sendBeacon\">sendBeacon()</a></code>.\nInstead for\n<code><a href=\"$MDN_URL$/Web/API/Navigator/sendBeacon\">sendBeacon()</a>,</code> use\nthe\n<code><a href=\"$MDN_URL$/Web/API/Document/visibilitychange_event\">visibilitychange</a></code> and\n<code><a href=\"$MDN_URL$/Web/API/Window/pagehide_event\">pagehide</a></code> events.\nSee discussion comments in the blog post <a href=\"https://volument.com/blog/sendbeacon-is-broken#comments\" class=\"external\" rel=\" noopener\">Beacon API is\nbroken</a>.</p>\n</div>"
    },
    "windoworworkerglobalscope": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>WindowOrWorkerGlobalScope</code></strong> mixin describes several features common to the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> and <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interfaces.</span> Each of these interfaces can, of course, add more features in addition to the ones listed below.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: <code>WindowOrWorkerGlobalScope</code> is a mixin and not an interface; you can't actually create an object of type <code>WindowOrWorkerGlobalScope</code>.</p>\n</div>"
    },
    "windoworworkerglobalscope.atob": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/atob",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Opera": "10.5",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>WindowOrWorkerGlobalScope.atob()</code></strong> function decodes a\nstring of data which has been encoded using <a href=\"$MDN_URL$/Glossary/Base64\">Base64</a> encoding. You can use\nthe <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/btoa\" ><code>btoa()</code></a> method to encode and transmit\ndata which may otherwise cause communication problems, then transmit it and use the\n<code>atob()</code> method to decode the data again. For example, you can encode,\ntransmit, and decode control characters such as ASCII values 0 through 31.</p>\n<p>For use with Unicode or UTF-8 strings, see the note on \"Unicode strings\" in the page\nfor <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/btoa\" ><code>btoa()</code></a>.</p>",
      "parameters": {
        "encodedData": "A <a href=\"$MDN_URL$/Web/API/DOMString/Binary\">binary string</a> contains an base64 encoded data."
      },
      "returns": "<p>An ASCII string containing decoded data from <code><var>encodedData</var></code>.</p>",
      "throws": {
        "DOMException (name: InvalidCharacterError)": "Throws if <code><var>encodedData</var></code> is not valid base64."
      }
    },
    "windoworworkerglobalscope.btoa": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/btoa",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Opera": "10.5",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>WindowOrWorkerGlobalScope.btoa()</strong></code> method creates a\n<a href=\"$MDN_URL$/Glossary/Base64\">Base64</a>-encoded ASCII string from a <a href=\"$MDN_URL$/Web/API/DOMString/Binary\">binary string</a> (i.e., a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> object in which each character in the string is treated as a byte\nof binary data).</p>\n<p>You can use this method to encode data which may otherwise cause communication\nproblems, transmit it, then use the <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/atob\" ><code>atob()</code></a> method to decode the data again. For example, you can encode control\ncharacters such as ASCII values 0 through 31.</p>",
      "parameters": {
        "stringToEncode": "The <a href=\"$MDN_URL$/Web/API/DOMString/Binary\">binary string</a> to encode."
      },
      "returns": "<p>An ASCII string containing the Base64 representation of\n  <code><var>stringToEncode</var></code>.</p>",
      "throws": {
        "InvalidCharacterError": "The string contained a character that did not fit in a single byte. See \"Unicode strings\" below for more detail."
      }
    },
    "windoworworkerglobalscope.caches": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/caches",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "40",
        "ChromeAndroid": "",
        "Edge": "79",
        "Firefox": "42",
        "SafariIOS": ""
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>caches</strong></code> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> interface returns the\n<a href=\"$MDN_URL$/Web/API/CacheStorage\"><code>CacheStorage</code></a> object associated with the current context. This object\nenables functionality such as storing assets for offline use, and generating custom\nresponses to requests.</p>"
    },
    "windoworworkerglobalscope.clearinterval": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/clearinterval",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "4",
        "Safari": "4",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>clearInterval()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> mixin cancels a timed, repeating action which\nwas previously established by a call to\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/setInterval\" ><code>setInterval()</code></a>.</p>",
      "parameters": {
        "intervalID": "The identifier of the repeated action you want to cancel. This ID was returned by the corresponding call to <code>setInterval()</code> ."
      },
      "returns": "<p><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a></p>"
    },
    "windoworworkerglobalscope.cleartimeout": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/cleartimeout",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "45",
        "ChromeAndroid": "45",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "4",
        "Safari": "4",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>clearTimeout()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> mixin cancels a timeout previously established\nby calling <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/setTimeout\" ><code>setTimeout()</code></a>.</p>",
      "parameters": {
        "timeoutID": "The identifier of the timeout you want to cancel. This ID was returned by the corresponding call to <code>setTimeout()</code> ."
      }
    },
    "windoworworkerglobalscope.createimagebitmap": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/createimagebitmap",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "50",
        "ChromeAndroid": "50",
        "Edge": "79",
        "Firefox": "42",
        "Opera": ""
      },
      "doc": "<p>The <code><strong>createImageBitmap()</strong></code> method creates a bitmap from a\ngiven source, optionally cropped to contain only a portion of that source. The method\nexists on the global scope in both windows and workers. It accepts a variety of\ndifferent image sources, and returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves to an\n<a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a>.</p>",
      "parameters": {
        "image": "An image source, which can be an <a href=\"$MDN_URL$/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> , SVG <a href=\"$MDN_URL$/Web/SVG/Element/image\"><code>&lt;image&gt;</code></a> , <a href=\"$MDN_URL$/Web/HTML/Element/video\"><code>&lt;video&gt;</code></a> , <a href=\"$MDN_URL$/Web/HTML/Element/canvas\"><code>&lt;canvas&gt;</code></a> , <a href=\"$MDN_URL$/Web/API/HTMLImageElement\"><code>HTMLImageElement</code></a> , <a href=\"$MDN_URL$/Web/API/SVGImageElement\"><code>SVGImageElement</code></a> , <a href=\"$MDN_URL$/Web/API/HTMLVideoElement\"><code>HTMLVideoElement</code></a> , <a href=\"$MDN_URL$/Web/API/HTMLCanvasElement\"><code>HTMLCanvasElement</code></a> ,  <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a> , <a href=\"$MDN_URL$/Web/API/ImageData\"><code>ImageData</code></a> , <a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> , or <a href=\"$MDN_URL$/Web/API/OffscreenCanvas\"><code>OffscreenCanvas</code></a> object.",
        "sx": "The x coordinate of the reference point of the rectangle from which the <code>ImageBitmap</code> will be extracted.",
        "sy": "The y coordinate of the reference point of the rectangle from which the <code>ImageBitmap</code> will be extracted.",
        "sw": "The width of the rectangle from which the <code>ImageBitmap</code> will be extracted. This value can be negative.",
        "sh": "The height of the rectangle from which the <code>ImageBitmap</code> will be extracted. This value can be negative.",
        "options": "An object that sets options for the image's extraction. The available options are: <ul> <li><code>imageOrientation</code>: Specifies whether the image should be presented as is or flipped vertically. Either <code>none</code> (default) or <code>flipY</code>.</li> <li><code>premultiplyAlpha</code>: Specifies whether the bitmap's color channels should be premultiplied by the alpha channel. One of <code>none</code>, <code>premultiply</code>, or <code>default</code> (default).</li> <li><code>colorSpaceConversion</code>: Specifies whether the image should be decoded using color space conversion. Either <code>none</code> or <code>default</code> (default). The value <code>default</code> indicates that implementation-specific behavior is used.</li> <li><code>resizeWidth</code>: A long integer that indicates the output width.</li> <li><code>resizeHeight</code>: A long integer that indicates the output height.</li> <li><code>resizeQuality</code>: Specifies the algorithm to be used for resizing the input to match the output dimensions. One of <code>pixelated</code>, <code>low</code> (default), <code>medium</code>, or <code>high</code>.</li> </ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> which resolves to an <a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> object\n  containing bitmap data from the given rectangle.</p>"
    },
    "windoworworkerglobalscope.crossoriginisolated": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/crossoriginisolated",
      "status": [
        "Experimental"
      ],
      "compatibility": {
        "Chrome": "87",
        "ChromeAndroid": "87",
        "Edge": "87",
        "Firefox": "72",
        "Opera": "73"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>The <code><strong>crossOriginIsolated</strong></code> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> interface returns a boolean value that\nindicates whether a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer\"><code>SharedArrayBuffer</code></a> can be sent via a\n<a href=\"$MDN_URL$/Web/API/Window/postMessage\"><code>Window.postMessage()</code></a> call.</p>\n<p>This value is dependant on any <a href=\"$MDN_URL$/Web/HTTP/Headers/Cross-Origin-Opener-Policy\"><code>Cross-Origin-Opener-Policy</code></a> and\n<a href=\"$MDN_URL$/Web/HTTP/Headers/Cross-Origin-Embedder-Policy\"><code>Cross-Origin-Embedder-Policy</code></a> headers present in the response.</p>"
    },
    "windoworworkerglobalscope.fetch": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/fetch",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "42",
        "ChromeAndroid": "42",
        "Edge": "14",
        "Firefox": "39",
        "Opera": "29",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>fetch()</strong></code> method of the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> mixin starts the process of fetching a\nresource from the network, returning a promise which is fulfilled once the response is\navailable.</span> The promise resolves to the <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> object\nrepresenting the response to your request. The promise <em>does not</em> reject on HTTP\nerrors — it only rejects on network errors. You must use <code>then</code> handlers to\ncheck for HTTP errors.</p>\n<p><code>WindowOrWorkerGlobalScope</code> is implemented by both <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> and\n<a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a>, which means that the <code>fetch()</code> method is\navailable in pretty much any context in which you might want to fetch resources.</p>\n<p>A <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/fetch\"  aria-current=\"page\"><code>fetch()</code></a> promise only rejects when a\nnetwork error is encountered (which is usually when there’s a permissions issue or\nsimilar). A <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/fetch\"  aria-current=\"page\"><code>fetch()</code></a> promise <em>does\nnot</em> reject on HTTP errors (<code>404</code>, etc.). Instead, a\n<code>then()</code> handler must check the <a href=\"$MDN_URL$/Web/API/Response/ok\"><code>Response.ok</code></a> and/or\n<a href=\"$MDN_URL$/Web/API/Response/status\"><code>Response.status</code></a> properties.</p>\n<p>The <code>fetch()</code> method is controlled by the <code>connect-src</code> directive\nof <a href=\"$MDN_URL$/Web/HTTP/Headers/Content-Security-Policy\">Content Security Policy</a>\nrather than the directive of the resources it's retrieving.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: The <code>fetch()</code> method's parameters are identical to\nthose of the <a href=\"$MDN_URL$/Web/API/Request/Request\" ><code>Request()</code></a> constructor.</p>\n</div>",
      "parameters": {
        "resource": "This defines the resource that you wish to fetch. This can either be: <ul> <li>A string or any other object with a <a href=\"$MDN_URL$/MDN/Contribute/Howto/Write_an_API_reference/Information_contained_in_a_WebIDL_file#stringifiers\">stringifier</a> — including a <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> object — that provides the URL of the resource you want to fetch.</li> <li>A <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> object.</li> </ul>",
        "init": "An object containing any custom settings that you want to apply to the request. The possible options are:<br> <dl> <dt><code>method</code></dt> <dd>The request method, e.g., <code>GET</code>, <code>POST</code>. Note that the <a href=\"$MDN_URL$/Web/HTTP/Headers/Origin\"><code>Origin</code></a> header is not set on Fetch requests with a method of <a href=\"$MDN_URL$/Web/HTTP/Methods/HEAD\"><code>HEAD</code></a> or <a href=\"$MDN_URL$/Web/HTTP/Methods/GET\"><code>GET</code></a>.<br> (This behavior was corrected in Firefox 65 — see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1508661\" class=\"external\" rel=\" noopener\">bug 1508661</a>).</dd> <dt><code>headers</code></dt> <dd>Any headers you want to add to your request, contained within a <a href=\"$MDN_URL$/Web/API/Headers\"><code>Headers</code></a> object or an object literal with <a href=\"$MDN_URL$/Web/API/ByteString\"><code>ByteString</code></a> values. Note that <a href=\"$MDN_URL$/Glossary/Forbidden_header_name\">some names are forbidden</a>.</dd> <dt><code>body</code></dt> <dd>Any body that you want to add to your request: this can be a <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>, <a href=\"$MDN_URL$/Web/API/BufferSource\"><code>BufferSource</code></a>, <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a>, <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>, <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a>, or <a href=\"$MDN_URL$/Web/API/ReadableStream\"><code>ReadableStream</code></a> object. Note that a request using the <code>GET</code> or <code>HEAD</code> method cannot have a body.</dd> <dt><code>mode</code></dt> <dd>The mode you want to use for the request, e.g., <code>cors</code>, <code>no-cors</code>, or <code>same-origin</code>.</dd> <dt><code>credentials</code></dt> <dd> Controls what browsers do with credentials (<a href=\"$MDN_URL$/Web/HTTP/Cookies\">cookies</a>, <a href=\"$MDN_URL$/Web/HTTP/Authentication\">HTTP authentication</a> entries, and TLS client certificates). Must be one of the following strings:<br> <dl> <dt><code>omit</code></dt> <dd>Tells browsers to exclude credentials from the request, and ignore any credentials sent back in the response (e.g., any <a href=\"$MDN_URL$/Web/HTTP/Headers/Set-Cookie\"><code>Set-Cookie</code></a> header).</dd> <dt><code>same-origin</code></dt> <dd>Tells browsers to include credentials with requests to same-origin URLs, and use any credentials sent back in responses from same-origin URLs.</dd> <dt><code>include</code></dt> <dd>Tells browsers to include credentials in both same- and cross-origin requests, and always use any credentials sent back in responses. <div class=\"notecard note\"> <h4 id=\"note\">Note</h4> Credentials may be included in simple and \"final\" cross-origin requests, but should not be included in <a href=\"$MDN_URL$/Web/HTTP/CORS#preflight_requests_and_credentials\">CORS preflight requests</a>.<br> </div> </dd> </dl> </dd> <dt><code>cache</code></dt> <dd>A string indicating how the request will interact with the browser’s <a href=\"$MDN_URL$/Web/HTTP/Caching\">HTTP cache</a>. The possible values, <code>default</code>, <code>no-store</code>, <code>reload</code>, <code>no-cache</code>, <code>force-cache</code>, and <code>only-if-cached</code>, are documented in the article for the <a href=\"$MDN_URL$/Web/API/Request/cache\" ><code>cache</code></a> property of the <a href=\"$MDN_URL$/Web/API/Request\"><code>Request</code></a> object.</dd> <dt><code>redirect</code></dt> <dd>How to handle a <code>redirect</code> response: <ul> <li><code>follow</code>: Automatically follow redirects. Unless otherwise stated the redirect mode is set to <code>follow</code></li> <li><code>error</code>: Abort with an error if a redirect occurs.</li> <li><code>manual</code>: Caller intends to process the response in another context.<br>See <a href=\"https://fetch.spec.whatwg.org/#requests\" class=\"external\" rel=\" noopener\">WHATWG fetch standard</a> for more information.</li> </ul> </dd><dt><code>referrer</code></dt> <dd>A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> specifying the referrer of the request. This can be a same-origin URL, <code>about:client</code>, or an empty string.</dd> <dt><code>referrerPolicy</code></dt> <dd>Specifies the <a href=\"https://w3c.github.io/webappsec-referrer-policy/#referrer-policies\" class=\"external\" rel=\" noopener\">referrer policy</a> to use for the request. May be one of <code>no-referrer</code>, <code>no-referrer-when-downgrade</code>, <code>same-origin</code>, <code>origin</code>, <code>strict-origin</code>, <code>origin-when-cross-origin</code>, <code>strict-origin-when-cross-origin</code>, or <code>unsafe-url</code>.</dd> <dt><code>integrity</code></dt> <dd>Contains the <a href=\"$MDN_URL$/Web/Security/Subresource_Integrity\">subresource integrity</a> value of the request (e.g., <code>sha256-BpfBw7ivV8q2jLiT13fxDYAe2tJllusRSZ273h2nFSE=</code>).</dd> <dt><code>keepalive</code></dt> <dd>The <code>keepalive</code> option can be used to allow the request to outlive the page. Fetch with the <code>keepalive</code> flag is a replacement for the <a href=\"$MDN_URL$/Web/API/Navigator/sendBeacon\"><code>Navigator.sendBeacon()</code></a> API.</dd> <dt><code>signal</code></dt> <dd>An <a href=\"$MDN_URL$/Web/API/AbortSignal\"><code>AbortSignal</code></a> object instance; allows you to communicate with a fetch request and abort it if desired via an <a href=\"$MDN_URL$/Web/API/AbortController\"><code>AbortController</code></a>.</dd> </dl>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a <a href=\"$MDN_URL$/Web/API/Response\"><code>Response</code></a> object.</p>",
      "throws": {
        "AbortError": "The request was aborted due to a call to the <a href=\"$MDN_URL$/Web/API/AbortController\"><code>AbortController</code></a> <a href=\"$MDN_URL$/Web/API/AbortController/abort\" ><code>abort()</code></a> method.",
        "TypeError": "The specified URL string includes user credentials. This information should instead be provided using an <a href=\"$MDN_URL$/Web/HTTP/Headers/Authorization\"><code>Authorization</code></a> header."
      }
    },
    "windoworworkerglobalscope.indexeddb": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/indexeddb",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "24",
        "ChromeAndroid": "25",
        "Edge": "",
        "Firefox": "16",
        "Opera": "15",
        "Safari": "7",
        "SafariIOS": "8"
      },
      "doc": "<p>The <strong><code>indexedDB</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> mixin provides a mechanism for applications to\nasynchronously access the capabilities of indexed databases.</p>"
    },
    "windoworworkerglobalscope.issecurecontext": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/issecurecontext",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "55",
        "ChromeAndroid": "55",
        "Edge": "15",
        "Firefox": "52",
        "Opera": "42",
        "Safari": "11.1",
        "SafariIOS": "11.3"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>isSecureContext</strong></code> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> interface returns a boolean indicating whether\nthe current <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">context is secure</a>\n(<code>true</code>) or not (<code>false</code>).</p>"
    },
    "windoworworkerglobalscope.origin": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/origin",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "79",
        "Firefox": "54",
        "Safari": "11",
        "SafariIOS": "11"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>origin</strong></code> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> interface returns the origin of the global\nscope, serialized as a string.</p>"
    },
    "windoworworkerglobalscope.queuemicrotask": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/queuemicrotask",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "71",
        "ChromeAndroid": "71",
        "Edge": "79",
        "Firefox": "69",
        "Nodejs": "11.0.0",
        "Opera": "58",
        "Safari": "12.1",
        "SafariIOS": "12.2"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>queueMicrotask()</strong></code> method,\nwhich is exposed on the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> or <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> interface,\nqueues a microtask to be executed at a safe time prior to control returning to the\nbrowser's event loop.</span> The microtask is a short function which will run after\nthe current task has completed its work and when there is no other code waiting to be\nrun before control of the execution context is returned to the browser's event loop.</p>\n<p>This lets your code run without interfering with any other, potentially higher\npriority, code that is pending, but before the browser regains control over the\nexecution context, potentially depending on work you need to complete. You can learn\nmore about how to use microtasks and why you might choose to do so in our <a href=\"$MDN_URL$/Web/API/HTML_DOM_API/Microtask_guide\">microtask guide</a>.</p>\n<p>The importance of microtasks comes in its ability to perform tasks asynchronously but\nin a specific order. See <a href=\"$MDN_URL$/Web/API/HTML_DOM_API/Microtask_guide\">Using microtasks in JavaScript\nwith queueMicrotask()</a> for more details.</p>\n<p>Microtasks are especially useful for libraries and frameworks that need to perform\nfinal cleanup or other just-before-rendering tasks.</p>\n<p><code>queueMicrotask()</code> is exposed on the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> mixin.</p>",
      "parameters": {
        "function": "A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Function\"><code>function</code></a> to be executed when the browser engine determines it is safe to call your code. Enqueued microtasks are executed after all pending tasks have completed but before yielding control to the browser's event loop."
      },
      "returns": "<p><code>undefined</code>.</p>"
    },
    "windoworworkerglobalscope.setinterval": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/setinterval",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "30",
        "ChromeAndroid": "30",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "4",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>setInterval()</code></strong> method,\noffered on the <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> and <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> interfaces, repeatedly\ncalls a function or executes a code snippet, with a fixed time delay between each\ncall.</span> It returns an interval ID which uniquely identifies the interval, so you\ncan remove it later by calling <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/clearInterval\" ><code>clearInterval()</code></a>. This method is defined by the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> mixin.</p>",
      "parameters": {
        "func": "A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Function\"><code>function</code></a> to be executed every <code>delay</code> milliseconds.",
        "code": "An optional syntax allows you to include a string instead of a function, which is compiled and executed every <code>delay</code> milliseconds. This syntax is <em>not recommended</em> for the same reasons that make using <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval()</code></a> a security risk.",
        "delay": "The time, in milliseconds (thousandths of a second), the timer should delay in between executions of the specified function or code. See <a href=\"#delay_restrictions\">Delay restrictions</a> below for details on the permitted range of <code>delay</code> values.",
        "arg1, ..., argN": "Additional arguments which are passed through to the function specified by <em>func</em> once the timer expires."
      },
      "returns": "<p>The returned <code>intervalID</code> is a numeric, non-zero value which identifies the\n  timer created by the call to <code>setInterval()</code>; this value can be passed to\n  <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/clearInterval\"><code>WindowOrWorkerGlobalScope.clearInterval()</code></a> to cancel the interval.</p>\n\n<p>It may be helpful to be aware that <code>setInterval()</code> and\n  <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/setTimeout\" title=\"setTimeout()\"><code>setTimeout()</code></a> share the same pool\n  of IDs, and that <code>clearInterval()</code> and\n  <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/clearTimeout\" title=\"clearTimeout()\"><code>clearTimeout()</code></a> can technically\n  be used interchangeably. For clarity, however, you should try to always match them to\n  avoid confusion when maintaining your code.</p>\n\n<div class=\"note notecard\"><strong>Note</strong>: The <code>delay</code> argument is converted to a\n  signed 32-bit integer. This effectively limits <code>delay</code> to 2147483647 ms,\n  since it's specified as a signed integer in the IDL.</div>"
    },
    "windoworworkerglobalscope.settimeout": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/settimeout",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "30",
        "ChromeAndroid": "30",
        "Edge": "",
        "Firefox": "",
        "IE": "4",
        "Opera": "4",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>setTimeout()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> <a href=\"$MDN_URL$/Glossary/Mixin\">mixin</a> sets a timer which executes a function or specified\npiece of code once the timer expires.</p>",
      "parameters": {
        "function": "A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Function\"><code>function</code></a> to be executed after the timer expires.",
        "code": "An alternative syntax that allows you to include a string instead of a function, which is compiled and executed when the timer expires. This syntax is <strong>not recommended</strong> for the same reasons that make using <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/eval\"><code>eval()</code></a> a security risk.",
        "delay": "The time, in milliseconds that the timer should wait before the specified function or code is executed. If this parameter is omitted, a value of 0 is used, meaning execute \"immediately\", or more accurately, the next event cycle. Note that in either case, the actual delay may be longer than intended; see <a href=\"#reasons_for_delays\">Reasons for delays longer than specified</a> below.",
        "arg1, ..., argN": "Additional arguments which are passed through to the function specified by <code><var>function</var></code> ."
      },
      "returns": "<p>The returned <code><var>timeoutID</var></code> is a positive integer value which\n  identifies the timer created by the call to <code>setTimeout()</code>. This value can be\n  passed to <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/clearTimeout\" title=\"clearTimeout()\"><code>clearTimeout()</code></a> to\n  cancel the timeout.</p>\n\n<p>It is guaranteed that a <code><var>timeoutID</var></code> value will never be reused by a subsequent call to\n  <code>setTimeout()</code> or <code>setInterval()</code> on the same object (a window or\n  a worker). However, different objects use separate pools of IDs.</p>"
    },
    "windoworworkerglobalscope.structuredclone": {
      "url": "$MDN_URL$/web/api/windoworworkerglobalscope/structuredclone",
      "doc": "<p>The <strong><code>structuredClone()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> <a href=\"$MDN_URL$/Glossary/Mixin\">mixin</a> deep clones a given value using the <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Structured_clone_algorithm\">structured clone algorithm</a>.</p>",
      "parameters": {
        "value": "The value to be cloned. This can be any  <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Structured_clone_algorithm\">structured-clonable type</a> .",
        "transfer": "A sequence of objects that are <a href=\"$MDN_URL$/Web/API/Transferable\">transferred</a> with value. The ownership of these objects is transfered from the input value to the cloned value that is returned."
      },
      "returns": "<p>The returned <code><var>clonedValue</var></code> is a clone of the original passed\n  <code><var>value</var></code>, with transfered values for items passed in the\n  <code><var>transfer</var></code> array.</p>"
    },
    "worker": {
      "url": "$MDN_URL$/web/api/worker",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "10.6",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>Worker</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers API</a> represents a background task that can be created via script, which can send messages back to its creator.</span> Creating a worker is done by calling the <code>Worker(\"path/to/worker/script\")</code> constructor.</p>\n<p>Workers may themselves spawn new workers, as long as those workers are hosted at the same <a href=\"$MDN_URL$/Web/Security/Same-origin_policy\">origin</a> as the parent page. (Note: <a href=\"https://bugs.webkit.org/show_bug.cgi?id=22723\" class=\"external\" rel=\" noopener\">nested workers are not yet implemented in WebKit</a>).</p>\n<p><a href=\"$MDN_URL$/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\" >Not all interfaces and functions are available</a> to scripts inside a <code>Worker</code>. Workers may use <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> for network communication, but its <code>responseXML</code> and <code>channel</code> attributes are always <code>null</code>. (<code><a href=\"$MDN_URL$/Web/API/Fetch_API\">fetch</a></code> is also available, with no such restrictions.)</p>"
    },
    "worker.onerror": {
      "url": "$MDN_URL$/web/api/worker/onerror",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "10.6",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <code><strong>onerror</strong></code> property of the <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> interface represents an <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a>, that is a function to be called when the <code><a href=\"$MDN_URL$/Web/API/Element/error_event\" >error</a></code> event occurs.</p>"
    },
    "worker.onmessage": {
      "url": "$MDN_URL$/web/api/worker/onmessage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "10.6",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <strong><code>onmessage</code></strong> property of the <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> interface represents an <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a>, that is a function to be called when the <code><a href=\"$MDN_URL$/Web/API/BroadcastChannel/message_event\" >message</a></code> event occurs. These events are of type <a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> and will be called when the worker's parent receives a message (i.e. from the <a href=\"$MDN_URL$/Web/API/DedicatedWorkerGlobalScope/postMessage\"><code>DedicatedWorkerGlobalScope.postMessage</code></a> method).</p>\n<p>Note that deserializing the message sent by <a href=\"$MDN_URL$/Web/API/DedicatedWorkerGlobalScope/postMessage\" ><code>postMessage()</code></a> blocks the thread receiving it.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: The message payload is available in the <code><a href=\"$MDN_URL$/Web/API/BroadcastChannel/message_event\" >message</a></code> event's <code>data</code> property.</p>\n</div>"
    },
    "worker.onmessageerror": {
      "url": "$MDN_URL$/web/api/worker/onmessageerror",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "60",
        "ChromeAndroid": "60",
        "Edge": "18",
        "Firefox": "57",
        "Opera": "47"
      },
      "doc": "<p>The <code><strong>onmessageerror</strong></code> event handler of the\n<a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> interface is an <a href=\"$MDN_URL$/Web/API/EventListener\"><code>EventListener</code></a>, called whenever an\n<a href=\"$MDN_URL$/Web/API/MessageEvent\"><code>MessageEvent</code></a> of type <code>messageerror</code> is fired on the\n<code>Worker</code> instance — that is, when it receives a message that cannot be\n<a href=\"$MDN_URL$/Glossary/Deserialization\">deserialized</a>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>"
    },
    "worker.postmessage": {
      "url": "$MDN_URL$/web/api/worker/postmessage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Nodejs": "10.5.0",
        "Opera": "47",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>postMessage()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> interface sends a message to the worker's inner scope. This accepts a single parameter, which is the data to send to the worker. The data may be any value or JavaScript object handled by the <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Structured_clone_algorithm\">structured clone</a> algorithm, which includes cyclical references.</p>\n<p>The <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> <code>postMessage()</code> method delegates to the <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a> <a href=\"$MDN_URL$/Web/API/MessagePort/postMessage\" ><code>postMessage()</code></a> method, which adds a task on the event loop corresponding to the receiving <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a>.</p>\n<p>The <code>Worker</code> can send back information to the thread that spawned it using the <a href=\"$MDN_URL$/Web/API/DedicatedWorkerGlobalScope/postMessage\"><code>DedicatedWorkerGlobalScope.postMessage</code></a> method.</p>",
      "parameters": {
        "message": "The object to deliver to the worker; this will be in the <code>data</code> field in the event delivered to the <a href=\"$MDN_URL$/Web/API/DedicatedWorkerGlobalScope/onmessage\"><code>DedicatedWorkerGlobalScope.onmessage</code></a> handler. This may be any value or JavaScript object handled by the <a href=\"$MDN_URL$/Web/API/Web_Workers_API/Structured_clone_algorithm\">structured clone</a> algorithm, which includes cyclical references.If the <code>message</code>  parameter is <em>not</em> provided, a <code>TypeError</code> will be thrown. If the data to be passed to the worker is unimportant, <code>null</code> or <code>undefined</code> can be passed explicitly.",
        "transfer": "An optional <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Array\">array</a> of <a href=\"$MDN_URL$/Web/API/Transferable\"><code>Transferable</code></a> objects to transfer ownership of. If the ownership of an object is transferred, it becomes unusable in the context it was sent from and becomes available only to the worker it was sent to.Transferable objects are instances of classes like <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> , <a href=\"$MDN_URL$/Web/API/MessagePort\"><code>MessagePort</code></a> or <a href=\"$MDN_URL$/Web/API/ImageBitmap\"><code>ImageBitmap</code></a> objects that can be transferred. <code>null</code> is not an acceptable value for <code>transfer</code> ."
      }
    },
    "worker.terminate": {
      "url": "$MDN_URL$/web/api/worker/terminate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Nodejs": "10.5.0",
        "Opera": "10.6",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <code><strong>terminate()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> interface immediately terminates the <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a>. This does not offer the worker an opportunity to finish its operations; it is stopped at once.</p>"
    },
    "worker.worker": {
      "url": "$MDN_URL$/web/api/worker/worker",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "10.6",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <code><strong>Worker()</strong></code> constructor creates a <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> object that executes the script at the specified URL. This script must obey the <a href=\"$MDN_URL$/Web/Security/Same-origin_policy\"  data-flaw=\"link1\">same-origin policy</a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: that there is a disagreement among browser manufacturers about whether a data URI is of the same origin or not. Though Gecko 10.0 (Firefox 10.0 / Thunderbird 10.0 / SeaMonkey 2.7) and later accept data URIs, that's not the case in all other browsers.</p>\n</div>",
      "parameters": {
        "aURL": "A <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> representing the URL of the script the worker will execute. It must obey the same-origin policy.",
        "options": "An object containing option properties that can be set when creating the object instance. Available properties are as follows: <ul> <li><code>type</code>: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the type of worker to create. The value can be <code>classic</code> or <code>module</code>. If not specified, the default used is <code>classic</code>.</li> <li><code>credentials</code>: A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the type of credentials to use for the worker. The value can be<dfn> <code>omit</code></dfn>, <code><dfn>same-origin</dfn></code>, or <dfn><code>include</code>. If not specified, or if type is <code>classic</code>, the default used is <code>omit</code> (no credentials required).</dfn></li> <li><dfn><code>name</code>: A </dfn><a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying an identifying name for the <a href=\"$MDN_URL$/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a> representing the scope of the worker, which is mainly useful for debugging purposes.</li> </ul>"
      }
    },
    "workerglobalscope": {
      "url": "$MDN_URL$/web/api/workerglobalscope",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "10.6",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <code><strong>WorkerGlobalScope</strong></code> interface of the <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers API</a> is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by <a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> objects — in this case event handlers, the console or the associated <a href=\"$MDN_URL$/Web/API/WorkerNavigator\"><code>WorkerNavigator</code></a> object. Each <code>WorkerGlobalScope</code> has its own event loop.</p>\n<p>This interface is usually specialized by each worker type: <a href=\"$MDN_URL$/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a> for dedicated workers, <a href=\"$MDN_URL$/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a> for shared workers, and <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a> for <a href=\"$MDN_URL$/Web/API/Service_Worker_API\">ServiceWorker</a>. The <code>self</code> property returns the specialized scope for each context.</p>"
    },
    "workerglobalscope.console": {
      "url": "$MDN_URL$/web/api/workerglobalscope/console",
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div>\n<p>The <code><strong>console</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/console\"><code>console</code></a> object providing access to the browser console for the worker.</p>"
    },
    "workerglobalscope.dump": {
      "url": "$MDN_URL$/web/api/workerglobalscope/dump",
      "status": [
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div> <div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<p>The <code><strong>dump()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface allows you to write a message to stdout — i.e. in your terminal, in Firefox only. This is the same as Firefox's <a href=\"$MDN_URL$/Web/API/Window/dump\"><code>window.dump</code></a>, but for workers.</p>"
    },
    "workerglobalscope.importscripts": {
      "url": "$MDN_URL$/web/api/workerglobalscope/importscripts",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "4",
        "IE": "10",
        "Opera": "10.6",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <code><strong>importScripts()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface synchronously imports one or more scripts into the worker's scope.</p>",
      "returns": "<p><em>None.</em></p>",
      "throws": {
        "NetworkError": "Imported scripts were not served with a valid JavaScript MIME type (i.e. <code>text/javascript</code> )."
      }
    },
    "workerglobalscope.location": {
      "url": "$MDN_URL$/web/api/workerglobalscope/location",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "40",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "11.5",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <code><strong>location</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/WorkerLocation\"><code>WorkerLocation</code></a> associated with the worker. It is a specific location object, mostly a subset of the <a href=\"$MDN_URL$/Web/API/Location\"><code>Location</code></a> for browsing scopes, but adapted to workers.</p>"
    },
    "workerglobalscope.navigator": {
      "url": "$MDN_URL$/web/api/workerglobalscope/navigator",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "40",
        "Edge": "17",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "11.5",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <code><strong>navigator</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/WorkerNavigator\"><code>WorkerNavigator</code></a> associated with the worker. It is a specific navigator object, mostly a subset of the <a href=\"$MDN_URL$/Web/API/Navigator\"><code>Navigator</code></a> for browsing scopes, but adapted to workers.</p>"
    },
    "workerglobalscope.onerror": {
      "url": "$MDN_URL$/web/api/workerglobalscope/onerror",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "40",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "11.5",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <strong><code>onerror</code></strong> property of the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface represents an <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> to be called when the <code><a href=\"$MDN_URL$/Web/API/Element/error_event\" >error</a></code> event occurs.</p>"
    },
    "workerglobalscope.onlanguagechange": {
      "url": "$MDN_URL$/web/api/workerglobalscope/onlanguagechange",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "40",
        "Edge": "",
        "Firefox": "74",
        "IE": "",
        "Opera": "11.5",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <strong><code>onlanguagechange</code></strong> property of the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface represents an <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> to be called when the <code><a href=\"$MDN_URL$/Web/API/Window/languagechange_event\" >languagechange</a></code> event occurs.</p>"
    },
    "workerglobalscope.onoffline": {
      "url": "$MDN_URL$/web/api/workerglobalscope/onoffline",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "40",
        "Edge": "79",
        "Firefox": "29",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>onoffline</code></strong> property of the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface represents an <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> to be called when the <code><a href=\"$MDN_URL$/Web/API/Window/offline_event\" >offline</a></code> event occurs.</p>"
    },
    "workerglobalscope.ononline": {
      "url": "$MDN_URL$/web/api/workerglobalscope/ononline",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "40",
        "Edge": "79",
        "Firefox": "29",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>ononline</code></strong> property of the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface represents an <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> to be called when the <code><a href=\"$MDN_URL$/Web/API/Window/online_event\" >online</a></code> event occurs.</p>"
    },
    "workerglobalscope.performance": {
      "url": "$MDN_URL$/web/api/workerglobalscope/performance",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "79",
        "Firefox": "34",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The  <code><strong>performance</strong></code> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/Performance\"><code>Performance</code></a> object\nto be used on the worker.</p>\n<div class=\"note notecard\">\n<p>Not all <a href=\"$MDN_URL$/Web/API/Performance\"><code>Performance</code></a> properties and methods are available to Web\nworkers.</p>\n</div>\n<p>This property is <span  class=\"badge inline readonly\">Read only </span>.</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/Performance\"><code>Performance</code></a> object.</p>"
    },
    "workerglobalscope.self": {
      "url": "$MDN_URL$/web/api/workerglobalscope/self",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "40",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "11.5",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <code><strong>self</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> interface returns a reference to the <code>WorkerGlobalScope</code> itself. Most of the time it is a specific scope like <a href=\"$MDN_URL$/Web/API/DedicatedWorkerGlobalScope\"><code>DedicatedWorkerGlobalScope</code></a>,  <a href=\"$MDN_URL$/Web/API/SharedWorkerGlobalScope\"><code>SharedWorkerGlobalScope</code></a>, or <a href=\"$MDN_URL$/Web/API/ServiceWorkerGlobalScope\"><code>ServiceWorkerGlobalScope</code></a>.</p>"
    },
    "workerlocation": {
      "url": "$MDN_URL$/web/api/workerlocation",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>WorkerLocation</code></strong> interface defines the absolute location of the script executed by the <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a>. Such an object is initialized for each worker and is available via the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope/location\"><code>WorkerGlobalScope.location</code></a> property obtained by calling <code>self.location</code>.</p>\n<p>This interface is only visible from inside a JavaScript script executed in the context of a Web worker.</p>"
    },
    "workerlocation.hash": {
      "url": "$MDN_URL$/web/api/workerlocation/hash",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>hash</code></strong> property of a <a href=\"$MDN_URL$/Web/API/WorkerLocation\"><code>WorkerLocation</code></a> object returns the <a href=\"$MDN_URL$/Web/API/URL/hash\" ><code>hash</code></a> part of the worker’s location.</p>"
    },
    "workerlocation.host": {
      "url": "$MDN_URL$/web/api/workerlocation/host",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>host</code></strong> property of a <a href=\"$MDN_URL$/Web/API/WorkerLocation\"><code>WorkerLocation</code></a> object returns the <a href=\"$MDN_URL$/Web/API/URL/host\" ><code>host</code></a> part of the worker’s location.</p>"
    },
    "workerlocation.hostname": {
      "url": "$MDN_URL$/web/api/workerlocation/hostname",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>hostname</code></strong> property of a <a href=\"$MDN_URL$/Web/API/WorkerLocation\"><code>WorkerLocation</code></a> object returns the <a href=\"$MDN_URL$/Web/API/URL/hostname\" ><code>hostname</code></a> part of the worker’s location.</p>"
    },
    "workerlocation.href": {
      "url": "$MDN_URL$/web/api/workerlocation/href",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>href</code></strong> property of a <a href=\"$MDN_URL$/Web/API/WorkerLocation\"><code>WorkerLocation</code></a> object returns a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the serialized <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> for the worker’s location.</p>"
    },
    "workerlocation.origin": {
      "url": "$MDN_URL$/web/api/workerlocation/origin",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "14",
        "Firefox": "3.5",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>origin</code></strong> property of a <a href=\"$MDN_URL$/Web/API/WorkerLocation\"><code>WorkerLocation</code></a> object returns the worker’s <a href=\"$MDN_URL$/Web/API/URL/origin\" ><code>origin</code></a>.</p>"
    },
    "workerlocation.pathname": {
      "url": "$MDN_URL$/web/api/workerlocation/pathname",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>pathname</code></strong> property of a <a href=\"$MDN_URL$/Web/API/WorkerLocation\"><code>WorkerLocation</code></a> object returns the <a href=\"$MDN_URL$/Web/API/URL/pathname\" ><code>pathname</code></a> part of the worker’s location.</p>"
    },
    "workerlocation.port": {
      "url": "$MDN_URL$/web/api/workerlocation/port",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>port</code></strong> property of a <a href=\"$MDN_URL$/Web/API/WorkerLocation\"><code>WorkerLocation</code></a> object returns the <a href=\"$MDN_URL$/Web/API/URL/port\" ><code>port</code></a> part of the worker’s location.</p>"
    },
    "workerlocation.protocol": {
      "url": "$MDN_URL$/web/api/workerlocation/protocol",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>protocol</code></strong> property of a <a href=\"$MDN_URL$/Web/API/WorkerLocation\"><code>WorkerLocation</code></a> object returns the <a href=\"$MDN_URL$/Web/API/URL/protocol\" ><code>protocol</code></a> part of the worker’s location.</p>"
    },
    "workerlocation.search": {
      "url": "$MDN_URL$/web/api/workerlocation/search",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>search</code></strong> property of a <a href=\"$MDN_URL$/Web/API/WorkerLocation\"><code>WorkerLocation</code></a> object returns the <a href=\"$MDN_URL$/Web/API/URL/search\" ><code>search</code></a> part of the worker’s location.</p>"
    },
    "workerlocation.tostring": {
      "url": "$MDN_URL$/web/api/workerlocation/tostring",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "79",
        "Firefox": "3.5",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>toString()</strong></code> stringifier method of a <a href=\"$MDN_URL$/Web/API/WorkerLocation\"><code>WorkerLocation</code></a> object returns a <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> containing the serialized <a href=\"$MDN_URL$/Web/API/URL\"><code>URL</code></a> for the worker’s location. It is a synonym for <a href=\"$MDN_URL$/Web/API/WorkerLocation/href\"><code>WorkerLocation.href</code></a>.</p>"
    },
    "workernavigator": {
      "url": "$MDN_URL$/web/api/workernavigator",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <code><strong>WorkerNavigator</strong></code> interface represents a subset of the <a href=\"$MDN_URL$/Web/API/Navigator\"><code>Navigator</code></a> interface allowed to be accessed from a <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a>. Such an object is initialized for each worker and is available via the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope/navigator\" ><code>self.navigator</code></a> property.</p>"
    },
    "workernavigator.appcodename": {
      "url": "$MDN_URL$/web/api/workernavigator/appcodename",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "10",
        "SafariIOS": "10"
      },
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The value of the <strong><code>WorkerNavigator.appCodeName</code></strong> property is\nalways \"<code>Mozilla</code>\", in any browser. This property is kept only for\ncompatibility purposes.</p>\n<div class=\"note notecard\"><strong>Note:</strong> Do not rely on this property to return a real\nproduct name. All browsers return \"<code>Mozilla</code>\" as the value of this property.\n</div>"
    },
    "workernavigator.appname": {
      "url": "$MDN_URL$/web/api/workernavigator/appname",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The value of the <strong><code>WorkerNavigator.appName</code></strong> property is always\n\"<code>Netscape</code>\", in any browser. This property is kept only for compatibility\npurposes.</p>\n<div class=\"notecard note\">\n<h4 id=\"note\">Note</h4>\n<p>Do not rely on this property to return a real browser name. All browsers return \"<code>Netscape</code>\" as the value of this property.</p>\n</div>"
    },
    "workernavigator.appversion": {
      "url": "$MDN_URL$/web/api/workernavigator/appversion",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>Returns either \"<code>4.0</code>\" or a string representing version information about\nthe browser.</p>\n<div class=\"notecard note\">\n<h4 id=\"note\">Note</h4>\n<p>Do not rely on this property to return the correct browser version.</p>\n</div>"
    },
    "workernavigator.connection": {
      "url": "$MDN_URL$/web/api/workernavigator/connection",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "61",
        "ChromeAndroid": "38",
        "Edge": "79",
        "Opera": ""
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>WorkerNavigator.connection</strong></code> read-only property returns\na <a href=\"$MDN_URL$/Web/API/NetworkInformation\"><code>NetworkInformation</code></a> object containing information about the system's\nconnection, such as the current bandwidth of the user's device or whether the connection\nis metered. This could be used to select high definition content or low definition\ncontent based on the user's connection.</p>"
    },
    "workernavigator.hardwareconcurrency": {
      "url": "$MDN_URL$/web/api/workernavigator/hardwareconcurrency",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "37",
        "ChromeAndroid": "37",
        "Edge": "15",
        "Firefox": "48",
        "Opera": "24"
      },
      "doc": "<p>The <code><strong>navigator.hardwareConcurrency</strong></code> read-only property\nreturns the number of logical processors available to run threads on the user's\ncomputer.</p>"
    },
    "workernavigator.language": {
      "url": "$MDN_URL$/web/api/workernavigator/language",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "11",
        "Opera": "4",
        "Safari": "10",
        "SafariIOS": "10"
      },
      "doc": "<p>The <strong><code>WorkerNavigator.language</code></strong> read-only property returns\na string representing the preferred language of the user, usually the language of the\nbrowser UI.</p>"
    },
    "workernavigator.languages": {
      "url": "$MDN_URL$/web/api/workernavigator/languages",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "37",
        "ChromeAndroid": "37",
        "Edge": "16",
        "Firefox": "32",
        "Opera": "24",
        "Safari": "10.1",
        "SafariIOS": "10.3"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>WorkerNavigator.languages</strong></code> read-only property\nreturns an array of <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>s representing the user's preferred\nlanguages. The language is described using <a href=\"https://datatracker.ietf.org/doc/html/bcp47\" class=\"external\" rel=\" noopener\">BCP 47</a> language tags. In the returned\narray they are ordered by preference with the most preferred language first.</p>\n<p>The value of <a href=\"$MDN_URL$/Web/API/WorkerNavigator/language\" ><code>navigator.language</code></a> is the\nfirst element of the returned array.</p>\n<p>When its value changes, as the user's preferred languages are changed a\n<code><a href=\"$MDN_URL$/Web/API/Window/languagechange_event\" >languagechange</a></code> event is fired on the <a href=\"$MDN_URL$/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a> object.</p>\n<p>The <code>Accept-Language</code> HTTP header in every HTTP request from the user's\nbrowser uses the same value for the <code>navigator.languages</code> property except for\nthe extra <code>qvalues</code> (quality values) field (e.g. <code>en-US;q=0.8</code>).</p>"
    },
    "workernavigator.locks": {
      "url": "$MDN_URL$/web/api/workernavigator/locks",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "69",
        "ChromeAndroid": "69",
        "Edge": "79",
        "Opera": "56"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p><span class=\"seoSummary\">The <strong><code>locks</code></strong> read-only property of\nthe <a href=\"$MDN_URL$/Web/API/WorkerNavigator\"><code>WorkerNavigator</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/LockManager\"><code>LockManager</code></a>\nobject which provides methods for requesting a new <a href=\"$MDN_URL$/Web/API/Lock\"><code>Lock</code></a> object and\nquerying for an existing <code>Lock</code> object. </span></p>"
    },
    "workernavigator.online": {
      "url": "$MDN_URL$/web/api/workernavigator/online",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "10.6",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>Returns the online status of the browser. The property returns a boolean value, with\n<code>true</code> meaning online and <code>false</code> meaning offline. The property\nsends updates whenever the browser's ability to connect to the network changes. The\nupdate occurs when the user follows links or when a script requests a remote page. For\nexample, the property should return <code>false</code> when users click links soon after\nthey lose internet connection.</p>\n<p>Browsers implement this property differently.</p>\n<p>In Chrome and Safari, if the browser is not able to connect to a local area network\n(LAN) or a router, it is offline; all other conditions return <code>true</code>. So\nwhile you can assume that the browser is offline when it returns a <code>false</code>\nvalue, you cannot assume that a true value necessarily means that the browser can access\nthe internet. You could be getting false positives, such as in cases where the computer\nis running a virtualization software that has virtual ethernet adapters that are always\n\"connected.\" Therefore, if you really want to determine the online status of the\nbrowser, you should develop additional means for checking. To learn more, see the HTML5\nRocks article, <a href=\"https://www.html5rocks.com/en/mobile/workingoffthegrid.html\" data-flaw=\"link1\" class=\"external\" rel=\" noopener\">\nWorking Off the Grid</a>.</p>\n<p>In Firefox and Internet Explorer, switching the browser to offline mode sends a\n<code>false</code> value. Until Firefox 41, all other conditions return a\n<code>true</code> value; testing actual behavior on Nightly 68 on Windows shows that it\nonly looks for LAN connection like Chrome and Safari giving false positives.</p>"
    },
    "workernavigator.permissions": {
      "url": "$MDN_URL$/web/api/workernavigator/permissions",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "43",
        "ChromeAndroid": "43",
        "Edge": "79",
        "Opera": "30"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <code><strong>WorkerNavigator.permissions</strong></code> read-only property\nreturns a <a href=\"$MDN_URL$/Web/API/Permissions\"><code>Permissions</code></a> object that can be used to query and update\npermission status of APIs covered by the <a href=\"$MDN_URL$/Web/API/Permissions_API\">Permissions API</a>.</p>"
    },
    "workernavigator.platform": {
      "url": "$MDN_URL$/web/api/workernavigator/platform",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>Returns a string representing the platform of the browser. The specification allows\nbrowsers to always return the empty string, so don't rely on this property to get a\nreliable answer.</p>"
    },
    "workernavigator.product": {
      "url": "$MDN_URL$/web/api/workernavigator/product",
      "status": [
        "StandardTrack",
        "Deprecated"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "11",
        "Opera": "15",
        "Safari": "10",
        "SafariIOS": "10"
      },
      "doc": "<div> <div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The value of the <strong><code>WorkerNavigator.product</code></strong> property is always\n\"<code>Gecko</code>\", in any browser. This property is kept only for compatibility\npurposes.</p>\n<div class=\"notecard note\">\n<p>Do not rely on this property to return a real product name. All browsers return \"<code>Gecko</code>\" as the value of this property.</p>\n</div>"
    },
    "workernavigator.serial": {
      "url": "$MDN_URL$/web/api/workernavigator/serial",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "89",
        "Edge": "89"
      },
      "doc": "<p class=\"summary\">The <strong><code>serial</code></strong> read-only property of the <a href=\"$MDN_URL$/Web/API/WorkerNavigator\"><code>WorkerNavigator</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/Serial\"><code>Serial</code></a> object which represents the entry point into the <a href=\"$MDN_URL$/Web/API/Web_Serial_API\"><code>Web Serial API</code></a>.</p>\n<p>When getting, the same instance of the <a href=\"$MDN_URL$/Web/API/Serial\"><code>Serial</code></a> object will always be returned.</p>"
    },
    "workernavigator.storage": {
      "url": "$MDN_URL$/web/api/workernavigator/storage",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "55",
        "ChromeAndroid": "55",
        "Edge": "79",
        "Firefox": "57",
        "Opera": "42"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>WorkerNavigator.storage</strong></code>\nread-only property returns the singleton <a href=\"$MDN_URL$/Web/API/StorageManager\"><code>StorageManager</code></a> object used to\naccess the overall storage capabilities of the browser for the current site or app.\nThe returned object lets you examine and configure persistence of data stores and\nlearn approximately how much more space your browser has available for local storage\nuse.</p>"
    },
    "workernavigator.useragent": {
      "url": "$MDN_URL$/web/api/workernavigator/useragent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "4",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "",
        "Safari": "4",
        "SafariIOS": "5"
      },
      "doc": "<p>The <code><strong>WorkerNavigator.userAgent</strong></code> read-only property returns the\nuser agent string for the current browser.</p>\n<div class=\"note notecard\">\n<p>The specification asks browsers to provide as little information via this field as\npossible. Never assume that the value of this property will stay the same in future\nversions of the same browser. Try not to use it at all, or only for current and past\nversions of a browser. New browsers may start using the same UA, or part of it, as an\nolder browser: you really have no guarantee that the browser agent is indeed the one\nadvertised by this property.<br>\n<br>\nAlso keep in mind that users of a browser can change the value of this field if they\nwant (UA spoofing).</p>\n</div>\n<p>Browser identification based on detecting the user agent string is\n<strong>unreliable</strong> and <strong>is not recommended</strong>, as the user agent\nstring is user configurable. For example:</p>\n<ul>\n<li>In Firefox, you can change the preference <code>general.useragent.override</code> in\n<code>about:config</code>. Some Firefox extensions do that; however, this only changes\nthe HTTP header that gets sent, and doesn't affect browser detection performed by\nJavaScript code.</li>\n<li>Opera 6+ allows users to set the browser identification string via a menu.</li>\n<li>Microsoft Internet Explorer uses the Windows registry.</li>\n<li>Safari and iCab allow users to change the browser user agent string to predefined\nInternet Explorer or Netscape strings via a menu.</li>\n</ul>"
    },
    "workernavigator.useragentdata": {
      "url": "$MDN_URL$/web/api/workernavigator/useragentdata",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "90",
        "ChromeAndroid": "90",
        "Edge": "90",
        "Opera": "76"
      },
      "doc": "<p>The <code><strong>userAgentData</strong></code> read-only property of the <a href=\"$MDN_URL$/Web/API/WorkerNavigator\"><code>WorkerNavigator</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/NavigatorUAData\"><code>NavigatorUAData</code></a> object\nwhich can be used to access the <a href=\"$MDN_URL$/Web/API/User-Agent_Client_Hints_API\"><code>User-Agent Client Hints API</code></a>.</p>"
    },
    "worklet": {
      "url": "$MDN_URL$/web/api/worklet",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "65",
        "ChromeAndroid": "65",
        "Edge": "79",
        "Firefox": "76",
        "Opera": "52",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\"><span class=\"seoSummary\">The <strong><code>Worklet</code></strong> interface is a lightweight version of <a href=\"$MDN_URL$/Web/API/Worker\" ><code>Web Workers</code></a> and gives developers access to low-level parts of the rendering pipeline.</span> With Worklets, you can run JavaScript and <a href=\"$MDN_URL$/WebAssembly\">WebAssembly</a> code to do graphics rendering or audio processing where high performance is required.</p>"
    },
    "worklet.addmodule": {
      "url": "$MDN_URL$/web/api/worklet/addmodule",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "65",
        "ChromeAndroid": "65",
        "Edge": "79",
        "Firefox": "76",
        "Opera": "52"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <code><strong>addModule()</strong></code> method of the\n<a href=\"$MDN_URL$/Web/API/Worklet\"><code>Worklet</code></a> interface loads the module in the given JavaScript file and\nadds it to the current <code>Worklet</code>.</span></p>",
      "parameters": {
        "moduleURL": "A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> containing the URL of a JavaScript file with the module to add.",
        "options": "An object with any of the following options: <ul> <li><code>credentials</code>: A <a class=\"page-not-created\"  ><code>RequestCredentials</code></a> value that indicates whether to send credentials (e.g. cookies and HTTP authentification) when loading the module. Can be one of <code>\"omit\"</code>, <code>\"same-origin\"</code>, or <code>\"include\"</code>. Defaults to <code>\"same-origin\"</code>. See also <a href=\"$MDN_URL$/Web/API/Request/credentials\"><code>Request.credentials</code></a>.</li> </ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves once the module from the given URL has been\n  added. The promise doesn't return any value.</p>",
      "throws": {
        "AbortError": "The specified script is invalid or could not be loaded.",
        "SyntaxError": "The specified  <code>moduleURL</code>  is invalid."
      }
    },
    "writablestream": {
      "url": "$MDN_URL$/web/api/writablestream",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "47",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>WritableStream</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Streams_API\">Streams API</a> provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing.</p>"
    },
    "writablestream.abort": {
      "url": "$MDN_URL$/web/api/writablestream/abort",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "47",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>abort()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> interface aborts the stream, signaling that the producer\ncan no longer successfully write to the stream and it is to be immediately moved to an\nerror state, with any queued writes discarded.</p>",
      "parameters": {
        "reason": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> providing a human-readable reason for the abort."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, which fulfills with the value given in the <code>reason</code>\n  parameter.</p>",
      "throws": {
        "TypeError": "The stream you are trying to abort is not a <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> , or it is locked."
      }
    },
    "writablestream.getwriter": {
      "url": "$MDN_URL$/web/api/writablestream/getwriter",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "47",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>getWriter()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> interface returns a new instance of\n<a href=\"$MDN_URL$/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> and locks the stream to that instance. While\nthe stream is locked, no other writer can be acquired until this one is released. </p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> object instance.</p>",
      "throws": {
        "TypeError": "The stream you are trying to create a writer for is not a <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> ."
      }
    },
    "writablestream.locked": {
      "url": "$MDN_URL$/web/api/writablestream/locked",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "47",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>locked</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> interface returns a boolean indicating whether the\n<code>WritableStream</code> is locked to a writer. </p>"
    },
    "writablestream.writablestream": {
      "url": "$MDN_URL$/web/api/writablestream/writablestream",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "47",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>WritableStream()</code></strong> constructor creates\na new <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> object instance.</p>",
      "parameters": {
        "underlyingSink": "An object containing methods and properties that define how the constructed stream instance will behave. <code>underlyingSink</code> can contain the following: <dl> <dt>start(controller) <span class=\"badge inline optional\">Optional</span></dt> <dd>This is a method, called immediately when the object is constructed. The contents of this method are defined by the developer, and should aim to get access to the underlying sink. If this process is to be done asynchronously, it can return a promise to signal success or failure. The <code>controller</code> parameter passed to this method is a <a href=\"$MDN_URL$/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code></a>. This can be used by the developer to control the stream during set up.</dd> <dt>write(chunk, controller) <span class=\"badge inline optional\">Optional</span></dt> <dd>This method, also defined by the developer, will be called when a new chunk of data (specified in the <code>chunk</code> parameter) is ready to be written to the underlying sink. It can return a promise to signal success or failure of the write operation. The <code>controller</code> parameter passed to this method is a <a href=\"$MDN_URL$/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code></a> that can be used by the developer to control the stream as more chunks are submitted for writing. This method will be called only after previous writes have succeeded, and never after the stream is closed or aborted (see below).</dd> <dt>close(controller) <span class=\"badge inline optional\">Optional</span></dt> <dd>This method, also defined by the developer, will be called if the app signals that it has finished writing chunks to the stream. The contents should do whatever is necessary to finalize writes to the underlying sink, and release access to it. If this process is asynchronous, it can return a promise to signal success or failure. This method will be called only after all queued-up writes have succeeded. The <code>controller</code> parameter passed to this method is a <a href=\"$MDN_URL$/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code></a>, which can be used to control the stream at the end of writing.</dd> <dt>abort(reason) <span class=\"badge inline optional\">Optional</span></dt> <dd>This method, also defined by the developer, will be called if the app signals that it wishes to abruptly close the stream and put it in an errored state. It can clean up any held resources, much like <code>close()</code>, but <code>abort()</code> will be called even if writes are queued up — those chunks will be thrown away. If this process is asynchronous, it can return a promise to signal success or failure. The <code>reason</code> parameter contains a <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> describing why the stream was aborted.</dd> </dl>",
        "queuingStrategy": "An object that optionally defines a queuing strategy for the stream. This takes two parameters: <dl> <dt>highWaterMark</dt> <dd>A non-negative integer — this defines the total number of chunks that can be contained in the internal queue before backpressure is applied.</dd> <dt>size(chunk)</dt> <dd>A method containing a parameter <code>chunk</code> — this indicates the size to use for each chunk, in bytes.</dd> </dl> <div class=\"note notecard\"> <strong>Note</strong>: You could define your own custom <code>queuingStrategy</code>, or use an instance of <a href=\"$MDN_URL$/Web/API/ByteLengthQueuingStrategy\"><code>ByteLengthQueuingStrategy</code></a> or <a href=\"$MDN_URL$/Web/API/CountQueuingStrategy\"><code>CountQueuingStrategy</code></a> for this object value. If no <code>queuingStrategy</code> is supplied, the default used is the same as a <code>CountQueuingStrategy</code> with a high water mark of 1.<br> </div>"
      },
      "returns": "<p>An instance of the <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> object.</p>"
    },
    "writablestreamdefaultcontroller": {
      "url": "$MDN_URL$/web/api/writablestreamdefaultcontroller",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "58",
        "ChromeAndroid": "58",
        "Edge": "16",
        "Opera": "45",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>WritableStreamDefaultController</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Streams_API\">Streams API</a> represents a controller allowing control of a <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a>'s state. When constructing a <code>WritableStream</code>, the underlying sink is given a corresponding <code>WritableStreamDefaultController</code> instance to manipulate.</p>"
    },
    "writablestreamdefaultcontroller.error": {
      "url": "$MDN_URL$/web/api/writablestreamdefaultcontroller/error",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "46",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>error()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WritableStreamDefaultController\"><code>WritableStreamDefaultController</code></a> interface causes any future interactions\nwith the associated stream to error.</p>\n<p>This method is rarely used, since usually it suffices to return a rejected promise from\none of the underlying sink’s methods. However, it can be useful for suddenly shutting\ndown a stream in response to an event outside the normal lifecycle of interactions with\nthe underlying sink.</p>",
      "parameters": {
        "e": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the error you want future interactions to fail with."
      },
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "TypeError": "The stream you are trying to error is not a <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> ."
      }
    },
    "writablestreamdefaultwriter": {
      "url": "$MDN_URL$/web/api/writablestreamdefaultwriter",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "46",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>WritableStreamDefaultWriter</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/Streams_API\">Streams API</a> is the object returned by <a href=\"$MDN_URL$/Web/API/WritableStream/getWriter\"><code>WritableStream.getWriter()</code></a> and once created locks the writer to the <code>WritableStream</code> ensuring that no other streams can write to the underlying sink.</p>"
    },
    "writablestreamdefaultwriter.abort": {
      "url": "$MDN_URL$/web/api/writablestreamdefaultwriter/abort",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "46",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>abort()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> interface aborts the stream, signaling that\nthe producer can no longer successfully write to the stream and it is to be immediately\nmoved to an error state, with any queued writes discarded. </p>\n<p> If the writer is active, the <code>abort()</code> method behaves the same as that for\nthe associated stream (<a href=\"$MDN_URL$/Web/API/WritableStream/abort\"><code>WritableStream.abort()</code></a>). If not, it returns a\nrejected promise.</p>",
      "parameters": {
        "reason": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing a human-readable reason for the abort."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, which fulfills with the value given in the <code>reason</code>\n  parameter.</p>",
      "throws": {
        "TypeError": "The stream you are trying to abort is not a <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> , or it is locked."
      }
    },
    "writablestreamdefaultwriter.close": {
      "url": "$MDN_URL$/web/api/writablestreamdefaultwriter/close",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "46",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>close()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> interface closes the associated writable\nstream. </p>\n<p>The underlying sink will finish processing any previously-written chunks, before\ninvoking the close behavior. During this time any further attempts to write will fail\n(without erroring the stream).</p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, which fulfills with the <code>undefined</code> if all\n  remaining chunks were successfully written before the close, or rejects with an error if\n  a problem was encountered during the process.</p>",
      "throws": {
        "TypeError": "The stream you are trying to close is not a <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> ."
      }
    },
    "writablestreamdefaultwriter.closed": {
      "url": "$MDN_URL$/web/api/writablestreamdefaultwriter/closed",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "46",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>closed</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> interface returns a promise that fulfills if\nthe stream becomes closed or the writer's lock is released, or rejects if the stream\nerrors.</p>"
    },
    "writablestreamdefaultwriter.desiredsize": {
      "url": "$MDN_URL$/web/api/writablestreamdefaultwriter/desiredsize",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "46",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>desiredSize</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> interface returns the desired size required\nto fill the stream's internal queue.</p>",
      "throws": {
        "TypeError": "The writer’s lock is released."
      }
    },
    "writablestreamdefaultwriter.ready": {
      "url": "$MDN_URL$/web/api/writablestreamdefaultwriter/ready",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "46",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>ready</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>\nthat resolves when the desired size of the stream's internal queue transitions from\nnon-positive to positive, signaling that it is no longer applying backpressure.</p>"
    },
    "writablestreamdefaultwriter.releaselock": {
      "url": "$MDN_URL$/web/api/writablestreamdefaultwriter/releaselock",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "46",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>releaseLock()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> interface releases the writer's lock on the\ncorresponding stream. After the lock is released, the writer is no longer active. If the\nassociated stream is errored when the lock is released, the writer will appear errored\nin the same way from now on; otherwise, the writer will appear closed.</p>",
      "returns": "<p><code>undefined</code>.</p>"
    },
    "writablestreamdefaultwriter.writablestreamdefaultwriter": {
      "url": "$MDN_URL$/web/api/writablestreamdefaultwriter/writablestreamdefaultwriter",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "46"
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p class=\"summary\">The <strong><code>WritableStreamDefaultWriter()</code></strong>\nconstructor creates a new <a href=\"$MDN_URL$/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> object instance.</p>\n<div class=\"note notecard\">\n<p><strong>Note</strong>: You generally wouldn't use this constructor manually; instead,\nyou'd use the <a href=\"$MDN_URL$/Web/API/WritableStream/getWriter\"><code>WritableStream.getWriter()</code></a> method.</p>\n</div>",
      "parameters": {
        "stream": "The <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> to be written to."
      },
      "returns": "<p>An instance of the <a href=\"$MDN_URL$/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> object.</p>",
      "throws": {
        "TypeError": "The provided <code>stream</code> value is not a <a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> , or it is locked to another writer already."
      }
    },
    "writablestreamdefaultwriter.write": {
      "url": "$MDN_URL$/web/api/writablestreamdefaultwriter/write",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "59",
        "ChromeAndroid": "59",
        "Edge": "16",
        "Opera": "46",
        "Safari": "14.1",
        "SafariIOS": "14.5"
      },
      "doc": "<div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div>\n<p>The <strong><code>write()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/WritableStreamDefaultWriter\"><code>WritableStreamDefaultWriter</code></a> interface writes a passed chunk of data to a\n<a href=\"$MDN_URL$/Web/API/WritableStream\"><code>WritableStream</code></a> and its underlying sink, then returns a\n<a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to indicate the success or failure of the write\noperation.</p>\n<p>Note that what \"success\" means is up to the underlying sink; it might indicate that the\nchunk has been accepted, and not necessarily that it is safely saved to its ultimate\ndestination.</p>",
      "parameters": {
        "chunk": "A block of binary data to pass to the <code>WritableStream</code> ."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a>, which fulfills with the <code>undefined</code> upon a\n  successful write, or rejects if the write fails or stream becomes errored before the\n  writing process is initiated.</p>",
      "throws": {
        "TypeError": "The target stream is not a writable stream, or it does not have an owner."
      }
    },
    "xmldocument": {
      "url": "$MDN_URL$/web/api/xmldocument",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "34",
        "ChromeAndroid": "34",
        "Edge": "",
        "Firefox": "",
        "Opera": "21",
        "Safari": "10",
        "SafariIOS": "10"
      },
      "doc": "<p>The <strong>XMLDocument</strong> interface represents an XML document. It inherits from the generic <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> and does not add any specific methods or properties to it: nevertheless, several algorithms behave differently with the two types of documents.</p>"
    },
    "xmldocument.async": {
      "url": "$MDN_URL$/web/api/xmldocument/async",
      "status": [
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p><code>document.async</code> can be set to indicate whether a <a href=\"$MDN_URL$/Web/API/XMLDocument/load\"><code>XMLDocument.load()</code></a> call should be an asynchronous or synchronous request. <code>true</code> is the default value, indicating that documents should be loaded asynchronously.</p>\n<p>(It has been possible to load documents synchronously since 1.4 alpha.)</p>"
    },
    "xmldocument.load": {
      "url": "$MDN_URL$/web/api/xmldocument/load",
      "status": [
        "Deprecated"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p><code>document.load()</code> is a part of an old version of the W3C <a href=\"https://www.w3.org/TR/2003/WD-DOM-Level-3-LS-20030619/load-save.html#LS-DocumentLS\" class=\"external\" rel=\" noopener\">DOM Level 3 Load &amp; Save module</a>. Can be used with <a href=\"$MDN_URL$/Web/API/XMLDocument/async\"><code>XMLDocument.async</code></a> to indicate whether the request is synchronous or asynchronous (the default). As of at least Gecko 1.9, this no longer supports cross-site loading of documents (Use <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> or <a href=\"$MDN_URL$/Web/API/WindowOrWorkerGlobalScope/fetch\" ><code>fetch()</code></a> instead).</p>"
    },
    "xmlhttprequest": {
      "url": "$MDN_URL$/web/api/xmlhttprequest",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "7",
        "Opera": "8",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\"><code>XMLHttpRequest</code> (XHR) objects are used to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing.</span> <code>XMLHttpRequest</code> is used heavily in <a href=\"$MDN_URL$/Glossary/AJAX\">AJAX</a> programming.</p>\n<p>Despite its name, <code>XMLHttpRequest</code> can be used to retrieve any type of data, not just XML.</p>\n<p>If your communication needs to involve receiving event data or message data from a server, consider using <a href=\"$MDN_URL$/Web/API/Server-sent_events\">server-sent events</a> through the <a href=\"$MDN_URL$/Web/API/EventSource\"><code>EventSource</code></a> interface. For full-duplex communication, <a href=\"$MDN_URL$/Web/API/WebSockets_API\">WebSockets</a> may be a better choice.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a>, except for <a href=\"$MDN_URL$/Web/API/Service_Worker_API\">Service Workers</a></p>\n</div>"
    },
    "xmlhttprequest.abort": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/abort",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "18",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "5",
        "Opera": "",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<p>The <code><strong>XMLHttpRequest.abort()</strong></code> method aborts the request if\nit has already been sent. When a request is aborted, its\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/readyState\" ><code>readyState</code></a> is changed to\n<a class=\"page-not-created\"  ><code>XMLHttpRequest.UNSENT</code></a> (0) and the request's\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/status\" ><code>status</code></a> code is set to 0.</p>",
      "returns": "<p><code>undefined</code></p>"
    },
    "xmlhttprequest.channel": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/channel",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<p>XMLHttpRequest.channel is an <code><a href=\"$MDN_URL$/Mozilla/Tech/XPCOM/Reference/Interface/nsIChannel\" class=\"page-not-created\"  data-flaw=\"link1\">nsIChannel</a></code> that used by the object when performing the request. This is <code>null</code> if the channel hasn't been created yet. In the case of a multi-part request, this is the initial channel, not the different parts in the multi-part request. <strong>Requires elevated privileges to access.</strong></p>"
    },
    "xmlhttprequest.getallresponseheaders": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/getallresponseheaders",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "4",
        "IE": "5",
        "Opera": "",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> method\n<code><strong>getAllResponseHeaders()</strong></code> returns all the response\nheaders, separated by <a href=\"$MDN_URL$/Glossary/CRLF\">CRLF</a>, as a string, or returns <code>null</code>\nif no response has been received.</span> If a network error happened, an empty string\nis returned.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> For multipart requests, this returns the headers from the\n<em>current</em> part of the request, not from the original channel.</p>\n</div>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/ByteString\"><code>ByteString</code></a> representing all of the response's headers (except those\n  whose field name is <code>Set-Cookie</code> or <code>Set-Cookie2</code>) separated by\n  <a href=\"$MDN_URL$/Glossary/CRLF\">CRLF</a>, or <code>null</code> if no response has been received. If a\n  network error happened, an empty string is returned.</p>\n\n<p>An example of what a raw header string looks like:</p>\n\n<pre class=\"notranslate\"><span class=\"punctuation token\">date: Fri, 08 Dec 2017 21:04:30 GMT\\r\\n\ncontent-encoding: gzip\\r\\n\nx-content-type-options: nosniff\\r\\n\nserver: meinheld/0.6.1\\r\\n\nx-frame-options: DENY\\r\\n\ncontent-type: text/html; charset=utf-8\\r\\n\nconnection: keep-alive\\r\\n\nstrict-transport-security: max-age=63072000\\r\\n\nvary: Cookie, Accept-Encoding\\r\\n\ncontent-length: 6502\\r\\n\nx-xss-protection: 1; mode=block\\r\\n</span></pre>\n\n<p>Each line is terminated by both carriage return and line feed characters\n  (<code>\\r\\n</code>). These are essentially delimiters separating each of the headers.</p>\n\n<div class=\"notecard note\">\n  <p><strong>Note</strong>: In modern browsers, the header names are returned in all lower\n    case, as per the latest spec.</p>\n</div>"
    },
    "xmlhttprequest.getresponseheader": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/getresponseheader",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "5",
        "Opera": "8",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> method\n<strong><code>getResponseHeader()</code></strong> returns the string containing the\ntext of a particular header's value.</span> If there are multiple response headers\nwith the same name, then their values are returned as a single concatenated string,\nwhere each value is separated from the previous one by a pair of comma and space. The\n<code>getResponseHeader()</code> method returns the value as a UTF byte sequence.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> The search for the header name is case-insensitive.</p>\n</div>\n<p>If you need to get the raw string of all of the headers, use the\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/getAllResponseHeaders\" ><code>getAllResponseHeaders()</code></a> method,\nwhich returns the entire raw header string.</p>",
      "parameters": {
        "headerName": "A <a href=\"$MDN_URL$/Web/API/ByteString\"><code>ByteString</code></a> indicating the name of the header you want to return the text value of."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/ByteString\"><code>ByteString</code></a> representing the header's text value, or <code>null</code>\n  if either the response has not yet been received or the header doesn't exist in the\n  response.</p>"
    },
    "xmlhttprequest.mozanon": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/mozanon",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p><span class=\"seoSummary\"><strong><code>XMLHttpRequest.mozAnon</code></strong> is a boolean. If true, the request will be sent without cookies or authentication headers.</span></p>"
    },
    "xmlhttprequest.mozbackgroundrequest": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/mozbackgroundrequest",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This method is not available from Web content. It requires elevated privileges to access.</p>\n</div>\n<p><span class=\"seoSummary\"><strong><code>XMLHttpRequest.mozBackgroundRequest</code></strong> is a Boolean, indicating if the object represents a background service request.</span> If <code>true</code>, no load group is associated with the request, with security dialogs prevented from being shown to the user.</p>\n<p>In cases in where a security dialog (such as authentication or a bad certificate notification) would normally be shown, this request fails instead.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This property must be set before calling <code>open()</code>.</p>\n</div>"
    },
    "xmlhttprequest.mozresponsearraybuffer": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/mozresponsearraybuffer",
      "doc": "<div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div>\n<div class=\"warning notecard\">\n<p>Obsolete since Gecko 6</p>\n</div>\n<p><span class=\"seoSummary\">Is an <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a> response to the request, written as a JavaScript typed array.</span> This is <code>NULL</code> if the request was not successful, or if it hasn't been sent yet.</p>"
    },
    "xmlhttprequest.mozsystem": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/mozsystem",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p><span class=\"seoSummary\"><strong><code>mozSystem</code></strong> is a boolean. If true, the same origin policy is not enforced on the request.</span></p>"
    },
    "xmlhttprequest.multipart": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/multipart",
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div></div>\n<div class=\"warning notecard\">\n<p>Obsolete since Gecko 22</p>\n</div>\n<p><strong>This Gecko-only feature was removed in Firefox/Gecko 22.</strong> Please use <a href=\"$MDN_URL$/Web/API/Server-sent_events\">Server-Sent Events</a>, <a href=\"$MDN_URL$/Web/API/WebSockets_API\">Web Sockets</a>, or <code>responseText</code> from progress events instead.</p>\n<p><span class=\"seoSummary\">This boolean indicates if the response is expected to be a stream of possibly multiple XML documents.</span> If set to <code>true</code>, the content type of the initial response must be <code>multipart/x-mixed-replace</code> or an error will occur. All requests must be asynchronous.</p>\n<p>This enables support for server push; for each XML document that's written to this request, a new XML DOM document is created and the <code>onload</code> handler is called between documents.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> When this is set, the <code>onload</code> handler and other event handlers are not reset after the first XMLdocument is loaded, and the <code>onload</code> handler is called after each part of the response is received.</p>\n</div>"
    },
    "xmlhttprequest.onreadystatechange": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/onreadystatechange",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "5",
        "Opera": "9",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<p>An <a href=\"$MDN_URL$/Web/Events/Event_handlers\">event handler</a> that is called whenever the <code>readyState</code>\nattribute changes. The callback is called from the user interface thread. The\n<strong><code>XMLHttpRequest.onreadystatechange</code></strong> property contains the\nevent handler to be called when the <a href=\"$MDN_URL$/Web/API/Document/readystatechange_event\" ><code>readystatechange</code></a> event is fired, that is every time the\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/readyState\" ><code>readyState</code></a> property of the\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> changes.</p>\n<div class=\"warning notecard\">\n<p><strong>Warning:</strong> This should not be used with synchronous requests and must\nnot be used from native code.</p>\n</div>"
    },
    "xmlhttprequest.open": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/open",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "5",
        "Opera": "8",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> method <code><strong>open()</strong></code>\ninitializes a newly-created request, or re-initializes an existing one.</p>\n<div class=\"note notecard\"><strong>Note:</strong> Calling this method for an already active request\n(one for which <code>open()</code> has already been called) is the equivalent of calling\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/abort\" ><code>abort()</code></a>.</div>",
      "parameters": {
        "method": "The <a href=\"$MDN_URL$/Web/HTTP/Methods\">HTTP request method</a> to use, such as <code>\"GET\"</code> , <code>\"POST\"</code> , <code>\"PUT\"</code> , <code>\"DELETE\"</code> , etc. Ignored for non-HTTP(S) URLs.",
        "url": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the URL to send the request to.",
        "async": "An optional Boolean parameter, defaulting to <code>true</code> , indicating whether or not to perform the operation asynchronously. If this value is <code>false</code> , the <code>send()</code> method does not return until the response is received. If <code>true</code> , notification of a completed transaction is provided using event listeners. This <em>must</em> be true if the <code>multipart</code> attribute is <code>true</code> , or an exception will be thrown. <div class=\"note notecard\"><strong>Note:</strong> Synchronous requests on the main thread can be easily disruptive to the user experience and should be avoided; in fact, many browsers have deprecated synchronous XHR support on the main thread entirely. Synchronous requests are permitted in <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a>s.</div>",
        "user": "The optional user name to use for authentication purposes; by default, this is the <code>null</code> value.",
        "password": "The optional password to use for authentication purposes; by default, this is the <code>null</code> value."
      }
    },
    "xmlhttprequest.overridemimetype": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/overridemimetype",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "11",
        "Opera": "",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> method\n<code><strong>overrideMimeType()</strong></code> specifies a MIME type other than the\none provided by the server to be used instead when interpreting the data being\ntransferred in a request.</span> This may be used, for example, to force a stream to\nbe treated and parsed as <code>\"text/xml\"</code>, even if the server does not report it\nas such. This method must be called before calling <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/send\" ><code>send()</code></a>.</p>",
      "parameters": {
        "mimeType": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> specifying the MIME type to use instead of the one specified by the server. If the server doesn't specify a type, <code>XMLHttpRequest</code> assumes <code>\"text/xml\"</code> ."
      },
      "returns": "<p><code>undefined</code>.</p>"
    },
    "xmlhttprequest.readystate": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/readystate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "7",
        "Opera": "8",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong>XMLHttpRequest.readyState</strong> property returns the state an XMLHttpRequest client is in. An <abbr >XHR</abbr> client exists in one of the following states:</p>\n<table class=\"standard-table\">\n<tbody>\n<tr>\n<td class=\"header\">Value</td>\n<td class=\"header\">State</td>\n<td class=\"header\">Description</td>\n</tr>\n<tr>\n<td><code>0</code></td>\n<td><code>UNSENT</code></td>\n<td>Client has been created. <code>open()</code> not called yet.</td>\n</tr>\n<tr>\n<td><code>1</code></td>\n<td><code>OPENED</code></td>\n<td><code>open()</code> has been called.</td>\n</tr>\n<tr>\n<td><code>2</code></td>\n<td><code>HEADERS_RECEIVED</code></td>\n<td><code>send()</code> has been called, and headers and status are available.</td>\n</tr>\n<tr>\n<td><code>3</code></td>\n<td><code>LOADING</code></td>\n<td>Downloading; <code>responseText</code> holds partial data.</td>\n</tr>\n<tr>\n<td><code>4</code></td>\n<td><code>DONE</code></td>\n<td>The operation is complete.</td>\n</tr>\n</tbody>\n</table>\n<dl>\n<dt>UNSENT</dt>\n<dd>The XMLHttpRequest client has been created, but the open() method hasn't been called yet.</dd>\n<dt>OPENED</dt>\n<dd>open() method has been invoked. During this state, the request headers can be set using the <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/setRequestHeader\">setRequestHeader()</a> method and the <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/send\">send()</a> method can be called which will initiate the fetch.</dd>\n<dt>HEADERS_RECEIVED</dt>\n<dd>send() has been called and the response headers have been received.</dd>\n<dt>LOADING</dt>\n<dd>Response's body is being received. If <code><a href=\"$MDN_URL$/Web/API/XMLHttpRequest/responseType\">responseType</a></code> is \"text\" or empty string, <code><a href=\"$MDN_URL$/Web/API/XMLHttpRequest/responseText\">responseText</a></code> will have the partial text response as it loads.</dd>\n<dt>DONE</dt>\n<dd>The fetch operation is complete. This could mean that either the data transfer has been completed successfully or failed.</dd>\n</dl>\n<div class=\"note notecard\">\n<p>The state names are different in versions of Internet Explorer earlier than 11. Instead of <code>UNSENT</code>, <code>OPENED</code>,<code> HEADERS_RECEIVED</code>,<code> LOADING</code> and <code>DONE</code>, the names <code>READYSTATE_UNINITIALIZED</code> (0), <code>READYSTATE_LOADING</code> (1), <code>READYSTATE_LOADED</code> (2), <code>READYSTATE_INTERACTIVE</code> (3) and <code>READYSTATE_COMPLETE</code> (4) are used.</p>\n</div>"
    },
    "xmlhttprequest.response": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/response",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "9",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "6",
        "IE": "10",
        "Opera": "11.6",
        "Safari": "5.1",
        "SafariIOS": "6"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a>\n<code><strong>response</strong></code> property returns the response's body content as\nan <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"><code>ArrayBuffer</code></a>, <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>, <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>,\nJavaScript <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Object\"><code>Object</code></a>, or <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a>, depending on the value\nof the request's <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/responseType\" ><code>responseType</code></a>\nproperty.</span></p>"
    },
    "xmlhttprequest.responsetext": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/responsetext",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "5",
        "Opera": "8",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> property\n<strong><code>responseText</code></strong> returns the text received from a server\nfollowing a request being sent.</span></p>",
      "throws": {
        "InvalidStateError": "The <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/responseType\"><code>XMLHttpRequest.responseType</code></a> is not set to either the empty string or <code>\"text\"</code> . Since the <code>responseText</code> property is only valid for text content, any other value is an error condition."
      }
    },
    "xmlhttprequest.responsetype": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/responsetype",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "31",
        "ChromeAndroid": "55",
        "Edge": "",
        "Firefox": "6",
        "IE": "10",
        "Opera": "18",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> property\n<strong><code>responseType</code></strong> is an enumerated string value specifying\nthe type of data contained in the response.</span> It also lets the author change the\nresponse type. If an empty string is set as the value of <code>responseType</code>, the\ndefault value of <code>text</code> is used.</p>",
      "throws": {
        "InvalidAccessError": "An attempt was made to change the value of <code>responseType</code> on an <code>XMLHttpRequest</code> which is in synchronous mode but not in a <a href=\"$MDN_URL$/Web/API/Worker\"><code>Worker</code></a> . For additional details, see <a href=\"#synchronous_xhr ____restrictions\">Synchronous XHR restrictions</a> below."
      }
    },
    "xmlhttprequest.responseurl": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/responseurl",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "37",
        "ChromeAndroid": "37",
        "Edge": "14",
        "Firefox": "32",
        "Opera": "24",
        "Safari": "8",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <code><strong>XMLHttpRequest.responseURL</strong></code> property returns the serialized URL of the response or the empty string if the URL is <code>null</code>. If the URL is returned, any URL fragment present in the URL will be stripped away. The value of <code>responseURL</code> will be the final URL obtained after any redirects.</p>"
    },
    "xmlhttprequest.responsexml": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/responsexml",
      "status": [
        "StandardTrack"
      ],
      "doc": "<p>The <strong><code>XMLHttpRequest.responseXML</code></strong> read-only property returns\na <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> containing the HTML or XML retrieved by the request; or\n<code>null</code> if the request was unsuccessful, has not yet been sent, or if the data\ncan't be parsed as XML or HTML.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> The name <code>responseXML</code> is an artifact of this\nproperty's history; it works for both HTML and XML.</p>\n</div>\n<p>Usually, the response is parsed as \"<code>text/xml</code>\". If the\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/responseType\" ><code>responseType</code></a> is set to\n\"<code>document</code>\" and the request was made asynchronously, instead the response is\nparsed as \"<code>text/html</code>\". <code>responseXML</code> is <code>null</code> for\nany other types of data, as well as for <a href=\"$MDN_URL$/Web/HTTP/Basics_of_HTTP/Data_URIs\"><code>data:</code> URLs</a>.</p>\n<p>If the server doesn't specify the <a href=\"$MDN_URL$/Web/HTTP/Headers/Content-Type\"><code>Content-Type</code></a> as\n\"<code>text/xml</code>\" or \"<code>application/xml</code>\", you can use\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/overrideMimeType\"><code>XMLHttpRequest.overrideMimeType()</code></a> to parse it as XML anyway.</p>\n<p>This property isn't available to workers.</p>",
      "throws": {
        "InvalidStateError": "The <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/responseType\" ><code>responseType</code></a> isn't either \" <code>document</code> \" or an empty string."
      }
    },
    "xmlhttprequest.send": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/send",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "5",
        "Opera": "8",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> method\n<code><strong>send()</strong></code> sends the request to the server.</span> If the\nrequest is asynchronous (which is the default), this method returns as soon as the\nrequest is sent and the result is delivered using events. If the request is synchronous,\nthis method doesn't return until the response has arrived.</p>\n<p><code>send()</code> accepts an optional parameter which lets you specify the request's\nbody; this is primarily used for requests such as <a href=\"$MDN_URL$/Web/HTTP/Methods/PUT\"><code>PUT</code></a>. If the request\nmethod is <a href=\"$MDN_URL$/Web/HTTP/Methods/GET\"><code>GET</code></a> or <a href=\"$MDN_URL$/Web/HTTP/Methods/HEAD\"><code>HEAD</code></a>, the <code>body</code>\nparameter is ignored and the request body is set to <code>null</code>.</p>\n<p>If no <a href=\"$MDN_URL$/Web/HTTP/Headers/Accept\"><code>Accept</code></a> header has been set using the\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/setRequestHeader\" ><code>setRequestHeader()</code></a>, an\n<code>Accept</code> header with the type <code>\"*/*\"</code> (any type) is sent.</p>",
      "parameters": {
        "body": "A body of data to be sent in the XHR request. This can be: <ul> <li>A <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a>, in which case it is serialized before being sent. </li> <li>An <code>XMLHttpRequestBodyInit</code>, which <a href=\"https://fetch.spec.whatwg.org/#typedefdef-xmlhttprequestbodyinit\" class=\"external\" rel=\" noopener\">per the Fetch spec</a> can be a <a href=\"$MDN_URL$/Web/API/Blob\"><code>Blob</code></a>, <a href=\"$MDN_URL$/Web/API/BufferSource\"><code>BufferSource</code></a>, <a href=\"$MDN_URL$/Web/API/FormData\"><code>FormData</code></a>, <a href=\"$MDN_URL$/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>, or <a href=\"$MDN_URL$/Web/API/USVString\"><code>USVString</code></a> object.</li> <li><code>null</code></li> </ul> If no value is specified for the body, a default value of <code>null</code> is used."
      },
      "returns": "<p><code>undefined</code>.</p>",
      "throws": {
        "InvalidStateError": "<code>send()</code> has already been invoked for the request, and/or the request is complete.",
        "NetworkError": "The resource type to be fetched is a Blob, and the method is not <code>GET</code> ."
      }
    },
    "xmlhttprequest.setrequestheader": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/setrequestheader",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "5",
        "Opera": "8",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> method\n<code><strong>setRequestHeader()</strong></code> sets the value of an HTTP request\nheader. When using <code>setRequestHeader()</code>, you must call it after calling\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/open\" ><code>open()</code></a>, but before calling\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/send\" ><code>send()</code></a>. If this method is called several times\nwith the same header, the values are merged into one single request header.</p>\n<p>Each time you call <code>setRequestHeader()</code> after the first time you call it,\nthe specified text is appended to the end of the existing header's content.</p>\n<p>If no <a href=\"$MDN_URL$/Web/HTTP/Headers/Accept\"><code>Accept</code></a> header has been set using this, an <code>Accept</code>\nheader with the type <code>\"*/*\"</code> is sent with the request when\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/send\" ><code>send()</code></a> is called.</p>\n<p>For security reasons, some headers can only be controlled by the user agent. These\nheaders include the <a href=\"$MDN_URL$/Glossary/Forbidden_header_name\">forbidden header names</a>\nand <a href=\"$MDN_URL$/Glossary/Forbidden_response_header_name\">forbidden response header names</a>.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> For your custom fields, you may encounter a \"<strong>not\nallowed by Access-Control-Allow-Headers in preflight response</strong>\" exception\nwhen you send requests across domains. In this situation, you need to set up the\n<a href=\"$MDN_URL$/Web/HTTP/Headers/Access-Control-Allow-Headers\"><code>Access-Control-Allow-Headers</code></a> in your response header at server side.</p>\n</div>",
      "parameters": {
        "header": "The name of the header whose value is to be set.",
        "value": "The value to set as the body of the header."
      },
      "returns": "<p><code>undefined</code>.</p>"
    },
    "xmlhttprequest.status": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/status",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "7",
        "Opera": "8",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <code><strong>XMLHttpRequest.status</strong></code> property returns the numerical HTTP <a href=\"$MDN_URL$/Web/HTTP/Status\">status code</a> of the <code>XMLHttpRequest</code>'s response.</p>\n<p>Before the request completes, the value of <code>status</code> is 0. Browsers also report a status of 0 in case of <code>XMLHttpRequest</code> errors.</p>"
    },
    "xmlhttprequest.statustext": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/statustext",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "7",
        "Opera": "",
        "Safari": "1.2",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <code><strong>XMLHttpRequest.statusText</strong></code> property returns a <a href=\"$MDN_URL$/Web/API/DOMString\" ><code>DOMString</code></a> containing the response's status message as returned by the HTTP server. Unlike <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/status\"  data-flaw=\"link1\"><code>XMLHTTPRequest.status</code></a> which indicates a numerical status code, this property contains the <em>text</em> of the response status, such as \"OK\" or \"Not Found\". If the request's <code><a href=\"$MDN_URL$/Web/API/XMLHttpRequest/readyState\">readyState</a></code> is in <code>UNSENT</code> or <code>OPENED</code> state, the value of <code>statusText</code> will be an empty string.</p>\n<p>If the server response doesn't explicitly specify a status text, <code>statusText</code> will assume the default value \"OK\".</p>\n<div class=\"notecard note\">\n<p>Responses over an HTTP/2 connection will always have a empty string as status message as HTTP/2 does not support them.</p>\n</div>"
    },
    "xmlhttprequest.timeout": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/timeout",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "29",
        "ChromeAndroid": "29",
        "Edge": "",
        "Firefox": "12",
        "IE": "8",
        "Opera": "17",
        "Safari": "7",
        "SafariIOS": "7"
      },
      "doc": "<p>The <code><strong>XMLHttpRequest.timeout</strong></code> property is an <code>unsigned long</code> representing the number of milliseconds a request can take before automatically being terminated. The default value is 0, which means there is no timeout. Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a <a href=\"$MDN_URL$/Glossary/document_environment\">document environment</a> or it will throw an <code>InvalidAccessError</code> exception. When a timeout happens, a <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/timeout_event\">timeout</a> event is fired.</p>\n<div class=\"note notecard\"><strong>Note:</strong> You may not use a timeout for synchronous requests with an owning window.</div>\n<p><a href=\"$MDN_URL$/Web/API/XMLHttpRequest/Synchronous_and_Asynchronous_Requests#example_using_a_timeout\">Using a timeout with an asynchronous request</a> </p>\n<p>In Internet Explorer, the timeout property may be set only after calling the <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/open\">open()</a> method and before calling the <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/send\">send()</a> method.</p>"
    },
    "xmlhttprequest.upload": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/upload",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "10",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> <code>upload</code> property returns an <a class=\"page-not-created\"  ><code>XMLHttpRequestUpload</code></a> object that can be observed to monitor an upload's progress.</span> It is an opaque object, but because it's also an <a href=\"$MDN_URL$/Web/API/XMLHttpRequestEventTarget\"><code>XMLHttpRequestEventTarget</code></a>, event listeners can be attached to track its process.</p>\n<div class=\"note notecard\"><strong>Note:</strong> Attaching event listeners to this object prevents the request from being a \"simple request\" and will cause a preflight request to be issued if cross-origin; see <a href=\"$MDN_URL$/Web/HTTP/CORS\">CORS</a>. Because of this, event listeners need to be registered before calling <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/send\" ><code>send()</code></a> or upload events won't be dispatched.</div>\n<div class=\"note notecard\"><strong>Note:</strong> The spec also seems to indicate that event listeners should be attached after <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/open\" ><code>open()</code></a>. However, browsers are buggy on this matter, and often need the listeners to be registered <em>before</em> <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/open\" ><code>open()</code></a> to work.</div>\n<p>The following events can be triggered on an upload object and used to monitor the upload:</p>\n<table class=\"standard-table\">\n<tbody>\n<tr>\n<td class=\"header\">Event</td>\n<td class=\"header\">Event listener</td>\n<td class=\"header\">Description</td>\n</tr>\n<tr>\n<td><code><a href=\"$MDN_URL$/Web/API/XMLHttpRequest/loadstart_event\" >loadstart</a></code></td>\n<td><a class=\"page-not-created\"  ><code>onloadstart</code></a></td>\n<td>The upload has begun.</td>\n</tr>\n<tr>\n<td><code><a href=\"$MDN_URL$/Web/API/XMLHttpRequest/progress_event\" >progress</a></code></td>\n<td><a class=\"page-not-created\"  ><code>onprogress</code></a></td>\n<td>Periodically delivered to indicate the amount of progress made so far.</td>\n</tr>\n<tr>\n<td><code><a href=\"$MDN_URL$/Web/API/HTMLMediaElement/abort_event\" >abort</a></code></td>\n<td><a class=\"page-not-created\"  ><code>onabort</code></a></td>\n<td>The upload operation was aborted.</td>\n</tr>\n<tr>\n<td><code><a href=\"$MDN_URL$/Web/API/Element/error_event\" >error</a></code></td>\n<td><a class=\"page-not-created\"  ><code>onerror</code></a></td>\n<td>The upload failed due to an error.</td>\n</tr>\n<tr>\n<td><code><a href=\"$MDN_URL$/Web/API/Window/load_event\" >load</a></code></td>\n<td><a class=\"page-not-created\"  ><code>onload</code></a></td>\n<td>The upload completed successfully.</td>\n</tr>\n<tr>\n<td><code><a href=\"$MDN_URL$/Web/API/XMLHttpRequest/timeout_event\" >timeout</a></code></td>\n<td><a class=\"page-not-created\"  ><code>ontimeout</code></a></td>\n<td>The upload timed out because a reply did not arrive within the time interval specified by the <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/timeout\"><code>XMLHttpRequest.timeout</code></a>.</td>\n</tr>\n<tr>\n<td><code><a href=\"$MDN_URL$/Web/API/XMLHttpRequest/loadend_event\" >loadend</a></code></td>\n<td><a class=\"page-not-created\"  ><code>onloadend</code></a></td>\n<td>The upload finished. This event does not differentiate between success or failure, and is sent at the end of the upload regardless of the outcome. Prior to this event, one of <code>load</code>, <code>error</code>, <code>abort</code>, or <code>timeout</code> will already have been delivered to indicate why the upload ended.</td>\n</tr>\n</tbody>\n</table>"
    },
    "xmlhttprequest.withcredentials": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/withcredentials",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "3",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "3.5",
        "IE": "10",
        "Opera": "12",
        "Safari": "4",
        "SafariIOS": "3.2"
      },
      "doc": "<p>The <code><strong>XMLHttpRequest.withCredentials</strong></code> property is a boolean value that indicates whether or not cross-site <code>Access-Control</code> requests should be made using credentials such as cookies, authorization headers or TLS client certificates. Setting <code>withCredentials</code> has no effect on same-site requests.</p>\n<p>In addition, this flag is also used to indicate when cookies are to be ignored in the response. The default is <code>false</code>. <code>XMLHttpRequest</code> from a different domain cannot set cookie values for their own domain unless <code>withCredentials</code> is set to <code>true</code> before making the request. The third-party cookies obtained by setting <code>withCredentials</code> to true will still honor same-origin policy and hence can not be accessed by the requesting script through <a href=\"$MDN_URL$/Web/API/Document/cookie\">document.cookie</a> or from response headers.</p>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> This never affects same-site requests.</p>\n</div>\n<div class=\"note notecard\">\n<p><strong>Note:</strong> <code>XMLHttpRequest</code> responses from a different domain <em>cannot</em> set cookie values for their own domain unless <code>withCredentials</code> is set to <code>true</code> before making the request, regardless of <code>Access-Control-</code> header values. </p>\n</div>"
    },
    "xmlhttprequest.xmlhttprequest": {
      "url": "$MDN_URL$/web/api/xmlhttprequest/xmlhttprequest",
      "doc": "<div><div class=\"notecard draft\">\n<h4 id=\"draft\">Draft</h4>\n<p>This page is not complete.</p>\n</div></div>\n<p><span class=\"seoSummary\">The <code><strong>XMLHttpRequest()</strong></code> constructor\ncreates a new <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a>.</span></p>\n<p>For details about how to use <code>XMLHttpRequest</code>, see <a class=\"internal\" href=\"$MDN_URL$/Web/API/XMLHttpRequest/Using_XMLHttpRequest\">Using\nXMLHttpRequest</a>.</p>",
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> object. The object must be prepared by at least\n  calling <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/open\" title=\"open()\"><code>open()</code></a> to initialize it before calling\n  <a href=\"$MDN_URL$/Web/API/XMLHttpRequest/send\" title=\"send()\"><code>send()</code></a> to send the request to the server.</p>"
    },
    "xmlhttprequesteventtarget": {
      "url": "$MDN_URL$/web/api/xmlhttprequesteventtarget",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "7",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p><code>XMLHttpRequestEventTarget</code> is the interface that describes the event handlers you can implement in an object that will handle events for an <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a>.</p>"
    },
    "xmlhttprequesteventtarget.onabort": {
      "url": "$MDN_URL$/web/api/xmlhttprequesteventtarget/onabort",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "18",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>XMLHttpRequestEventTarget.onabort</code></strong> is the function\ncalled when an <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> transaction is aborted, such as when the\n<a href=\"$MDN_URL$/Web/API/XMLHttpRequest/abort\"><code>XMLHttpRequest.abort()</code></a> function is called.</p>"
    },
    "xmlhttprequesteventtarget.onerror": {
      "url": "$MDN_URL$/web/api/xmlhttprequesteventtarget/onerror",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "18",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>XMLHttpRequestEventTarget.onerror</code></strong> is the function\ncalled when an <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> transaction fails due to an error.</p>\n<p>It's important to note that this is only called if there's an error at the\n<em>network</em> level. If the error only exists at the <em>application</em> level\n(e.g. an HTTP error code is sent), this method will not be called.</p>"
    },
    "xmlhttprequesteventtarget.onload": {
      "url": "$MDN_URL$/web/api/xmlhttprequesteventtarget/onload",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "18",
        "Firefox": "",
        "IE": "9",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>XMLHttpRequestEventTarget.onload</code></strong> is the function\ncalled when an <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> transaction completes successfully.</p>"
    },
    "xmlhttprequesteventtarget.onloadstart": {
      "url": "$MDN_URL$/web/api/xmlhttprequesteventtarget/onloadstart",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "18",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>XMLHttpRequestEventTarget.onloadstart</code></strong> is the function\ncalled when an <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> transaction starts transferring data.</p>"
    },
    "xmlhttprequesteventtarget.onprogress": {
      "url": "$MDN_URL$/web/api/xmlhttprequesteventtarget/onprogress",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "18",
        "Firefox": "",
        "IE": "10",
        "Opera": "",
        "Safari": "",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>XMLHttpRequestEventTarget.onprogress</code></strong> is the function called periodically with information when an <a href=\"$MDN_URL$/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a> before success completely.</p>"
    },
    "xmlserializer": {
      "url": "$MDN_URL$/web/api/xmlserializer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <code>XMLSerializer</code> interface provides the <a href=\"$MDN_URL$/Web/API/XMLSerializer/serializeToString\" ><code>serializeToString()</code></a> method to construct an XML string representing a <a href=\"$MDN_URL$/Glossary/DOM\">DOM</a> tree.</span></p>"
    },
    "xmlserializer.serializetostring": {
      "url": "$MDN_URL$/web/api/xmlserializer/serializetostring",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "IE": "9",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XMLSerializer\"><code>XMLSerializer</code></a> method\n<code><strong>serializeToString()</strong></code> constructs a string representing the\nspecified <a href=\"$MDN_URL$/Glossary/DOM\">DOM</a> tree in <a href=\"$MDN_URL$/Glossary/XML\">XML</a> form.</span></p>",
      "parameters": {
        "rootNode": "The <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> to use as the root of the DOM tree or subtree for which to construct an XML representation."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> containing the XML representation of the specified DOM tree.</p>",
      "throws": {
        "TypeError": "The specified <code>rootNode</code> is not a compatible node type. The root node must be either <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> or <a href=\"$MDN_URL$/Web/API/Attr\"><code>Attr</code></a> .",
        "InvalidStateError": "The tree could not be successfully serialized, probably due to issues with the content's compatibility with XML serialization.",
        "SyntaxError": "A serialization of HTML was requested but could not succeed due to the content not being well-formed."
      }
    },
    "xpathevaluator": {
      "url": "$MDN_URL$/web/api/xpathevaluator",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <code>XPathEvaluator</code> interface allows to compile and evaluate <a href=\"$MDN_URL$/Glossary/XPath\">XPath</a> expressions.</p>\n<p>It is implemented by the <a href=\"$MDN_URL$/Web/API/Document\"><code>Document</code></a> interface.</p>"
    },
    "xpathevaluator.createexpression": {
      "url": "$MDN_URL$/web/api/xpathevaluator/createexpression",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>This method compiles an <a href=\"$MDN_URL$/Web/API/XPathExpression\"><code>XPathExpression</code></a> which can then be used for\n(repeated) evaluations of the <a href=\"$MDN_URL$/Glossary/XPath\">XPath</a> expression.</p>",
      "parameters": {
        "expression": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the XPath expression to be created.",
        "resolver": "Permits translation of all prefixes, including the <code>xml</code> namespace prefix, within the XPath expression into appropriate namespace URIs."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/XPathExpression\"><code>XPathExpression</code></a> representing the compiled form of the XPath\n  expression.</p>"
    },
    "xpathevaluator.creatensresolver": {
      "url": "$MDN_URL$/web/api/xpathevaluator/creatensresolver",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>This method adapts any DOM node to resolve namespaces so that an XPath expression can\nbe easily evaluated relative to the context of the node where it appeared within the\ndocument.</p>\n<p>This adapter works like the DOM Level 3 method <a href=\"$MDN_URL$/Web/API/Node/lookupNamespaceURI\" ><code>Node.lookupNamespaceURI()</code></a> in resolving the namespace URI from a given prefix using\nthe current information available in the node's hierarchy at the time the method is\ncalled, also correctly resolving the implicit <code>xml</code> prefix.</p>",
      "parameters": {
        "nodeResolver": "A <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> to be used as a context for namespace resolution."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/XPathNSResolver\"><code>XPathNSResolver</code></a> object which resolves namespaces with respect to the\n  definitions in scope for a specified node.</p>"
    },
    "xpathevaluator.evaluate": {
      "url": "$MDN_URL$/web/api/xpathevaluator/evaluate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <code>evaluate()</code> method of the <a href=\"$MDN_URL$/Web/API/XPathEvaluator\"><code>XPathEvaluator</code></a> interface\nexecutes an XPath expression on the given node or document and returns an\n<a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a>.</p>",
      "parameters": {
        "expression": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the XPath expression to be parsed and evaluated.",
        "contextNode": "A <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> representing the context to use for evaluating the expression.",
        "resolver": "Permits translation of all prefixes, including the <code>xml</code> namespace prefix, within the XPath expression into appropriate namespace URIs.",
        "type": "Specifies the type of result to be returned by evaluating the expression. This must be one of the <a href=\"$MDN_URL$/Web/API/XPathResult#constants\" ><code>XPathResult.Constants</code></a> .",
        "result": "Allows to specify a result object which may be reused and returned by this method. If this is specified as <code>null</code> or the implementation does not reuse the specified result, a new result object will be returned."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a> object representing the result of evaluating the XPath\n  expression.</p>"
    },
    "xpathexception": {
      "url": "$MDN_URL$/web/api/xpathexception",
      "doc": "<div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div>\n<p>In the <a href=\"$MDN_URL$/Web/XPath\">DOM XPath API</a> the <code><strong>XPathException</strong></code> interface represents exception conditions that can be encountered while performing XPath operations.</p>"
    },
    "xpathexception.code": {
      "url": "$MDN_URL$/web/api/xpathexception/code",
      "doc": "<div><div class=\"notecard deprecated\">\n<h4 id=\"deprecated\">Deprecated</h4>\n<p>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the <a href=\"#browser_compatibility\">compatibility table</a> at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</p>\n</div></div>\n<p>The <strong><code>code</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/XPathException\"><code>XPathException</code></a> interface returns a <code>short</code> that contains one\nof the <a href=\"$MDN_URL$/Web/API/XPathException#constants\" data-flaw=\"link1\">error code constants</a>.</p>"
    },
    "xpathexpression": {
      "url": "$MDN_URL$/web/api/xpathexpression",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">This interface is a compiled XPath expression that can be evaluated on a document or specific node to return information from its <a href=\"$MDN_URL$/Glossary/DOM\">DOM</a> tree.</span> This is useful when an expression will be reused in an application, because it is just compiled once and all namespace prefixes which occur within the expression are preresolved.</p>\n<p>Objects of this type are created by calling <a href=\"$MDN_URL$/Web/API/XPathEvaluator/createExpression\" ><code>XPathEvaluator.createExpression()</code></a>.</p>"
    },
    "xpathexpression.evaluate": {
      "url": "$MDN_URL$/web/api/xpathexpression/evaluate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>evaluate()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/XPathExpression\"><code>XPathExpression</code></a> interface executes an <a href=\"$MDN_URL$/Web/XPath\">XPath</a> expression on the given node or document and\nreturns an <a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a>.</p>",
      "parameters": {
        "contextNode": "A <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> representing the context to use for evaluating the expression.",
        "type": "Specifies the type of result to be returned by evaluating the expression. This must be one of the <a href=\"$MDN_URL$/Web/API/XPathResult#constants\" ><code>XPathResult.Constants</code></a> .",
        "result": "Allows to specify a result object which may be reused and returned by this method. If this is specified as <code>null</code> or the implementation does not reuse the specified result, a new result object will be returned."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a> object representing the result of evaluating the XPath\n  expression.</p>"
    },
    "xpathnsresolver": {
      "url": "$MDN_URL$/web/api/xpathnsresolver",
      "doc": "<p>The <code>XPathNSResolver</code> interface permits prefix strings in an <a href=\"$MDN_URL$/Glossary/XPath\">XPath</a> expression to be properly bound to namespace URI strings.</p>\n<p>The <a href=\"$MDN_URL$/Web/API/XPathEvaluator\"><code>XPathEvaluator</code></a> interface can construct an implementation of <code>XPathNSResolver</code> from a node, or the interface may be implemented by any application.</p>"
    },
    "xpathnsresolver.lookupnamespaceuri": {
      "url": "$MDN_URL$/web/api/xpathnsresolver/lookupnamespaceuri",
      "doc": "<p>The <code>lookupNamespaceURI</code> method looks up the namespace URI associated to the\ngiven namespace prefix within an <a href=\"$MDN_URL$/Glossary/XPath\">XPath</a> expression evaluated by the\n<a href=\"$MDN_URL$/Web/API/XPathEvaluator\"><code>XPathEvaluator</code></a> interface.</p>",
      "parameters": {
        "prefix": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the prefix to look for."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> representing the associated namespace URI or\n  <code>null</code> if none is found.</p>"
    },
    "xpathresult": {
      "url": "$MDN_URL$/web/api/xpathresult",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>XPathResult</code></strong> interface represents the results generated by evaluating an XPath expression within the context of a given node.</span> Since XPath expressions can result in a variety of result types, this interface makes it possible to determine and handle the type and value of the result.</p>"
    },
    "xpathresult.booleanvalue": {
      "url": "$MDN_URL$/web/api/xpathresult/booleanvalue",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <strong><code>booleanValue</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a> interface returns the boolean value of a result with\n<a href=\"$MDN_URL$/Web/API/XPathResult/resultType\"><code>XPathResult.resultType</code></a> being <code>BOOLEAN_TYPE</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>The return value is the boolean value of the <code>XPathResult</code> returned by\n  <a href=\"$MDN_URL$/Web/API/Document/evaluate\"><code>Document.evaluate()</code></a>.</p>"
    },
    "xpathresult.invaliditeratorstate": {
      "url": "$MDN_URL$/web/api/xpathresult/invaliditeratorstate",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <strong><code>invalidIteratorState</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a> interface signifies that the iterator has become invalid. It\nis <code>true</code> if <a href=\"$MDN_URL$/Web/API/XPathResult/resultType\"><code>XPathResult.resultType</code></a> is\n<code>UNORDERED_NODE_ITERATOR_TYPE</code> or <code>ORDERED_NODE_ITERATOR_TYPE</code> and\nthe document has been modified since this result was returned.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>A boolean value indicating whether the iterator has become invalid.</p>"
    },
    "xpathresult.iteratenext": {
      "url": "$MDN_URL$/web/api/xpathresult/iteratenext",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>iterateNext()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a> interface iterates over a node set result and returns the\nnext node from it or <code>null</code> if there are no more nodes.</p>",
      "returns": "<p>The next <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> within the node set of the <code>XPathResult</code>.</p>"
    },
    "xpathresult.numbervalue": {
      "url": "$MDN_URL$/web/api/xpathresult/numbervalue",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <strong><code>numberValue</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a> interface returns the numeric value of a result with\n<a href=\"$MDN_URL$/Web/API/XPathResult/resultType\"><code>XPathResult.resultType</code></a> being <code>NUMBER_TYPE</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>The return value is the numeric value of the <code>XPathResult</code> returned by\n  <a href=\"$MDN_URL$/Web/API/Document/evaluate\"><code>Document.evaluate()</code></a>.</p>"
    },
    "xpathresult.resulttype": {
      "url": "$MDN_URL$/web/api/xpathresult/resulttype",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <strong><code>resultType</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a> interface represents the type of the result, as defined by\nthe type constants.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>An integer value representing the type of the result, as defined by the <a href=\"#\">type constants</a>.</p>"
    },
    "xpathresult.singlenodevalue": {
      "url": "$MDN_URL$/web/api/xpathresult/singlenodevalue",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <strong><code>singleNodeValue</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a> interface returns a <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> value or\n<code>null</code> in case no node was matched of a result with\n<a href=\"$MDN_URL$/Web/API/XPathResult/resultType\"><code>XPathResult.resultType</code></a> being <code>ANY_UNORDERED_NODE_TYPE</code> or\n<code>FIRST_ORDERED_NODE_TYPE</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>The return value is the <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> value of the <code>XPathResult</code>\n  returned by <a href=\"$MDN_URL$/Web/API/Document/evaluate\"><code>Document.evaluate()</code></a>.</p>"
    },
    "xpathresult.snapshotitem": {
      "url": "$MDN_URL$/web/api/xpathresult/snapshotitem",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The <strong><code>snapshotItem()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a> interface returns an item of the snapshot collection or\n<code>null</code> in case the index is not within the range of nodes. Unlike the\niterator result, the snapshot does not become invalid, but may not correspond to the\ncurrent document if it is mutated.</p>",
      "returns": "<p>The <a href=\"$MDN_URL$/Web/API/Node\"><code>Node</code></a> at the given index within the node set of the\n  <code>XPathResult</code>.</p>"
    },
    "xpathresult.snapshotlength": {
      "url": "$MDN_URL$/web/api/xpathresult/snapshotlength",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <strong><code>snapshotLength</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a> interface represents the number of nodes in the result\nsnapshot.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>An integer value representing the number of nodes in the result snapshot.</p>"
    },
    "xpathresult.stringvalue": {
      "url": "$MDN_URL$/web/api/xpathresult/stringvalue",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3",
        "SafariIOS": ""
      },
      "doc": "<p>The read-only <strong><code>stringValue</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/XPathResult\"><code>XPathResult</code></a> interface returns the string value of a result with\n<a href=\"$MDN_URL$/Web/API/XPathResult/resultType\"><code>XPathResult.resultType</code></a> being <code>STRING_TYPE</code>.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> This feature is available in <a href=\"$MDN_URL$/Web/API/Web_Workers_API\">Web Workers</a></p>\n</div>",
      "returns": "<p>The return value is the string value of the <code>XPathResult</code> returned by\n  <a href=\"$MDN_URL$/Web/API/Document/evaluate\"><code>Document.evaluate()</code></a>.</p>"
    },
    "xranchor": {
      "url": "$MDN_URL$/web/api/xranchor",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "85",
        "ChromeAndroid": "85",
        "Edge": "85"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>XRAnchor</strong></code> interface creates anchors which keep track of the pose that is fixed relative to the real world. With anchors, you can specify poses in the world that need to be updated to correctly reflect the evolving understanding of the world, such that the poses remain aligned with the same place in the physical world. That helps to build an illusion that the placed objects are really present in the user’s environment.</p>"
    },
    "xranchor.anchorspace": {
      "url": "$MDN_URL$/web/api/xranchor/anchorspace",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "85",
        "ChromeAndroid": "85",
        "Edge": "85"
      },
      "doc": "<p>The read-only <code><strong>anchorSpace</strong></code> property of the <a href=\"$MDN_URL$/Web/API/XRAnchor\"><code>XRAnchor</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a> object to locate the anchor relative to other <code>XRSpace</code> objects. It can be passed to <a href=\"$MDN_URL$/Web/API/XRFrame/getPose\"><code>XRFrame.getPose()</code></a> subsequently.</p>"
    },
    "xranchor.delete": {
      "url": "$MDN_URL$/web/api/xranchor/delete",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "85",
        "ChromeAndroid": "85",
        "Edge": "85"
      },
      "doc": "<p>The <code><strong>delete()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/XRAnchor\"><code>XRAnchor</code></a> interface removes an anchor. This can be useful when an application is no longer interested in receiving updates to an anchor.</p>",
      "returns": "<p>Returns <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>.</p>"
    },
    "xranchorset": {
      "url": "$MDN_URL$/web/api/xranchorset",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "85",
        "ChromeAndroid": "85",
        "Edge": "85"
      },
      "doc": "<p>The <code><strong>XRAnchorSet</strong></code> interface exposes a collection of anchors. It is returned by <a href=\"$MDN_URL$/Web/API/XRFrame/trackedAnchors\"><code>XRFrame.trackedAnchors</code></a> and is a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Set\"><code>Set</code></a>-like object.</p>"
    },
    "xrboundedreferencespace": {
      "url": "$MDN_URL$/web/api/xrboundedreferencespace",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API</a>'s <code><strong>XRBoundedReferenceSpace</strong></code> interface describes a virtual world <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Geometry\">reference space</a> which has preset boundaries. This extends <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a>, which describes an essentially unrestricted space around the viewer's position.</span> These bounds are defined using an array of points, each of which defines a vertex in a polygon inside which the user is allowed to move.</p>\n<p>This is typically used when the XR system is capable of tracking the user's physical movement within a limited distance of their starting position. The specified bounds may, in fact, describe the shape and size of the room the user is located in, in order to let the WebXR site or application prevent the user from colliding with the walls or other obstacles in the real world.  At a minimum, the boundaries indicate the area in which the XR device is capable of tracking the user's movement. See the article <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Bounded_reference_spaces\">Using bounded reference spaces</a> for details on how bounded spaces work and why they're useful.</p>"
    },
    "xrboundedreferencespace.boundsgeometry": {
      "url": "$MDN_URL$/web/api/xrboundedreferencespace/boundsgeometry",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a>\nproperty <code><strong>boundsGeometry</strong></code> is an array of\n<a href=\"$MDN_URL$/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a> objects which specifies the points making up a polygon\ninside which the viewer is allowed to move.</span> Each point is treated as a\ntwo-dimensional point, and must be located at ground level (that is,\nits <code>y</code> coordinate must be 0).</p>\n<p>This boundary is typically configured by the user, using the software that controls\ntheir XR hardware. This may be done by walking the border of the space they wish to use,\nor by drawing the shape of their room using their XR input device. Theoretically, a more\nadvanced system might use sensors or other detection methods to determine the bounds of\na dedicated XR room (notice how we carefully don't call it a holodeck?).</p>"
    },
    "xrframe": {
      "url": "$MDN_URL$/web/api/xrframe",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\"><span class=\"seoSummary\">A <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API</a> <code><strong>XRFrame</strong></code> object is passed into the <a href=\"$MDN_URL$/Web/API/XRSession/requestAnimationFrame\" ><code>requestAnimationFrame()</code></a> callback function and provides access to the information needed in order to render a single frame of animation for an <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> describing a VR or AR sccene.</span> Events which communicate the tracking state of objects also provide an <code>XRFrame</code> reference as part of their structure.</p>\n<p class=\"summary\">In addition to providing a reference to the <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> for which this frame is to be rendered, the <a href=\"$MDN_URL$/Web/API/XRFrame/getViewerPose\" ><code>getViewerPose()</code></a> method is provided to obtain the <a href=\"$MDN_URL$/Web/API/XRViewerPose\"><code>XRViewerPose</code></a> describing the viewer's position and orientation in space, and <a href=\"$MDN_URL$/Web/API/XRFrame/getPose\" ><code>getPose()</code></a> can be used to create an <a href=\"$MDN_URL$/Web/API/XRPose\"><code>XRPose</code></a> describing the relative position of one <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a> relative to another.</p>"
    },
    "xrframe.createanchor": {
      "url": "$MDN_URL$/web/api/xrframe/createanchor",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "85",
        "ChromeAndroid": "85",
        "Edge": "85"
      },
      "doc": "<p>The <code><strong>createAnchor()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/XRFrame\"><code>XRFrame</code></a> interface creates a free-floating <a href=\"$MDN_URL$/Web/API/XRAnchor\"><code>XRAnchor</code></a> which will be fixed relative to the real world.</p>",
      "parameters": {
        "pose": "An <a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> object with the initial pose where the anchor should be created. The system will make sure that the relationship with the physical world made at this moment in time is maintained as the tracking system's understanding of the world evolves.",
        "space": "An <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a> object the pose is relative to."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> resolving to an <a href=\"$MDN_URL$/Web/API/XRAnchor\"><code>XRAnchor</code></a> object.</p>"
    },
    "xrframe.getpose": {
      "url": "$MDN_URL$/web/api/xrframe/getpose",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p class=\"summary\"><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRFrame\"><code>XRFrame</code></a>\nmethod <code><strong>getPose()</strong></code> returns the relative position and\norientation—the pose—of one <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a> to that of another space.</span>\nWith this, you can observe the motion of objects relative to each other and to fixed\nlocations throughout the scene.</p>\n<p class=\"summary\">For example, to get the position of a controller relative to the\nviewer's head, you would compare the controller's <a href=\"$MDN_URL$/Web/API/XRInputSource/gripSpace\" ><code>gripSpace</code></a> to the <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> of type <code>viewer</code>.</p>",
      "parameters": {
        "space": "An <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a> specifying the space for which to obtain an <a href=\"$MDN_URL$/Web/API/XRPose\"><code>XRPose</code></a> describing the item's position and orientation.",
        "baseSpace": "An <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a> to use as the base or origin for the purposes of computing the relative position and orientation."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/XRPose\"><code>XRPose</code></a> object specifying the position and orientation, relative to\n  the <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a> indicated by <code>baseSpace</code>.</p>"
    },
    "xrframe.getviewerpose": {
      "url": "$MDN_URL$/web/api/xrframe/getviewerpose",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p class=\"summary\"><span class=\"seoSummary\">The <code><strong>getViewerPose()</strong></code> method, a member\nof the <a href=\"$MDN_URL$/Web/API/XRFrame\"><code>XRFrame</code></a> interface, returns a <a href=\"$MDN_URL$/Web/API/XRViewerPose\"><code>XRViewerPose</code></a> object\nwhich describes the viewer's pose (position and orientation) relative to the specified\nreference space.</span></p>\n<p>See the <a href=\"$MDN_URL$/Web/API/XRFrame/getPose\" ><code>getPose()</code></a> method for a way to calculate a\npose that represents the difference between two spaces.</p>",
      "parameters": {
        "referenceSpace": "An <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> object specifying the space to use as the reference point or base for the computation of the viewer's current pose."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/XRViewerPose\"><code>XRViewerPose</code></a> describing the viewer's position and orientation relative\n  to the specified reference space.</p>",
      "throws": {
        "InvalidStateError": "A <a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a> indicating that <code>getViewerPose()</code> was not called within the context of a callback to a session's  <a href=\"$MDN_URL$/Web/API/XRSession/requestAnimationFrame\" ><code>XRSession.requestAnimationFrame()</code></a> ."
      }
    },
    "xrframe.session": {
      "url": "$MDN_URL$/web/api/xrframe/session",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">An <code>XRFrame</code> object's\n<em>read-only</em> <code><strong>session</strong></code> property returns the\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object that generated the frame.</span></p>"
    },
    "xrframe.trackedanchors": {
      "url": "$MDN_URL$/web/api/xrframe/trackedanchors",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "85",
        "ChromeAndroid": "85",
        "Edge": "85"
      },
      "doc": "<p>The read-only <code><strong>trackedAnchor</strong></code> property of the <a href=\"$MDN_URL$/Web/API/XRFrame\"><code>XRFrame</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/XRAnchorSet\"><code>XRAnchorSet</code></a> object containing all anchors still tracked in the frame.</p>"
    },
    "xrinputsource": {
      "url": "$MDN_URL$/web/api/xrinputsource",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API's</a> <strong><code>XRInputSource</code></strong> interface describes a single source of control input which is part of the user's WebXR-compatible virtual or augmented reality system.</span> The device is specific to the platform being used, but provides the direction in which it is being aimed and optionally may generate events if the user triggers performs actions using the device.</p>"
    },
    "xrinputsource.gamepad": {
      "url": "$MDN_URL$/web/api/xrinputsource/gamepad",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> property <code><strong>gamepad</strong></code> returns a <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> object describing the state of the buttons and axes on the XR input source, if it is a gamepad or comparable device. If the device isn't a gamepad-like device, this property's value is <code>null</code>.</p>\n<p>The <a href=\"$MDN_URL$/Web/API/Gamepad\"><code>Gamepad</code></a> instance returned behaves as described by the <a href=\"$MDN_URL$/Web/API/Gamepad_API\">Gamepad API</a>. However, there are a few things to note:</p>\n<ul>\n<li><code>XRInputSource</code> <code>Gamepad</code> instances are not included in the array returned by <a href=\"$MDN_URL$/Web/API/Navigator/getGamepads\"><code>navigator.getGamepads()</code></a>. Gamepads are strictly associated with the WebXR hardware and are not general-purpose gaming devices.</li>\n<li><a href=\"$MDN_URL$/Web/API/Gamepad/id\"><code>Gamepad.id</code></a> is an empty string (<code>\"\"</code>)</li>\n<li><a href=\"$MDN_URL$/Web/API/Gamepad/index\"><code>Gamepad.index</code></a> is <code>-1</code></li>\n<li><a href=\"$MDN_URL$/Web/API/Gamepad/connected\"><code>Gamepad.connected</code></a> is <code>true</code> until the <code>XRInputSource</code> is removed from the list of active XR input sources or the <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> is ended.</li>\n<li>If an axis reported by <a href=\"$MDN_URL$/Web/API/Gamepad/axes\"><code>Gamepad.axes</code></a> represents an axis of a touchpad, the value is 0 when the associated <a class=\"page-not-created\"  ><code>GamepadButton.touched</code></a> property is <code>false</code>.</li>\n<li><a href=\"$MDN_URL$/Web/API/Gamepad/mapping\"><code>Gamepad.mapping</code></a> returns \"xr-standard\".</li>\n</ul>"
    },
    "xrinputsource.gripspace": {
      "url": "$MDN_URL$/web/api/xrinputsource/gripspace",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p class=\"summary\"><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a>\nproperty <code><strong>gripSpace</strong></code> returns an <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a>\nwhose native origin tracks the pose used to render virtual objects so they appear to\nbe held in (or part of) the user's hand.</span> For example, if a user were holding a\nvirtual straight rod, the native origin of this <code>XRSpace</code> would be located at\nthe approximate center of mass of the user's fist.</p>"
    },
    "xrinputsource.handedness": {
      "url": "$MDN_URL$/web/api/xrinputsource/handedness",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> property\n<code><strong>handedness</strong></code> indicates which of the user's hands the WebXR\ninput source is associated with, or if it's not associated with a hand at all.</p>"
    },
    "xrinputsource.profiles": {
      "url": "$MDN_URL$/web/api/xrinputsource/profiles",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> property\n<code><strong>profiles</strong></code> returns an array of strings, each describing a\nconfiguration profile for the input source.</span> The profile strings are listed in\norder of specificity, with the most specific profile listed first.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> The <code>profiles</code> list is always empty when the WebXR\nsession is in inline mode.</p>\n</div>"
    },
    "xrinputsource.targetraymode": {
      "url": "$MDN_URL$/web/api/xrinputsource/targetraymode",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a>\nproperty <strong><code>targetRayMode</code></strong> indicates the method by which the\ntarget ray for the input source should be generated and how it should be presented to\nthe user.</p>\n<p>Typically a target ray is drawn from the source of the targeting system along the target ray in the direction in which the user is looking or pointing. The style of the ray is generally up to you, as is the method for indicating the endpoint of the ray. The targeted point or object might be indicated by drawing a shape or highlighting the targeted surface or object.</p>\n<p>A target ray emitted by a hand controller:</p>\n<p>The target ray can be anything from a simple line (ideally fading over distance) to an animated effect, such as the science-fiction \"phaser\" style shown in the screenshot above.</p>"
    },
    "xrinputsource.targetrayspace": {
      "url": "$MDN_URL$/web/api/xrinputsource/targetrayspace",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> property\n<code><strong>targetRaySpace</strong></code> returns an <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a>\n(typically an <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a>) representing the position and\norientation of the target ray in the virtual space.</span> Its native origin tracks\nthe position of the origin point of the target ray, and its orientation indicates the\norientation of the controller device itself. These values, interpreted in the context of\nthe input source's <a href=\"$MDN_URL$/Web/API/XRInputSource/targetRayMode\" ><code>targetRayMode</code></a>, can be\nused both to fully interpret the device as an input source.</p>\n<p><strong>&lt;&lt;&lt;--- needs diagram showing targetRaySpace relative to gripSpace and\nworld space ---&gt;&gt;&gt;</strong></p>\n<p>To obtain an <code>XRSpace</code> representing the input controller's position and\norientation in virtual space, use the <a href=\"$MDN_URL$/Web/API/XRInputSource/gripSpace\" ><code>gripSpace</code></a> property.</p>"
    },
    "xrinputsourcearray": {
      "url": "$MDN_URL$/web/api/xrinputsourcearray",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">The interface <code><strong>XRInputSourceArray</strong></code> represents a <em>live</em> list of WebXR input sources, and is used as the return value of the <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> property <a href=\"$MDN_URL$/Web/API/XRSession/inputSources\" ><code>inputSources</code></a>.</span> Each entry is an <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> representing one input device connected to the WebXR system.</p>\n<p>In addition to being able to access the input sources in the list using standard array notation (that is, with index numbers insize square brackets), methods are available to allow the use of iterators and the <a href=\"$MDN_URL$/Web/API/XRInputSourceArray/forEach\" ><code>forEach()</code></a> method is also available.</p>"
    },
    "xrinputsourcearray.entries": {
      "url": "$MDN_URL$/web/api/xrinputsourcearray/entries",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a> interface's\n<code><strong>entries()</strong></code> method returns a JavaScript\n<code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\">iterator</a></code>\nwhich can then be used to iterate over the key/value pairs in the input source\narray.</span> Each item in the array is an <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> object.</p>\n<p>Most frequently, you will use this in tandem with statements such as\n<code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Statements/for...of\">for...of</a></code>.</p>",
      "returns": "<p>An\n  <code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Iteration_protocols\">iterator</a></code>\n  which can be used to walk through the list of <code>XRInputSource</code> objects\n  included in the input source array.</p>"
    },
    "xrinputsourcearray.foreach": {
      "url": "$MDN_URL$/web/api/xrinputsourcearray/foreach",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a>\nmethod <code><strong>forEach()</strong></code> executes the specified callback once for\neach input source in the array, starting at index 0 and progressing until the end of the\nlist.</p>",
      "parameters": {
        "callback": "A function to execute once for each entry in the array <code>xrInputSourceArray</code>. The callback accepts up to three parameters:<br> <dl> <dt><code>currentValue</code></dt> <dd>A <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> object which is the value of the item from within the <code>xrInputSourceArray</code> which is currently being processed.</dd> <dt><code>currentIndex</code> <span class=\"badge inline optional\">Optional</span></dt> <dd>An integer value providing the index into the array at which the element given by <code>currentValue</code> is located. If you don't need to know the index number, you can omit this.</dd> <dt><code>sourceList</code> <span class=\"badge inline optional\">Optional</span></dt> <dd>The <a href=\"$MDN_URL$/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a> object which is being processed. If you don't need this information, you may omit this.</dd> </dl>",
        "thisArg": "The value to be used for <code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Operators/this\">this</a></code> while executing the callback. Note that if you use <a href=\"$MDN_URL$/Web/JavaScript/Reference/Functions/Arrow_functions\">arrow function notation</a> ( <code>=&gt;</code> ) to provide the callback, you can omit  <code>thisArg</code> , since all arrow functions lexically bind  <code>this</code> ."
      },
      "returns": "<p>Undefined.</p>"
    },
    "xrinputsourcearray.keys": {
      "url": "$MDN_URL$/web/api/xrinputsourcearray/keys",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The <code><strong>keys()</strong></code> method in the\n<a href=\"$MDN_URL$/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a> interface returns a <a href=\"$MDN_URL$/Glossary/JavaScript\">JavaScript</a>\n<code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Iterator\" class=\"page-not-created\"  data-flaw=\"link1\">iterator</a></code>\nwhich can then be used to iterate over the keys used to reference each item in the array\nof input sources.</p>",
      "returns": "<p>A\n  JavaScript <code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Iterator\" class=\"page-not-created\" title=\"This is a link to an unwritten page\" data-flaw=\"link2\">iterator</a></code> that\n  can be used to walk through the keys for each entry in the list of input sources. The\n  values returned by the iterator are the indexes of each entry in the list; that is, the\n  numbers 0, 1, 2, and so forth through the index of the last item in the list.</p>"
    },
    "xrinputsourcearray.length": {
      "url": "$MDN_URL$/web/api/xrinputsourcearray/length",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The read-only <code><strong>length</strong></code> property returns an integer value\nindicating the number of items in the input source list represented by\nthe <a href=\"$MDN_URL$/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a> object.</p>"
    },
    "xrinputsourcearray.values": {
      "url": "$MDN_URL$/web/api/xrinputsourcearray/values",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a>\nmethod  <code><strong>values()</strong></code> returns a <a href=\"$MDN_URL$/Glossary/JavaScript\">JavaScript</a>\n<code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Iterator\" class=\"page-not-created\"  data-flaw=\"link1\">iterator</a></code>\nthat can walk over the list of <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> objects contained in the\narray, from first to last.</p>",
      "returns": "<p>A\n  JavaScript <code><a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Iterator\" class=\"page-not-created\" title=\"This is a link to an unwritten page\" data-flaw=\"link2\">iterator</a></code> that\n  can be used to walk through the list of <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> objects in the\n  array, starting with the first entry (at index 0) and proceeding straight through the\n  list.</p>"
    },
    "xrinputsourceevent": {
      "url": "$MDN_URL$/web/api/xrinputsourceevent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API</a>'s <code><strong>XRInputSourceEvent</strong></code> interface describes an event which has occurred on a WebXR user input device such as a hand controller, gaze tracking system, or motion tracking system.</span> More specifically, they represent a change in the state of an <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a>.</p>\n<p>To learn more about handling inputs in a WebXR project, see the article <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Inputs\">Inputs and input sources</a>.</p>"
    },
    "xrinputsourceevent.frame": {
      "url": "$MDN_URL$/web/api/xrinputsourceevent/frame",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a> property\n<code><strong>frame</strong></code> specifies an <a href=\"$MDN_URL$/Web/API/XRFrame\"><code>XRFrame</code></a> object\nrepresenting the event frame during which a <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR</a> user input occurred.</span>\nThis may thus be an event which occurred in the past rather than a current or impending\nevent.</p>"
    },
    "xrinputsourceevent.inputsource": {
      "url": "$MDN_URL$/web/api/xrinputsourceevent/inputsource",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a> interface's read-only\n<code><strong>inputSource</strong></code> property specifies the\n<a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> which generated the input event.</span> This information\nlets you handle the event appropriately given the particulars of the user input device\nbeing manipulated.</p>"
    },
    "xrinputsourceevent.xrinputsourceevent": {
      "url": "$MDN_URL$/web/api/xrinputsourceevent/xrinputsourceevent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>XRInputSourceEvent()</strong></code>\nconstructor creates and returns a new <a href=\"$MDN_URL$/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a> object\ndescribing an event (state change) which has occurred on a WebXR user input device\nrepresented by an <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a>.</span></p>",
      "parameters": {
        "type": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> indicating which of the input source events the new object will represent. Permitted values are listed under <a href=\"#event_types\">Event types</a> below.",
        "eventInitDict": "An object to configure the event with the following properties: <ul> <li><code>frame</code>: An <a href=\"$MDN_URL$/Web/API/XRFrame\"><code>XRFrame</code></a> object representing the event frame during which the event took place. This event is <em>not</em> associated with the animation process, and has no viewer information contained within it.</li> <li><code>inputSource</code>: An <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> object representing the input device from which the event is being sent.</li> </ul>"
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/XRInputSourceEvent\"><code>XRInputSourceEvent</code></a> object representing the event described by the\n  given <code>type</code> and <code>eventInitDict</code>.</p>"
    },
    "xrinputsourceschangeevent": {
      "url": "$MDN_URL$/web/api/xrinputsourceschangeevent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The WebXR Device API interface <code><strong>XRInputSourcesChangeEvent</strong></code> is used to represent the <a href=\"$MDN_URL$/Web/API/XRSession/inputsourceschange_event\" ><code>inputsourceschange</code></a> event sent to an <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> when the set of available WebXR input controllers changes.</p>"
    },
    "xrinputsourceschangeevent.added": {
      "url": "$MDN_URL$/web/api/xrinputsourceschangeevent/added",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a>\nproperty <a href=\"$MDN_URL$/Web/API/XRInputSourcesChangeEvent/added\"  aria-current=\"page\"><code>added</code></a> is a list of zero or\nmore input sources, each identified using an <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> object,\nwhich have been newly made available for use.</span></p>"
    },
    "xrinputsourceschangeevent.removed": {
      "url": "$MDN_URL$/web/api/xrinputsourceschangeevent/removed",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a> property <a href=\"$MDN_URL$/Web/API/XRInputSourcesChangeEvent/removed\"  aria-current=\"page\"><code>removed</code></a> is an array of\nzero or more <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> objects representing the input sources that have been removed from the <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a>.</p>"
    },
    "xrinputsourceschangeevent.session": {
      "url": "$MDN_URL$/web/api/xrinputsourceschangeevent/session",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a> property\n<a href=\"$MDN_URL$/Web/API/XRInputSourcesChangeEvent/session\"  aria-current=\"page\"><code>session</code></a> specifies the\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> to which the input source list change event applies.</span></p>"
    },
    "xrinputsourceschangeevent.xrinputsourceschangeevent": {
      "url": "$MDN_URL$/web/api/xrinputsourceschangeevent/xrinputsourceschangeevent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>XRInputSourcesChangeEvent()</strong></code>\nconstructor creates and returns a new <a href=\"$MDN_URL$/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a> object,\nrepresenting an update to the list of available <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR</a> input devices.</span> You\nwon't typically call this constructor yourself, as these events are created and sent to\nyou by the WebXR system.</p>",
      "parameters": {
        "type": "A string indicating the type of event which has occurred. This string must always be <code>inputsourceschange</code> .",
        "eventInitDict": "An object that provides options to configure the event. It may contain the following properties: <ul> <li><code>added</code>: An array of zero or more <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> objects, each representing one input device which is newly available to use.</li> <li><code>removed</code>: An array of zero or more <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> objects representing the input devices which are no longer available.</li> <li><code>session</code>: The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> to which the event applies.</li> </ul>"
      },
      "returns": "<p>A newly-created <a href=\"$MDN_URL$/Web/API/XRInputSourcesChangeEvent\"><code>XRInputSourcesChangeEvent</code></a> object configured based upon\n  the input parameters provided.</p>"
    },
    "xrpermissiondescriptor": {
      "url": "$MDN_URL$/web/api/xrpermissiondescriptor",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">User permissions in the <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API</a> are managed using the <a href=\"$MDN_URL$/Web/API/Permissions_API\">Permissions API</a>. To that end, the <code><strong>XRPermissionDescriptor</strong></code> dictionary is used to describe the WebXR features the app needs to use, as well as those features it would like ot use if permision is granted.</span></p>\n<p>The <code>XRPermissionDescriptor</code>'s <a class=\"page-not-created\"  ><code>name</code></a> must be set to <code>xr</code> in order to direct the Permissions API to correctly handle the request as applying to WebXR.</p>"
    },
    "xrpermissiondescriptor.mode": {
      "url": "$MDN_URL$/web/api/xrpermissiondescriptor/mode",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>mode</strong></code> property of\nthe <a href=\"$MDN_URL$/Web/API/XRPermissionDescriptor\"><code>XRPermissionDescriptor</code></a> dictionary is a string, specifying which Web XR session mode\n(<code>inline</code>, <code>immersive-vr</code>, or <code>immersive-ar</code>) the\ndescribed permissions will be used for.</p>"
    },
    "xrpermissiondescriptor.optionalfeatures": {
      "url": "$MDN_URL$/web/api/xrpermissiondescriptor/optionalfeatures",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRPermissionDescriptor\"><code>XRPermissionDescriptor</code></a>\ndictionary's <code><strong>optionalFeatures</strong></code> property is used to\nspecify a list of WebXR features which your app or site would like to use but can\noperate without if permission isn't granted to use them.</span></p>"
    },
    "xrpermissiondescriptor.requiredfeatures": {
      "url": "$MDN_URL$/web/api/xrpermissiondescriptor/requiredfeatures",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRPermissionDescriptor\"><code>XRPermissionDescriptor</code></a>\ndictionary's <code><strong>requiredFeatures</strong></code> property should be set\nprior to calling <a href=\"$MDN_URL$/Web/API/Permissions/query\" ><code>navigator.permissions.query()</code></a> to\na list of WebXR features which must be supported for the app to work.</span> This\nensures that permissions are checked as applicable to ensure that those features are\navailable upon request.</p>"
    },
    "xrpermissionstatus": {
      "url": "$MDN_URL$/web/api/xrpermissionstatus",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>XRPermissionStatus</strong></code> interface defines the object returned by calling <a href=\"$MDN_URL$/Web/API/Permissions/query\" ><code>navigator.permissions.query()</code></a> for the <code>xr</code> permission name; it indicates whether or not the app or site has permission to use WebXR, an may be monitored over time for changes to that permissions tate.</p>"
    },
    "xrpermissionstatus.granted": {
      "url": "$MDN_URL$/web/api/xrpermissionstatus/granted",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {},
      "doc": "<p>The WebXR Device API's <a href=\"$MDN_URL$/Web/API/XRPermissionStatus\"><code>XRPermissionStatus</code></a>\ninterface's <code><strong>granted</strong></code> property is an array of strings, each\nidentifying one of the WebXR features for which permission has been granted as of the\ntime at which the Permission API's <a href=\"$MDN_URL$/Web/API/Permissions/query\" ><code>navigator.permissions.query()</code></a> method was called.</p>"
    },
    "xrpose": {
      "url": "$MDN_URL$/web/api/xrpose",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\"><code>XRPose</code> is a <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR API</a> interface representing a position and orientation in the 3D space, relative to the <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a> within which it resides.</span> The <code>XRSpace</code>—which is either an <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> or an <a href=\"$MDN_URL$/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a>—defines the coordinate system used for the pose and, in the case of an <a href=\"$MDN_URL$/Web/API/XRViewerPose\"><code>XRViewerPose</code></a>, its underlying views.</p>\n<p>To obtain the <code>XRPose</code> for the <code>XRSpace</code> used as the local coordinate system of an object, call <a href=\"$MDN_URL$/Web/API/XRFrame/getPose\"><code>XRFrame.getPose()</code></a>, specifying that local <code>XRSpace</code> and the space to which you wish to convert:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>thePose = xrFrame.getPose(localSpace, baseSpace);</code></pre></div>\n<p>The pose for a viewer (or camera) is represented by the <a href=\"$MDN_URL$/Web/API/XRViewerPose\"><code>XRViewerPose</code></a> subclass of <code>XRPose</code>. This is obtained using <a href=\"$MDN_URL$/Web/API/XRFrame/getViewerPose\"><code>XRFrame.getViewerPose()</code></a>  instead of <code>getPose()</code>, specifying a reference space which has been adjusted to position and orient the node to provide the desired viewing position and angle:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>viewerPose = xrFrame.getViewerPose(adjReferenceSpace);</code></pre></div>\n<p>Here, <code>adjReferenceSpace</code> is a reference space which has been updated using the base frame of reference for the frame and any adjustments needed to position the viewer based on movement or rotation which is being supplied from a source other than the XR device, such as keyboard or mouse inputs<strong>.</strong></p>\n<p>See the article <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Movement_and_motion\">Movement, orientation, and motion</a> for further details and an example with thorough explanations of what's going on.</p>"
    },
    "xrpose.angularvelocity": {
      "url": "$MDN_URL$/web/api/xrpose/angularvelocity",
      "doc": "<p>The <code>angularVelocity</code> read-only property of the\n<a href=\"$MDN_URL$/Web/API/XRPose\"><code>XRPose</code></a> interface is a <a href=\"$MDN_URL$/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a> describing\nthe angular velocity in radians per second relative to the base\n<a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a>.</p>"
    },
    "xrpose.emulatedposition": {
      "url": "$MDN_URL$/web/api/xrpose/emulatedposition",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code>emulatedPosition</code> read-only attribute of the\n<a href=\"$MDN_URL$/Web/API/XRPose\"><code>XRPose</code></a> interface is a Boolean value indicating whether or not both the\n<a href=\"$MDN_URL$/Web/API/XRRigidTransform/position\" ><code>position</code></a> component of the pose's\n<a href=\"$MDN_URL$/Web/API/XRPose/transform\" ><code>transform</code></a> is directly taken from the XR device, or\nit's simulated or computed based on other sources.</span></p>"
    },
    "xrpose.linearvelocity": {
      "url": "$MDN_URL$/web/api/xrpose/linearvelocity",
      "doc": "<p>The <code>linearVelocity</code> read-only property of the\n<a href=\"$MDN_URL$/Web/API/XRPose\"><code>XRPose</code></a> interface is a <a href=\"$MDN_URL$/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a> describing\nthe linear velocity in meters per second relative to the base\n<a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a>.</p>"
    },
    "xrpose.transform": {
      "url": "$MDN_URL$/web/api/xrpose/transform",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p><span class=\"seoSummary\">The <code>transform</code> read-only attribute of the\n<a href=\"$MDN_URL$/Web/API/XRPose\"><code>XRPose</code></a> interface is a <a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> object providing\nthe position and orientation of the pose relative to the base <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a>\nas specified when the pose was obtained by calling\n<a href=\"$MDN_URL$/Web/API/XRFrame/getPose\"><code>XRFrame.getPose()</code></a>.</span></p>"
    },
    "xrreferencespace": {
      "url": "$MDN_URL$/web/api/xrreferencespace",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">The WebXR Device API's <code><strong>XRReferenceSpace</strong></code> interface describes the coordinate system for a specific tracked entity or object within the virtual world using a specified tracking behavior.</span> The tracking behavior is defined by the selected <a href=\"$MDN_URL$/Web/API/XRReferenceSpace#Reference_space_types\" aria-current=\"page\" data-flaw=\"link1\">reference space type</a>. It expands upon the base class, <a href=\"$MDN_URL$/Web/API/XRSpace\"><code>XRSpace</code></a>, by adding support for several different tracking behaviors as well as to request a new reference space which describes the offset transform between the tracked object and another location in the world.</p>\n<p>All reference spaces—with the sole exception being bounded reference spaces—are described using the <code>XRReferenceSpace</code> type. Bounded spaces are implemented as <a href=\"$MDN_URL$/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a> objects. These are special spaces which let you establish a perimeter within which it's \"safe\" for the viewer to move. For XR systems that allow the user to physically move around, such as those that track movement with a real-world camera, this boundary establishes the edges of the area the user is able to move around in, whether due to physical obstacles or due to limitations of the XR hardware. See the article <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Bounded_reference_spaces\">Using bounded reference spaces to protect the viewer</a> for more on using boundaries to keep the user from colliding with obstacles both physical and virtual.</p>"
    },
    "xrreferencespace.getoffsetreferencespace": {
      "url": "$MDN_URL$/web/api/xrreferencespace/getoffsetreferencespace",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a>\ninterface's <code><strong>getOffsetReferenceSpace()</strong></code> method returns a\nnew reference space object which describes the relative difference in position between\nthe object on which the method is called and a given point in 3D space.</span> The\nobject returned by <code>getOffsetReferenceSpace()</code> is an\n<a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> if called on an <code>XRReferenceSpace</code>, or an\n<a href=\"$MDN_URL$/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a> if called on an object of that type.</p>\n<p>In other words, when you have an object in 3D space and need to position another object\nrelative to that one, you can call <code>getOffsetReferenceSpace()</code>, passing into\nit the position and orientation you want the second object to have <em>relative to the\nposition and orientation of the object on which you\ncall <code>getOffsetReferenceSpace()</code></em>.</p>\n<p>Then, when drawing the scene, you can use the offset reference space to not only\nposition objects relative to one another, but to apply the needed transforms to render\nobjects properly based upon the viewer's position. This is demonstrated in the example\n<a href=\"#implementing_rotation_based_on_non-xr_inputs\">Implementing rotation based on non-XR inputs</a>, which demonstrates a way to\nuse this method to let the user use their mouse to pitch and yaw their viewing angle.</p>",
      "parameters": {
        "originOffset": "An <a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> specifying the offset to the origin of the new reference space. These values are added to the position and orientation of the current reference space and then the result is used as the position and orientation of the newly created <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> ."
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> object describing a reference space with the same\n  native origin as the reference space on which the method was called, but with an origin\n  offset indicating the distance from the object to the point given\n  by <code>originOffset</code>.</p>\n\n<p>If the object on which you call this method is an\n  <a href=\"$MDN_URL$/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a>, the returned object is one as well. The\n  <a href=\"$MDN_URL$/Web/API/XRBoundedReferenceSpace/boundsGeometry\" title=\"boundsGeometry\"><code>boundsGeometry</code></a> of the new\n  reference space is set to the original object's <code>boundsGeometry</code> with each of\n  its points multiplied by the inverse of <code>originOffset</code>.</p>"
    },
    "xrreferencespace.onreset": {
      "url": "$MDN_URL$/web/api/xrreferencespace/onreset",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a>\ninterface's <code><strong>onreset</strong></code> event handler property can be set to a\nfunction which is called when the <code>XRReferenceSpace</code> receives a\n<a href=\"$MDN_URL$/Web/API/XRReferenceSpace/reset_event\" ><code>reset</code></a> event, signaling that the  XR\ndevice has experienced a discontinuity large enough to require that the position and/or\norientation of the origin be significantly altered to compensate.</p>"
    },
    "xrreferencespaceevent": {
      "url": "$MDN_URL$/web/api/xrreferencespaceevent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API</a> interface <code><strong>XRReferenceSpaceEvent</strong></code> represents an event sent to an <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a>. Currently, the only event  that uses this type is the <a href=\"$MDN_URL$/Web/API/XRReferenceSpace/reset_event\" ><code>reset</code></a> event.</span></p>"
    },
    "xrreferencespaceevent.referencespace": {
      "url": "$MDN_URL$/web/api/xrreferencespaceevent/referencespace",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/XRReferenceSpaceEvent\"><code>XRReferenceSpaceEvent</code></a> property\n<code><strong>referenceSpace</strong></code> specifies the reference space which is the\noriginator of the event.</p>"
    },
    "xrreferencespaceevent.transform": {
      "url": "$MDN_URL$/web/api/xrreferencespaceevent/transform",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRReferenceSpaceEvent\"><code>XRReferenceSpaceEvent</code></a> property\n<code><strong>transform</strong></code> indicates the position and orientation of the\naffected <a href=\"$MDN_URL$/Web/API/XRReferenceSpaceEvent/referenceSpace\" ><code>referenceSpace</code></a>'s\nnative origin after the changes the event represents are applied.</span> The\n<code>transform</code> is defined using the old coordinate system, which allows it to be\nused to convert coordinates from the pre-event coordinate system to the post-event\ncoordiante system.</p>"
    },
    "xrreferencespaceevent.xrreferencespaceevent": {
      "url": "$MDN_URL$/web/api/xrreferencespaceevent/xrreferencespaceevent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>XRReferenceSpaceEvent()</strong></code>\nconstructor is used to create a new <a href=\"$MDN_URL$/Web/API/XRReferenceSpaceEvent\"><code>XRReferenceSpaceEvent</code></a> object, which\nrepresents an event regarding the state of a WebXR reference space object,\n<a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a>.</span></p>\n<p>Currently, only the <a href=\"$MDN_URL$/Web/API/XRReferenceSpace/reset_event\" ><code>reset</code></a> event is\ndefined using this type.</p>",
      "parameters": {
        "type": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> indicating the event type which has occurred. Currently, this is always <code>reset</code> .",
        "eventInitDict": "An object to configure the event. The properties are:<br> <ul> <li><code>referenceSpace</code>: The <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> from which the event originates.</li> <li><code>transform</code>: An <a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> which maps the old coordinate system (from before the changes indicated by this event) to the new coordiante system.</li> </ul>"
      },
      "returns": "<p>A new <code>XRReferenceSpaceEvent</code> object, initialized as defined by the input parameters.</p>"
    },
    "xrrenderstate": {
      "url": "$MDN_URL$/web/api/xrrenderstate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p><span class=\"seoSummary\">The <code><strong>XRRenderState</strong></code> interface of the <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API</a> contains configurable values which affect how the imagery generated by an <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> gets composited. </span>These properties include the range of distances from the viewer within which content should be rendered, the vertical field of view (for inline presentations), and a reference to the <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> being used as the target for rendering the scene prior to it being presented on the XR device's display or displays.</p>\n<p>When you apply changes using the <code>XRSession</code> method <a href=\"$MDN_URL$/Web/API/XRSession/updateRenderState\" ><code>updateRenderState()</code></a>, the specified changes take effect after the current animation frame has completed, but before the next one begins.</p>"
    },
    "xrrenderstate.baselayer": {
      "url": "$MDN_URL$/web/api/xrrenderstate/baselayer",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p class=\"summary\">The read-only <strong><code>baseLayer</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/XRRenderState\"><code>XRRenderState</code></a> interface returns the <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> instance\nthat is the source of bitmap images and a description of how the image is to be rendered\nin the device.</p>\n<p class=\"summary\">This property is read-only; however, you can indirectly change its\nvalue using  <a href=\"$MDN_URL$/Web/API/XRSession/updateRenderState\"><code>XRSession.updateRenderState</code></a>.</p>"
    },
    "xrrenderstate.depthfar": {
      "url": "$MDN_URL$/web/api/xrrenderstate/depthfar",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p class=\"summary\">The <strong><code>depthFar</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/XRRenderState\"><code>XRRenderState</code></a> interface returns the distance in meters of the far clip\nplane from the viewer.</p>"
    },
    "xrrenderstate.depthnear": {
      "url": "$MDN_URL$/web/api/xrrenderstate/depthnear",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p class=\"summary\">The <strong><code>depthNear</code></strong> read-only property of the\n<a href=\"$MDN_URL$/Web/API/XRRenderState\"><code>XRRenderState</code></a> interface returns the distance in meters of the near clip\nplane from the viewer.</p>"
    },
    "xrrenderstate.inlineverticalfieldofview": {
      "url": "$MDN_URL$/web/api/xrrenderstate/inlineverticalfieldofview",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p class=\"summary\">The read-only <strong><code>inlineVerticalFieldOfView</code></strong>\nproperty of the <a href=\"$MDN_URL$/Web/API/XRRenderState\"><code>XRRenderState</code></a> interface returns the default vertical\nfield of view for <code>\"inline\"</code> sessions and <code>null</code> for all immersive\nsessions.</p>"
    },
    "xrrigidtransform": {
      "url": "$MDN_URL$/web/api/xrrigidtransform",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The <strong><code>XRRigidTransform</code></strong> is a <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR API</a> interface that represents the 3D geometric transform described by a position and orientation.</p>\n<p><code>XRRigidTransform</code> is used to specify transforms throughout the WebXR APIs, including:</p>\n<ul>\n<li>The offset and orientation relative to the parent reference space to use when creating a new reference space with <a href=\"$MDN_URL$/Web/API/XRReferenceSpace/getOffsetReferenceSpace\" ><code>getOffsetReferenceSpace()</code></a>.</li>\n<li>The <a href=\"$MDN_URL$/Web/API/XRView/transform\" ><code>transform</code></a> of an <a href=\"$MDN_URL$/Web/API/XRView\"><code>XRView</code></a>.</li>\n<li>The <a href=\"$MDN_URL$/Web/API/XRPose/transform\" ><code>transform</code></a> of an <a href=\"$MDN_URL$/Web/API/XRPose\"><code>XRPose</code></a>.</li>\n<li>The <a href=\"$MDN_URL$/Web/API/XRReferenceSpaceEvent\"><code>XRReferenceSpaceEvent</code></a> event's <a href=\"$MDN_URL$/Web/API/XRReferenceSpaceEvent/transform\" ><code>transform</code></a> property, as found in the <a href=\"$MDN_URL$/Web/API/XRReferenceSpace/reset_event\" ><code>reset</code></a> event received by an <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a>.</li>\n</ul>\n<p>Using <code>XRRigidTransform</code> in these places rather than bare arrays that provide the matrix data has an advantage. It automatically computes the inverse of the transform and even caches it making subsequent requests significantly faster.</p>"
    },
    "xrrigidtransform.inverse": {
      "url": "$MDN_URL$/web/api/xrrigidtransform/inverse",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <code><strong>inverse</strong></code> property\nof the <a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> interface returns another\n<a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> object which is the inverse of its owning\ntransform.</span> That is, you can always get the inverse of any\n<code>XRRigidTransform</code> using its <code>inverse</code> property, instead of having\nto explicitly generate it.</p>"
    },
    "xrrigidtransform.matrix": {
      "url": "$MDN_URL$/web/api/xrrigidtransform/matrix",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> property\n<code><strong>matrix</strong></code> returns the transform\nmatrix represented by the object. The returned matrix can then be premultiplied with a\ncolumn vector to rotate the\nvector by the 3D rotation specified by the <a href=\"$MDN_URL$/Web/API/XRRigidTransform/orientation\" ><code>orientation</code></a>, then translate\nit by the <a href=\"$MDN_URL$/Web/API/XRRigidTransform/position\" ><code>position</code></a>.</p>"
    },
    "xrrigidtransform.orientation": {
      "url": "$MDN_URL$/web/api/xrrigidtransform/orientation",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> property\n<code><strong>orientation</strong></code> is a <a href=\"$MDN_URL$/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a>\ncontaining a normalized <a href=\"$MDN_URL$/Glossary/Quaternion\">quaternion</a> (also called a <strong>unit\nquaternion</strong> or <strong><a  href=\"https://en.wikipedia.org/wiki/Versor\" class=\"external\" rel=\" noopener\">versor</a></strong>)\nspecifying the rotational component of the transform represented by the object.</span>\nIf you specify a quaternion whose length is not exactly 1.0 meters, it will be\nnormalized for you.</p>"
    },
    "xrrigidtransform.position": {
      "url": "$MDN_URL$/web/api/xrrigidtransform/position",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> property\n<strong><code>position</code></strong> is a <a href=\"$MDN_URL$/Web/API/DOMPointReadOnly\"><code>DOMPointReadOnly</code></a> object which\nprovides the 3D point, specified in meters, describing the translation component of the\ntransform.</p>"
    },
    "xrrigidtransform.xrrigidtransform": {
      "url": "$MDN_URL$/web/api/xrrigidtransform/xrrigidtransform",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The\n<strong><code>XRRigidTransform</code><code>()</code></strong> constructor creates and\nreturns a new <a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> object, representing the position and\norientation of a point or object.</span> Among other things,\n<code>XRRigidTransform</code> is used when providing a transform to translate between\ncoordinate systems across spaces.</p>",
      "parameters": {
        "position": "An object conforming to <a href=\"$MDN_URL$/Web/API/DOMPointInit\"><code>DOMPointInit</code></a> which specifies the coordinates at which the point or object is located. These dimensions are specified in meters. If this parameter is left out or is not compatible with <code>DOMPointInit</code> ,  the position used is assumed to be <code>{x: 0, y: 0, z: 0, w: 1}</code> . <code>w</code> must <em>always</em> be 1.",
        "orientation": "An object conforming to <a href=\"$MDN_URL$/Web/API/DOMPointInit\"><code>DOMPointInit</code></a> which specifies the direction in which the object is facing. The default value for <code>orientation</code> is <code>{x: 0, y: 0, z: 0, w: 1}</code> . The specified orientation gets normalized if it's not already."
      },
      "returns": "<p>A new <a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> object which has been initialized to represent a\n  transform matrix that would adjust the position and orientation of an object from the\n  origin to the specified <code>position</code> and facing in the direction indicated by\n  <code>orientation</code>.</p>",
      "throws": {
        "TypeError": "The value of the <code>w</code> coordinate in the specified <code>position</code> is not 1.0."
      }
    },
    "xrsession": {
      "url": "$MDN_URL$/web/api/xrsession",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p>The WebXR Device API's <code><strong>XRSession</strong></code> interface represents an ongoing XR session, providing methods and properties used to interact with and control the session. To open a WebXR session, use the <a href=\"$MDN_URL$/Web/API/XRSystem\"><code>XRSystem</code></a> interface's <a href=\"$MDN_URL$/Web/API/XRSystem/requestSession\" ><code>requestSession()</code></a> method.</p>\n<p>With <code>XRSession</code> methods, you can poll the viewer's position and orientation (the <a href=\"$MDN_URL$/Web/API/XRViewerPose\"><code>XRViewerPose</code></a>), gather information about the user's environment, and present imagery to the user. <code>XRSession</code> supports both inline and immersive virtual and augmented reality modes.</p>"
    },
    "xrsession.cancelanimationframe": {
      "url": "$MDN_URL$/web/api/xrsession/cancelanimationframe",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <strong><code>cancelAnimationFrame()</code></strong> method of\nthe <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> interface cancels an animation frame which was previously\nrequested by calling <a href=\"$MDN_URL$/Web/API/XRSession/requestAnimationFrame\" ><code>requestAnimationFrame</code></a>.</span></p>",
      "parameters": {
        "handle": "The unique value returned by the call to  <a href=\"$MDN_URL$/Web/API/XRSession/requestAnimationFrame\" ><code>requestAnimationFrame()</code></a> that previously scheduled the animation callback."
      },
      "returns": "<p>None.</p>"
    },
    "xrsession.depthdataformat": {
      "url": "$MDN_URL$/web/api/xrsession/depthdataformat",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "90",
        "ChromeAndroid": "90",
        "Edge": "90"
      },
      "doc": "<p>The <em>read-only</em> <strong><code>depthDataFormat</code></strong> property of an <code>immersive-ar</code>\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> describes which depth sensing data format is used.</p>"
    },
    "xrsession.depthusage": {
      "url": "$MDN_URL$/web/api/xrsession/depthusage",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "90",
        "ChromeAndroid": "90",
        "Edge": "90"
      },
      "doc": "<p>The <em>read-only</em> <strong><code>depthUsage</code></strong> property of an <code>immersive-ar</code>\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> describes which depth-sensing usage is used.</p>"
    },
    "xrsession.domoverlaystate": {
      "url": "$MDN_URL$/web/api/xrsession/domoverlaystate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "83",
        "ChromeAndroid": "83",
        "Edge": "83"
      },
      "doc": "<p>The <em>read-only</em> <strong><code>domOverlayState</code></strong> property of an <code>immersive-ar</code>\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> provides information about the DOM overlay, if the feature is enabled.</p>"
    },
    "xrsession.end": {
      "url": "$MDN_URL$/web/api/xrsession/end",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>end()</strong></code> method shuts down the\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> on which it's called, returning a promise which resolves once\nthe session has fully shut down.</span></p>",
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves without a value after any platform-specific steps\n  related to shutting down the session have completed. You can use the promise to do\n  things like update UI elements to reflect the shut down connection, trigger application\n  shut down, or whatever else you might need to do.</p>"
    },
    "xrsession.environmentblendmode": {
      "url": "$MDN_URL$/web/api/xrsession/environmentblendmode",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> interface's <em>read-only</em> <code><strong>environmentBlendMode</strong></code>\nproperty identifies if, and to what degree, the computer-generated imagery is overlaid atop the real world.</p>\n<p>This is used to differentiate between fully-immersive VR sessions and AR sessions which render\nover a pass-through image of the real world, possibly partially transparently.</p>"
    },
    "xrsession.inputsources": {
      "url": "$MDN_URL$/web/api/xrsession/inputsources",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The\n<em>read-only</em> <strong><code>inputSources</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/XRInputSourceArray\"><code>XRInputSourceArray</code></a> object\nwhich lists all controllers and input devices which are expressly associated with the\nXR device and are currently available.</span> These controllers may include handheld\ncontrollers, XR-equipped gloves, optically tracked hands, and gaze-based input methods.\nKeyboards, gamepads, and mice are <em>not</em> considered WebXR input sources.</p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Traditional gamepad controllers are supported using the <a href=\"$MDN_URL$/Web/API/Gamepad_API\">Gamepad API</a>.</p>\n</div>"
    },
    "xrsession.interactionmode": {
      "url": "$MDN_URL$/web/api/xrsession/interactionmode",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "84",
        "ChromeAndroid": "84",
        "Edge": "84"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> interface's <em>read-only</em> <code><strong>interactionMode</strong></code> property\ndescribes the best space (according to the user agent) for the application to draw an interactive UI for the current session.</p>"
    },
    "xrsession.onend": {
      "url": "$MDN_URL$/web/api/xrsession/onend",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>onend</strong></code> attribute of the\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object is the event handler for the\n<a href=\"$MDN_URL$/Web/API/XRSession/end_event\" ><code>end</code></a> event, which is dispatched after the XR\nsession ends and all related hardware-specific routines are completed.</span></p>"
    },
    "xrsession.oninputsourceschange": {
      "url": "$MDN_URL$/web/api/xrsession/oninputsourceschange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>oninputsourcechange</strong></code> attribute of the <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object is the event handler for the <a class=\"page-not-created\"  ><code>inputsourcechange</code></a> event, which is dispatched when session's list of active XR input sources has changed. The list itself is accessible via <a href=\"$MDN_URL$/Web/API/XRSession/inputSources\"><code>XRSession.inputSources</code></a>.</span></p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> The <a href=\"$MDN_URL$/Web/API/XRInputSource\"><code>XRInputSource</code></a> objects in <a href=\"$MDN_URL$/Web/API/XRSession/inputSources\"><code>XRSession.inputSources</code></a> array are \"live\", so values within them are updated in-place. Therefore if you wish to compare input states between frames, you should make a copy of the content of the state in question.</p>\n</div>"
    },
    "xrsession.onselect": {
      "url": "$MDN_URL$/web/api/xrsession/onselect",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>onselect</strong></code> property of the\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object is the event handler for the\n<a href=\"$MDN_URL$/Web/API/XRSession/select_event\" ><code>select</code></a> event, which is dispatched when a <a href=\"en-US/docs/Web/API/WebXR_Device_API/Inputs#Primary_actions\">primary action</a>\nis completed successfully by the user.</span> This typically represents the pressing\nof a button or trigger, a hand gesture, or a spoken command.</p>\n<p>The <a href=\"$MDN_URL$/Web/API/XRSession/select_event\" ><code>select</code></a> event is sent after tracking of the\nprimary action begins, as announced by the <a href=\"$MDN_URL$/Web/API/XRSession/selectstart_event\" ><code>selectstart</code></a> event, and immediately before the tracking of the primary action ends,\nwhich is announced by the <a href=\"$MDN_URL$/Web/API/XRSession/selectend_event\" ><code>selectend</code></a> event.</p>\n<p>To learn more about how WebXR actions work, see <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Inputs\">Inputs and input sources</a>.</p>"
    },
    "xrsession.onselectend": {
      "url": "$MDN_URL$/web/api/xrsession/onselectend",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>onselectend</strong></code> attribute of the\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object is the event handler for the\n<a href=\"$MDN_URL$/Web/API/XRSession/selectend_event\" ><code>selectend</code></a> event, which is dispatched when\nuser finishes making some sort of selection by releasing a trigger, touchpad, or\nbutton, finishes speaking a command, or makes a hand gesture. For example, this might\ninclude releasing a button or joystick.</span></p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Not to be confused with <a href=\"$MDN_URL$/Web/API/XRSession/onselectstart\"><code>XRSession.onselectstart</code></a>\nand <a href=\"$MDN_URL$/Web/API/XRSession/onselect\"><code>XRSession.onselect</code></a>.</p>\n</div>"
    },
    "xrsession.onselectstart": {
      "url": "$MDN_URL$/web/api/xrsession/onselectstart",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>onselectstart</strong></code> attribute of\nthe <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object is the event handler for the\n<a href=\"$MDN_URL$/Web/API/XRSession/selectstart_event\" ><code>selectstart</code></a> event, which is dispatched\nwhen user starts making some sort of selection by pressing a trigger, touchpad, or\nbutton, speaking a command, or making a hand gesture. For example, this might include\npressing a button or moving a joystick.</span></p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> Not to be confused with <a href=\"$MDN_URL$/Web/API/XRSession/onselect\"><code>XRSession.onselect</code></a>\nand <a href=\"$MDN_URL$/Web/API/XRSession/onselectend\"><code>XRSession.onselectend</code></a>.</p>\n</div>"
    },
    "xrsession.onsqueeze": {
      "url": "$MDN_URL$/web/api/xrsession/onsqueeze",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "83",
        "ChromeAndroid": "83",
        "Edge": "83"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> interface's\n<code><strong>onsqueeze</strong></code> event handler property can be set to a\nfunction which is then invoked to handle the <a href=\"$MDN_URL$/Web/API/XRSession/squeeze_event\" ><code>squeeze</code></a> event that's sent when the user successfully completes a <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Inputs#primary_squeeze_actions\" data-flaw=\"link1\">primary\nsqueeze action</a> on a WebXR input device.</span> These actions represent the user\nsqueezing or gripping an object or controller.</p>\n<p>To learn more about how to use and handle WebXR controller inputs, see <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Inputs\">Inputs and input sources</a>.</p>"
    },
    "xrsession.onsqueezeend": {
      "url": "$MDN_URL$/web/api/xrsession/onsqueezeend",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "83",
        "ChromeAndroid": "83",
        "Edge": "83"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> interface's\n<code><strong>onsqueezeend</strong></code> event handler property is a function to be\ninvokedn when the <a href=\"$MDN_URL$/Web/API/XRSession/squeezeend_event\" ><code>squeezeend</code></a> event sent\nto an <code>XRSession</code> when a <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Inputs#primary_squeeze_actions\" data-flaw=\"link1\">primary\nsqueeze action</a> ends.</span> This is sent immediately after the\n<a href=\"$MDN_URL$/Web/API/XRSession/squeeze_event\" ><code>squeeze</code></a> event, which announces the\n<em>successful</em> completion of the squeeze action. The <code>squeezeend</code> event\nhandler is where you handle closing out a squeeze action whether it was successfully\ncompleted or not.</p>\n<p>To learn more about how the sequence of squeeze events works, see\n<a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Inputs#primary_squeeze\n__actions\">Primary squeeze\nactions</a> in <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Inputs\">Inputs and input sources</a>.</p>"
    },
    "xrsession.onsqueezestart": {
      "url": "$MDN_URL$/web/api/xrsession/onsqueezestart",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "83",
        "ChromeAndroid": "83",
        "Edge": "83"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> interface's\n<code><strong>onsqueezestart</strong></code> event handler property can be set to a\nfunction which is then invoked to handle the <a href=\"$MDN_URL$/Web/API/XRSession/squeezestart_event\" ><code>squeezestart</code></a> event that's sent when the user successfully begins a <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Inputs#primary_squeeze_actions\" data-flaw=\"link1\">primary\nsqueeze action</a> on a WebXR input device.</span> These actions represent the user\nsqueezing or tightly gripping an object or controller.</p>\n<p>To learn more about how to use and handle WebXR controller inputs, see <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Inputs\">Inputs and input sources</a>.</p>"
    },
    "xrsession.onvisibilitychange": {
      "url": "$MDN_URL$/web/api/xrsession/onvisibilitychange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code><strong>onvisibilitychange</strong></code>\nattribute of the <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object is the event handler for the\n<a href=\"$MDN_URL$/Web/API/XRSession/visibilitychange_event\" ><code>visibilitychange</code></a> event, which is\ndispatched when the visibility state of the XR session changes. The visibility state\nof the session is accessible via <a href=\"$MDN_URL$/Web/API/XRSession/visibilityState\"><code>XRSession.visibilityState</code></a>.</span></p>\n<div class=\"notecard note\">\n<p><strong>Note:</strong> The visibility state of XR session affects the frame loop so\ncallbacks registered via <a href=\"$MDN_URL$/Web/API/XRSession/requestAnimationFrame\"><code>XRSession.requestAnimationFrame()</code></a> might not be\ncalled. Consult <a href=\"$MDN_URL$/Web/API/XRSession/visibilityState\"><code>XRSession.visibilityState</code></a> article for details.</p>\n</div>"
    },
    "xrsession.renderstate": {
      "url": "$MDN_URL$/web/api/xrsession/renderstate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The\n<em>read-only</em> <strong><code>renderState</code></strong> property of an\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object indicates the returns a <a href=\"$MDN_URL$/Web/API/XRRenderState\"><code>XRRenderState</code></a>\nobject describing how the user's environment which should be rendered.</span> The\ninformation provided covers the minimum and maximum distance at which to render objects,\nthe vertical field of view to use when rendering the in the <code>inline</code> session\nmode, and the <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> to render into for inline composition.</p>\n<p>While this property is read only, you can call the <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> method\n<a href=\"$MDN_URL$/Web/API/XRSession/updateRenderState\" ><code>updateRenderState()</code></a> to make changes.</p>"
    },
    "xrsession.requestanimationframe": {
      "url": "$MDN_URL$/web/api/xrsession/requestanimationframe",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a>\nmethod <code><strong>requestAnimationFrame()</strong></code>, much like the\n<a href=\"$MDN_URL$/Web/API/Window\"><code>Window</code></a> method of the same name, schedules a callback to be executed the\nnext time the browser is ready to paint the session's virtual environment to the XR\ndisplay.</span> The specified callback is executed once before the next repaint; if\nyou wish for it to be executed for the following repaint, you must\ncall <code>requestAnimationFrame()</code> again. This can be done from within the\ncallback itself.</p>\n<p>The callback takes two parameters as inputs: an <a href=\"$MDN_URL$/Web/API/XRFrame\"><code>XRFrame</code></a> describing the\nstate of all tracked objects for the session, and a time stamp you can use to compute\nany animation updates needed.</p>\n<p>You can cancel a previously scheduled animation by calling\n<a href=\"$MDN_URL$/Web/API/XRSession/cancelAnimationFrame\" ><code>cancelAnimationFrame()</code></a>.</p>\n<div class=\"notecard warning\">\n<p><strong>Note:</strong> Despite the obvious similarities between these methods and the\nglobal <a href=\"$MDN_URL$/Web/API/window/requestAnimationFrame\" ><code>requestAnimationFrame()</code></a> function\nprovided by the <code>Window</code> interface, you <em>must not</em> treat these as\ninterchangeable. There is <em>no</em> guarantee that the latter will work at all while\nan immersive XR session is underway.</p>\n</div>",
      "parameters": {
        "animationFrameCallback": "A function which is called before the next repaint in order to allow you to update and render the XR scene based on elapsed time, animation, user input changes, and so forth. The callback receives as input two parameters:<br> <dl> <dt><code>time</code></dt> <dd>A <a href=\"$MDN_URL$/Web/API/DOMHighResTimeStamp\"><code>DOMHighResTimeStamp</code></a> indicating the time offset at which the updated viewer state was received from the WebXR device.</dd> <dt><code>xrFrame</code></dt> <dd>An <a href=\"$MDN_URL$/Web/API/XRFrame\"><code>XRFrame</code></a> object describing the state of the objects being tracked by the session. This can be used to obtain the poses of the viewer and the scene itself, as well as other information needed to render a frame of an AR or VR scene.</dd> </dl>"
      },
      "returns": "<p>An integer value which serves as a unique, non-zero ID or handle you may pass to\n  <a href=\"$MDN_URL$/Web/API/XRSession/cancelAnimationFrame\" title=\"cancelAnimationFrame()\"><code>cancelAnimationFrame()</code></a> if you need to\n  remove the pending animation frame request.</p>"
    },
    "xrsession.requestreferencespace": {
      "url": "$MDN_URL$/web/api/xrsession/requestreferencespace",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p class=\"summary\"><span class=\"seoSummary\">The\n<strong><code>requestReferenceSpace()</code></strong> method of the\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> interface returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a> that resolves with\nan instance of either <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a>\nor <a href=\"$MDN_URL$/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a> as appropriate given the type of reference\nspace requested.</span></p>",
      "parameters": {
        "type": "A string specifying the type of reference space for which an instance is to be returned. The string must be one of the values below."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with an <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> object.</p>",
      "throws": {
        "NotSupportedError": "The requested reference space is not supported."
      }
    },
    "xrsession.updaterenderstate": {
      "url": "$MDN_URL$/web/api/xrsession/updaterenderstate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <code>updateRenderState()</code> method of the\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> interface of <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR\nAPI</a> schedules changes to be applied to the active render state prior to\nrendering of the next frame.</span></p>",
      "parameters": {
        "newState": "An object specifying the properties of the session's <a href=\"$MDN_URL$/Web/API/XRSession/renderState\" ><code>renderState</code></a> to update before rendering the next frame.",
        "baseLayer ": "An <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> object from which the WebXR compositor will obtain imagery. This is  <code>null</code>  by default.",
        "depthFar ": "A floating-point value specifying the distance in meters from the viewer to the  <strong>far clip plane</strong> , which is a plane parallel to the display surface beyond which no further rendering will occur. All rendering will take place between the distances specified by  <code>depthNear</code>  and  <code>depthFar</code> . This is 1000 meters (1 kilometer) by default.",
        "depthNear ": "A floating-point value indicating the distance in meters from the viewer to a plane parallel to the display surface to be the  <strong>near clip plane</strong> . No part of the scene on the viewer's side of this plane will be rendered. This is 0.1 meters (10 centimeters) by default.",
        "inlineVerticalFieldOfView ": "A floating-point value indicating the default field of view, in radians, to be used when computing the projection matrix for an  <code>inline</code>   <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> . The projection matrix calculation also takes into account the output canvas's aspect ratio. This property <em>must not</em> be specified for immersive sessions, so the value is  <code>null</code>  by default for immersive sessions. The default value is otherwise π * 0.5 (half of the value of pi)."
      },
      "returns": "<p>None.</p>",
      "throws": {
        "InvalidStateError": "This may occur for one of the following reasons:<br> <ul> <li>The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> has already ended, so you cannot change its render state.</li> <li>The <code>baseLayer</code> specified in <code>newState</code> was created by an <code>XRSession</code> other than the one on which <code>updateRenderState()</code> was called.</li> <li>The <code>inlineVerticalFieldOfView</code> property was set, but the session is immersive and therefore does not allow this property to be used.</li> </ul>"
      }
    },
    "xrsession.visibilitystate": {
      "url": "$MDN_URL$/web/api/xrsession/visibilitystate",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The\n<em>read-only</em> <strong><code>visibilityState</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> interface is a string indicating whether the WebXR content is\ncurrently visible to the user, and if it is, whether it's the primary focus.</span></p>\n<p>Every time the visibility state changes, a\n<a href=\"$MDN_URL$/Web/API/XRSession/visibilitychange_event\" ><code>visibilitychange</code></a> event is fired on the\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object.</p>"
    },
    "xrsessionevent": {
      "url": "$MDN_URL$/web/api/xrsessionevent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API</a>'s <code><strong>XRSessionEvent</strong></code> interface describes an event which indicates the change of the state of an <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a>.</span> These events occur, for example, when the session ends or the visibility of its context changes.</p>"
    },
    "xrsessionevent.session": {
      "url": "$MDN_URL$/web/api/xrsessionevent/session",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRSessionEvent\"><code>XRSessionEvent</code></a> interface's\n<code><strong>session</strong></code> property indicates which\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> the event is about.</span></p>"
    },
    "xrsessionevent.xrsessionevent": {
      "url": "$MDN_URL$/web/api/xrsessionevent/xrsessionevent",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The WebXR Device API's\n<code><strong>XRSessionEvent()</strong></code> constructor creates and returns a new\n<a href=\"$MDN_URL$/Web/API/XRSessionEvent\"><code>XRSessionEvent</code></a> object.</span> These objects represent events announcing\nstate changes in an <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> representing an augmented or virtual\nreality session.</p>",
      "parameters": {
        "type": "A <a href=\"$MDN_URL$/Web/API/DOMString\"><code>DOMString</code></a> indicating which of the events represented by objects of type <code>XRSessionEvent</code> this particular object represents. See <a href=\"$MDN_URL$/Web/API/XRSessionEvent#session_event_types\"><code>XRSessionEvent &gt; Session event types</code></a> for a list of the permitted values.",
        "eventInitDict": "An object with the following values:<br> <ul> <li><code>session</code>: The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> to which the event is to be delivered.</li> </ul>"
      },
      "returns": "<p>A newly-created <a href=\"$MDN_URL$/Web/API/XRSessionEvent\"><code>XRSessionEvent</code></a> object representing an object of the\n  specfied type and configured as described by the <code>eventInitDict</code> parameter.</p>"
    },
    "xrspace": {
      "url": "$MDN_URL$/web/api/xrspace",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\"><span class=\"seoSummary\">The <strong><code>XRSpace</code></strong> interface of the <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API</a> is an abstract interface providing a common basis for every class which represents a virtual coordinate system within the virtual world, in which its origin corresponds to a physical location.</span> Spatial data in WebXR is always expressed relative to an object based upon one of the descendant interfaces of <code>XRSpace</code>, at the time at which a given <a href=\"$MDN_URL$/Web/API/XRFrame\"><code>XRFrame</code></a> takes place.</p>\n<p class=\"summary\">Numeric values such as pose positions are thus coordinates in the corresponding <code>XRSpace</code>, relative to that space's origin.</p>\n<div class=\"notecard note\">\n<p class=\"summary\"><strong>Note:</strong> The <code>XRSpace</code> interface is never used directly; instead, all spaces are created using one of the interfaces based on <code>XRSpace</code>. At this time, those are <a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> and <a href=\"$MDN_URL$/Web/API/XRBoundedReferenceSpace\"><code>XRBoundedReferenceSpace</code></a>.</p>\n</div>"
    },
    "xrsystem": {
      "url": "$MDN_URL$/web/api/xrsystem",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {},
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p class=\"summary\"><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API</a> interface <code><strong>XRSystem</strong></code> provides methods which let you get access to an <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object representing a WebXR session. With that <code>XRSession</code> in hand, you can use it to interact with the Augmented Reality (AR) or Virtual Reality (VR) device.</span></p>"
    },
    "xrsystem.issessionsupported": {
      "url": "$MDN_URL$/web/api/xrsystem/issessionsupported",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p class=\"summary\"><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRSystem\"><code>XRSystem</code></a> method\n<code><strong>isSessionSupported()</strong></code> returns a promise which resolves to\n<code>true</code> if the specified WebXR session mode is supported by the user's WebXR\ndevice. Otherwise, the promise resolves with <code>false</code>.</span></p>\n<p class=\"summary\">If no devices are available or the browser doesn't have permission\nto use the XR device, the promise is rejected with an appropriate\n<a href=\"$MDN_URL$/Web/API/DOMException\"><code>DOMException</code></a>.</p>",
      "parameters": {
        "mode": "A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> specifying the WebXR session mode for which support is to be checked. Possible modes to check for: <ul> <li><code>immersive-ar</code> 🧪</li> <li><code>immersive-vr</code></li> <li><code>inline</code></li> </ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to <code>true</code> if the specified session\n  mode is supported; otherwise the promise resolves to <code>false</code>.</p>",
      "throws": {
        "SecurityError": "The document's origin does not have permission to use the <code>xr-spatial-tracking</code> <a href=\"$MDN_URL$/Web/HTTP/Feature_Policy\">feature policy</a> ."
      }
    },
    "xrsystem.ondevicechange": {
      "url": "$MDN_URL$/web/api/xrsystem/ondevicechange",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p class=\"summary\">The <strong><code>ondevicechange</code></strong> property of the\n<a href=\"$MDN_URL$/Web/API/XRSystem\"><code>XRSystem</code></a> interface is passed a <code><a href=\"$MDN_URL$/Web/API/MediaDevices/devicechange_event\" >devicechange</a></code> event whenever\navailability of an immersive device changes. The event that is fired is a \"simple event\"\nthat implements the <a href=\"$MDN_URL$/Web/API/Event\" ><code>Event</code></a> interface. </p>"
    },
    "xrsystem.requestsession": {
      "url": "$MDN_URL$/web/api/xrsystem/requestsession",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p class=\"summary\">The <strong><a href=\"$MDN_URL$/Web/API/XRSystem\"><code>XRSystem</code></a></strong> interface's\n<code><strong>requestSession()</strong></code> method returns a <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>promise</code></a>\nwhich resolves to an <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object through which you can manage the\nrequested type of WebXR session.</p>\n<p class=\"summary\">While only one immersive VR session can be active at a time, multiple\ninline sessions can be in progress at once.</p>",
      "parameters": {
        "mode": "A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/String\"><code>String</code></a> defining the XR session mode. The supported modes are:<br> <ul> <li>🧪 <code>immersive-ar</code>: The session's output will be given exclusive access to the immersive device, but the rendered content will be blended with the real-world environment. The session's <a href=\"$MDN_URL$/Web/API/XRSession/environmentBlendMode\" title=\"environmentBlendMode\"><code>environmentBlendMode</code></a> indicates the method to be used to blend the content together. </li> <li><code>immersive-vr</code>: Indicates that the rendered session will be displayed using an immersive XR device in VR mode; it is not intended to be overlaid or integrated into the surrounding environment. The <a href=\"$MDN_URL$/Web/API/XRSession/environmentBlendMode\" ><code>environmentBlendMode</code></a> is expected to be <code>opaque</code> if possible, but might be <code>additive</code> if the hardware requires it. </li> <li><code>inline</code>: The output is presented inline within the context of an element in a standard HTML document, rather than occupying the full visual space. Inline sessions can be presented in either mono or stereo mode, and may or may not have viewer tracking available. Inline sessions don't require special hardware and should be available on any <a href=\"$MDN_URL$/Glossary/User_agent\">user agent</a> offering WebXR API support. </li> </ul>",
        "options": "An object to configure the <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> . If none are included, the device will use a default feature configuration for all options. For more information, see <a href=\"#session_features\">Session features</a> below. <ul> <li><code>requiredFeatures</code> <span class=\"badge inline optional\">Optional</span>: An array of values which the returned <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> <em>must</em> support.</li> <li><code>optionalFeatures</code> <span class=\"badge inline optional\">Optional</span>: An array of values identifying features which the returned <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> may optionally support.</li> <li><code>domOverlay</code> <span class=\"badge inline optional\">Optional</span>: An object with a required <code>root</code> property that specifies the overlay element that will be displayed to the user as the content of the DOM overlay. See the <a href=\"#requesting_a_session_with_a_dom_overlay\">example below</a>.</li> <li><code>depthSensing</code> <span class=\"badge inline optional\">Optional</span>: An object with two required properties <a href=\"$MDN_URL$/Web/API/XRSession/depthUsage\" ><code>usagePreference</code></a> and <a href=\"$MDN_URL$/Web/API/XRSession/depthDataFormat\" ><code>dataFormatPreference</code></a> to configure how to perform depth sensing. See the <a href=\"#requesting_a_depth-sensing_session\">example below</a>.</li> </ul>"
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves with an <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object if the\n  device and user agent support the requested mode and features.</p>",
      "throws": {
        "InvalidStateError": "The requested session mode is <code>immersive-vr</code> but there is already an immersive VR session either currently active or in the process of being set up. There can only be one immersive VR session at a time.",
        "NotSupportedError": "There is no WebXR-compatible device available, or the device does not support the specified <code>sessionMode</code> ; this can also be thrown if any of the <em>required</em> options are unsupported.",
        "SecurityError": "Permission to enter the specified XR mode is denied. This can happen for a number of reasons, which are covered in more detail in <a href=\"$MDN_URL$/Web/API/WebXR_Device_API#permissions_and ______security\">Permissions and security</a> in <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API</a>."
      }
    },
    "xrview": {
      "url": "$MDN_URL$/web/api/xrview",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR Device API</a>'s <code><strong>XRView</strong></code> interface provides information describing a single view into the XR scene for a specific frame, providing orientation and position information for the viewpoint.</span> You can think of it as a description of a specific eye or camera and how it views the world. A 3D frame will involve two views, one for each eye, separated by an appropriate distance which approximates the distance between the viewer's eyes. This allows the two views, when projected in isolation into the appropriate eyes, to simulate a 3D world.</p>"
    },
    "xrview.eye": {
      "url": "$MDN_URL$/web/api/xrview/eye",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/XRView\"><code>XRView</code></a> interface's read-only <code><strong>eye</strong></code>\nproperty is a string indicating which eye's viewpoint the <code>XRView</code> represents: <code>left</code> or\n<code>right</code>. For views which represent neither eye, such as monoscopic views,\nthis property's value is <code>none</code>.</p>"
    },
    "xrview.isfirstpersonobserver": {
      "url": "$MDN_URL$/web/api/xrview/isfirstpersonobserver",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "86",
        "ChromeAndroid": "86",
        "Edge": "86"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/XRView\"><code>XRView</code></a> interface's read-only <code><strong>isFirstPersonObserver</strong></code> property is a boolean indicating if the <code>XRView</code> is a first-person observer view.</p>\n<p>To create video recordings of AR device cameras, you can't simply use one of the rendered eyes, as there often will be a physical offset. Some devices expose a secondary view, the first-person observer view, which has an <code>eye</code> of <code>none</code>.</p>\n<p>To receive a first-person observer view, you need to enable the \"secondary-views\" feature descriptor explicitly (typically as an optional feature). See <a href=\"$MDN_URL$/Web/API/XRSystem/requestSession\"><code>XRSystem.requestSession()</code></a> for details.</p>\n<p>The <code>isFirstPersonObserver</code> property then allows you to check which secondary view is a first-person observer view.</p>"
    },
    "xrview.projectionmatrix": {
      "url": "$MDN_URL$/web/api/xrview/projectionmatrix",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The <a href=\"$MDN_URL$/Web/API/XRView\"><code>XRView</code></a> interface's read-only\n<code><strong>projectionMatrix</strong></code> property specifies the projection matrix\nto apply to the underlying view. This should be used to integrate perspective to\neverything in the scene, in order to ensure the result is consistent with what the eye\nexpects to see.</p>\n<div class=\"notecard note\">\n<p><strong>Important:</strong> Failure to apply proper perspective, or inconsistencies\nin perspective, may result in possibly serious user discomfort or distress.</p>\n</div>"
    },
    "xrview.transform": {
      "url": "$MDN_URL$/web/api/xrview/transform",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The read-only <code><strong>transform</strong></code> property of the\n<a href=\"$MDN_URL$/Web/API/XRView\"><code>XRView</code></a> interface is an <a href=\"$MDN_URL$/Web/API/XRRigidTransform\"><code>XRRigidTransform</code></a> object which\nprovides the position and orientation of the viewpoint relative to the\n<a href=\"$MDN_URL$/Web/API/XRReferenceSpace\"><code>XRReferenceSpace</code></a> specified when the\n<a href=\"$MDN_URL$/Web/API/XRFrame/getViewerPose\"><code>XRFrame.getViewerPose()</code></a> method was called to obtain the view object.</p>\n<p>With the <code>transform</code>, you can then position the view as a camera within the\n3D scene. If you instead need the more traditional view matrix, you can get using\n<code>view.transform.inverse.matrix</code>; this gets the underlying\n<a href=\"$MDN_URL$/Web/API/XRRigidTransform/matrix\" ><code>matrix</code></a> of the transform's\n<a href=\"$MDN_URL$/Web/API/XRRigidTransform/inverse\" ><code>inverse</code></a>.</p>"
    },
    "xrviewerpose": {
      "url": "$MDN_URL$/web/api/xrviewerpose",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The WebXR Device API interface <code><strong>XRViewerPose</strong></code> represents the pose (the position and orientation) of a viewer's point of view on the scene. Each <code>XRViewerPose</code> can have multiple views to represent, for example, the slight separation between the left and right eye.</p>\n<p>This view can represent anything from the point-of-view of a user's XR headset to the viewpoint represented by a player's movement of an avatar using mouse and keyboard, presented on the screen, to a virtual camera capturing the scene for a spectator.</p>"
    },
    "xrviewerpose.views": {
      "url": "$MDN_URL$/web/api/xrviewerpose/views",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p>The read-only <a href=\"$MDN_URL$/Web/API/XRViewerPose\"><code>XRViewerPose</code></a> property <strong><code>views</code></strong>\nreturns an array which contains every <a href=\"$MDN_URL$/Web/API/XRView\"><code>XRView</code></a> which must be rendered in\norder to fully represent the scene from the viewpoint defined by the viewer pose. For\nmonoscopic devices, this array contains a single view.</p>\n<div class=\"notecard warning\">\n<p><strong>Important:</strong> There is no guarantee that the number of views will\nremain constant over the lifetime of an <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a>. For each frame, you\nshould always use the current length of this array rather than caching the value.</p>\n</div>\n<p>Stereo views require two views to render properly, with the left eye's view having its\n<a href=\"$MDN_URL$/Web/API/XRView/eye\" ><code>eye</code></a> set to the string <code>left</code> and the right eye's\nview a value of <code>right</code>.</p>"
    },
    "xrviewport": {
      "url": "$MDN_URL$/web/api/xrviewport",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The WebXR Device API's <code><strong>XRViewport</strong></code> interface provides properties used to describe the size and position of the current viewport within the <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> being used to render the 3D scene.</p>"
    },
    "xrviewport.height": {
      "url": "$MDN_URL$/web/api/xrviewport/height",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRViewport\"><code>XRViewport</code></a> property\n<code><strong>height</strong></code> specifies the height, in pixels, of the viewport\nonto the drawing surface within which the WebXR view is to be rendered.</span> Along\nwith <a href=\"$MDN_URL$/Web/API/XRViewport/width\" ><code>width</code></a> and the origin point given by\n<a href=\"$MDN_URL$/Web/API/XRViewport/x\" ><code>x</code></a> and <a href=\"$MDN_URL$/Web/API/XRViewport/y\" ><code>y</code></a>, this defines the\narea within which rendered content will be drawn.</p>"
    },
    "xrviewport.width": {
      "url": "$MDN_URL$/web/api/xrviewport/width",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRViewport\"><code>XRViewport</code></a> property\n<strong><code>width</code></strong> specifies the width of the viewport, in pixels,\nonto the drawing surface the 3D scene is to be rendered into.</span> This is defined\nusing this property along with the viewport's <a href=\"$MDN_URL$/Web/API/XRViewport/height\" ><code>height</code></a>\nand its origin given by its properties <a href=\"$MDN_URL$/Web/API/XRViewport/x\" ><code>x</code></a> and\n<a href=\"$MDN_URL$/Web/API/XRViewport/y\" ><code>y</code></a>.</p>"
    },
    "xrviewport.x": {
      "url": "$MDN_URL$/web/api/xrviewport/x",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRViewport\"><code>XRViewport</code></a> interface's\n<code><strong>x</strong></code> property indicates the offset from the left edge of\nthe destination surface (typically a <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> to the left edge of\nthe viewport within the surface into which WebXR content is to be rendered.</span> The\nviewport's <a href=\"$MDN_URL$/Web/API/XRViewport/y\" ><code>y</code></a> property identifies the <code>y</code>\ncomponent of the origin, and its is given by the <a href=\"$MDN_URL$/Web/API/XRViewport/width\" ><code>width</code></a> and <a href=\"$MDN_URL$/Web/API/XRViewport/height\" ><code>height</code></a> properties.</p>"
    },
    "xrviewport.y": {
      "url": "$MDN_URL$/web/api/xrviewport/y",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRViewport\"><code>XRViewport</code></a> interface's\n<code><strong>y</strong></code> property indicates the offset from the bottom edge of\nthe destination surface (typically a <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> to the bottom edge of\nthe viewport within the surface into which WebXR content is to be rendered.</span> The\nviewport's <a href=\"$MDN_URL$/Web/API/XRViewport/x\" ><code>x</code></a> property identifies the <code>x</code>\ncomponent of the origin, and its is given by the <a href=\"$MDN_URL$/Web/API/XRViewport/width\" ><code>width</code></a> and <a href=\"$MDN_URL$/Web/API/XRViewport/height\" ><code>height</code></a> properties.</p>"
    },
    "xrwebglbinding": {
      "url": "$MDN_URL$/web/api/xrwebglbinding",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "89",
        "ChromeAndroid": "89",
        "Edge": "89",
        "Opera": "75"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>XRWebGLBinding</strong></code> interface is used to create layers that have a GPU backend.</p>"
    },
    "xrwebglbinding.getdepthinformation": {
      "url": "$MDN_URL$/web/api/xrwebglbinding/getdepthinformation",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "90",
        "ChromeAndroid": "90",
        "Edge": "90",
        "Opera": "76"
      },
      "doc": "<p>The <code><strong>getDepthInformation()</strong></code> method of the <a href=\"$MDN_URL$/Web/API/XRWebGLBinding\"><code>XRWebGLBinding</code></a> interface returns an <a href=\"$MDN_URL$/Web/API/XRWebGLDepthInformation\"><code>XRWebGLDepthInformation</code></a> object containing WebGL depth information.</p>",
      "parameters": {
        "view": "An <a href=\"$MDN_URL$/Web/API/XRView\"><code>XRView</code></a> object obtained from a viewer pose."
      },
      "returns": "<p>An <a href=\"$MDN_URL$/Web/API/XRWebGLDepthInformation\"><code>XRWebGLDepthInformation</code></a> object.</p>"
    },
    "xrwebglbinding.xrwebglbinding": {
      "url": "$MDN_URL$/web/api/xrwebglbinding/xrwebglbinding",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "89",
        "ChromeAndroid": "89",
        "Edge": "89",
        "Opera": "75"
      },
      "doc": "<p>The <code><strong>XRWebGLBinding()</strong></code> constructor creates and\nreturns a new <a href=\"$MDN_URL$/Web/API/XRWebGLBinding\"><code>XRWebGLBinding</code></a> object.</p>",
      "parameters": {
        "session": "An <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object specifying the WebXR session which will be rendered using the WebGL context.",
        "context": "A <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> or <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a> identifying the WebGL drawing context to use for rendering the scene for the specified WebXR session."
      },
      "returns": "<p>A newly-created <a href=\"$MDN_URL$/Web/API/XRWebGLBinding\"><code>XRWebGLBinding</code></a>.</p>",
      "throws": {
        "InvalidStateError": "The new <code>XRWebGLBinding</code> could not be created due to one of a number of possible state errors:<br> <ul> <li>The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> specified by <code>session</code> has already been stopped.</li> <li>The specified WebGL context, <code>context</code>, <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/isContextLost#usage_notes\">has been lost</a> for any reason, such as a GPU switch or reset.</li> <li>The specified <code>session</code> is immersive but the <code>context</code> is not WebXR compatible.</li> </ul>"
      }
    },
    "xrwebgldepthinformation": {
      "url": "$MDN_URL$/web/api/xrwebgldepthinformation",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "90",
        "ChromeAndroid": "90",
        "Edge": "90",
        "Opera": "76"
      },
      "doc": "<div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div>\n<p>The <code><strong>XRWebGLDepthInformation</strong></code> interface contains depth information from the GPU/WebGL (returned by <a href=\"$MDN_URL$/Web/API/XRWebGLBinding/getDepthInformation\"><code>XRWebGLBinding.getDepthInformation()</code></a>).</p>\n<p>This interface inherits properties from its parent, <a class=\"page-not-created\"  ><code>XRDepthInformation</code></a>.</p>"
    },
    "xrwebgldepthinformation.texture": {
      "url": "$MDN_URL$/web/api/xrwebgldepthinformation/texture",
      "status": [
        "Experimental",
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "90",
        "ChromeAndroid": "90",
        "Edge": "90",
        "Opera": "76"
      },
      "doc": "<p>The <em>read-only</em> <strong><code>texture</code></strong> property of the <a href=\"$MDN_URL$/Web/API/XRWebGLDepthInformation\"><code>XRWebGLDepthInformation</code></a> interface is a <a href=\"$MDN_URL$/Web/API/WebGLTexture\"><code>WebGLTexture</code></a> containing depth buffer information as an opaque texture.</p>"
    },
    "xrwebgllayer": {
      "url": "$MDN_URL$/web/api/xrwebgllayer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<div><div class=\"notecard secure\"><h4 id=\"secure_context\">Secure context</h4><p>This feature is available only in <a href=\"$MDN_URL$/Web/Security/Secure_Contexts\">secure contexts</a> (HTTPS), in some or all <a href=\"#browser_compatibility\">supporting browsers</a>.</p></div></div>\n<p class=\"summary\"><span class=\"seoSummary\">The <strong><code>XRWebGLLayer</code></strong> interface of the WebXR Device API provides a linkage between the WebXR device (or simulated XR device, in the case of an inline session) and a WebGL context used to render the scene for display on the device.</span> In particular, it provides access to the WebGL framebuffer and viewport to ease access to the context.</p>\n<p class=\"summary\">Although <code>XRWebGLLayer</code> is currently the only type of framebuffer layer supported by <a href=\"$MDN_URL$/Web/API/WebGL_API\">WebGL</a>, it's entirely possible that future updates to the WebXR specification may allow for other layer types and corresponding image sources.</p>"
    },
    "xrwebgllayer.antialias": {
      "url": "$MDN_URL$/web/api/xrwebgllayer/antialias",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> property\n<code><strong>antialias</strong></code> is a Boolean value which is <code>true</code>\nif the rendering layer's frame buffer supports antialiasing.</span> Otherwise, this\nproperty's value is <code>false</code>. The specific antialiasing technique used is left\nto the <a href=\"$MDN_URL$/Glossary/User_agent\">user agent's</a> discretion and cannot be specified by\nthe web site or web app.</p>"
    },
    "xrwebgllayer.framebuffer": {
      "url": "$MDN_URL$/web/api/xrwebgllayer/framebuffer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> property\n<code><strong>framebuffer</strong></code> is an opaque <a href=\"$MDN_URL$/Web/API/WebGLFramebuffer\"><code>WebGLFramebuffer</code></a>\nwhich is used to buffer the rendered image if the <a href=\"$MDN_URL$/Web/API/WebXR_Device_API/Fundamentals#the_webxr_compositor\" data-flaw=\"link1\">XR\ncompositor</a> is being used. Otherwise, this property's value is\n<code>null</code>.</span> The opaque framebuffer is functionally nearly the same as a\nstandard WebGL framebuffer, except for the differences covered in the section\n<a href=\"#how_opaque_framebuffers_are_special\">How opaque framebuffers are special</a> below.</p>"
    },
    "xrwebgllayer.framebufferheight": {
      "url": "$MDN_URL$/web/api/xrwebgllayer/framebufferheight",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> property\n<strong><code>framebufferHeight</code></strong> indicates the height of the\nframebuffer, in pixels.</span></p>\n<p>You can get the width of the framebuffer using the\n<a href=\"$MDN_URL$/Web/API/XRWebGLLayer/framebufferWidth\" ><code>framebufferWidth</code></a> property.</p>"
    },
    "xrwebgllayer.framebufferwidth": {
      "url": "$MDN_URL$/web/api/xrwebgllayer/framebufferwidth",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> property\n<strong><code>framebufferWidth</code></strong> specifies the width of the framebuffer,\nin pixels.</span></p>\n<p>You can get the height of the framebuffer using the\n<a href=\"$MDN_URL$/Web/API/XRWebGLLayer/framebufferHeight\" ><code>framebufferHeight</code></a> property.</p>"
    },
    "xrwebgllayer.getnativeframebufferscalefactor": {
      "url": "$MDN_URL$/web/api/xrwebgllayer/getnativeframebufferscalefactor",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The static method\n<code><strong>XRWebGLLayer.getNativeFramebufferScaleFactor()</strong></code> returns a\nfloating-point scaling factor by which one can multiply the specified\n<a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a>'s resolution to get the native resolution of the WebXR\ndevice's frame buffer.</span></p>\n<p>This information can be used when creating a new <code>XRWebGLLayer</code> to configure\nthe <code>framebufferScaleFactor</code> in the <code>layerInit</code> configuration object\nspecified when calling the <code>XRWebGLLayer()</code> constructor. See the\n<a href=\"#usage_notes\">Usage notes</a> and <a href=\"#examples\">Examples</a> for details.</p>\n<p>If the scaling factor is 1.0, then the frame buffer pixels and the native display\npixels are the same size. If the scaling factor is greater than zero, then the frame\nbuffer is smaller than the display's native dimensions, resulting in the output being\nup-scaled for display to the screen after rendering into the frame buffer. If the\nscaling factor is less than zero, the frame buffer is <em>larger</em> than the native\nresolution of the display, resulting in the frame buffer's contents being scaled down\nfor display to the XR device. This can happen for display environments which use\nsuperscaling or anti-aliasing techniques to improve perceived image quality.</p>",
      "parameters": {
        "session": "The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> for which to return the native framebuffer scaling factor."
      },
      "returns": "<p>A floating-point value which, when multiplied by the <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a>'s\n  recommended framebuffer dimensions, results in the XR device's native frame buffer\n  resolution. If the session has ended, this function returns 0.0.</p>"
    },
    "xrwebgllayer.getviewport": {
      "url": "$MDN_URL$/web/api/xrwebgllayer/getviewport",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> interface's\n<code><strong>getViewport()</strong></code> method returns the\n<a href=\"$MDN_URL$/Web/API/XRViewport\"><code>XRViewport</code></a> that should be used to render the specified\n<a href=\"$MDN_URL$/Web/API/XRView\"><code>XRView</code></a> into the WebGL layer.</span> For WebXR devices which use a\nsingle framebuffer for both the left and right eyes, the returned viewport represents\nthe region of the framebuffer into which the scene should be rendered for the eye\nrepresented by the view.</p>",
      "parameters": {
        "view": "An <a href=\"$MDN_URL$/Web/API/XRView\"><code>XRView</code></a> object indicating the view for which the viewport is to be returned."
      },
      "returns": "<p>A <a href=\"$MDN_URL$/Web/API/XRViewport\"><code>XRViewport</code></a> object representing the viewport which will restrict\n  drawing to the portion of the layer corresponding to the specified <code>view</code>.</p>",
      "throws": {
        "InvalidStateError": "Either the specified <code>view</code> is not in an active <a href=\"$MDN_URL$/Web/API/XRFrame\"><code>XRFrame</code></a> or that <code>XRFrame</code> and the <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> are not part of the same <a href=\"$MDN_URL$/Web/API/XRSession\">WebXR session</a> ."
      }
    },
    "xrwebgllayer.ignoredepthvalues": {
      "url": "$MDN_URL$/web/api/xrwebgllayer/ignoredepthvalues",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The read-only <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> property\n<strong><code>ignoreDepthValues</code></strong> is a Boolean value which is\n<code>true</code> if the session has been configured to ignore the values in the depth\nbuffer while rendering the scene. If the depth buffer is being used to determine the\nposition of vertices, this property is <code>false</code>.</span></p>\n<p>The value of <code>ignoreDepthValues</code> can only be set when the\n<a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> is instantiated, by setting the corresponding value in the <a href=\"$MDN_URL$/Web/API/XRWebGLLayer/XRWebGLLayer\">constructor's</a> <code>layerInit</code> parameter.</p>"
    },
    "xrwebgllayer.xrwebgllayer": {
      "url": "$MDN_URL$/web/api/xrwebgllayer/xrwebgllayer",
      "status": [
        "StandardTrack"
      ],
      "compatibility": {
        "Chrome": "79",
        "ChromeAndroid": "79",
        "Edge": "79"
      },
      "doc": "<p><span class=\"seoSummary\">The <a href=\"$MDN_URL$/Web/API/WebXR_Device_API\">WebXR\nDevice API</a> <code><strong>XRWebGLLayer()</strong></code> constructor creates and\nreturns a new <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> object, providing the linkage between the\nWebXR device and the WebGL graphics layer used to render the 3D scene.</span></p>",
      "parameters": {
        "session": "An <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> object specifying the WebXR session which will be rendered using the WebGL context.",
        "context": "A <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext\"><code>WebGLRenderingContext</code></a> or <a href=\"$MDN_URL$/Web/API/WebGL2RenderingContext\"><code>WebGL2RenderingContext</code></a> identifying the WebGL drawing context to use for rendering the scene for the specified WebXR session.",
        "layerInit": "An object providing configuration options for the new <code>XRWebGLLayer</code>. The available options are:<br> <ul> <li><code>alpha</code>: The frame buffer's color buffer will be established with an alpha channel if the <code>alpha</code> Boolean property is <code>true</code>. Otherwise, the color buffer will not have an alpha channel. The default value is <code>true</code>.</li> <li><code>antialias</code>: A Boolean value which is <code>true</code> if anti-aliasing is to be used when rendering in the context; otherwise <code>false</code>. The browser selects the anti-aliasing method to use; there is no support for requesting a specific mode yet.  The default value is <code>true</code>.</li> <li><code>depth</code>: A Boolean value which, if <code>true</code>, requests that the new layer have a depth buffer; otherwise, no depth layer is allocated. The default is <code>true</code>.</li> <li><code>framebufferScaleFactor</code>: A floating-point value which is used to scale the image during compositing, with a value of 1.0 represents the default pixel size for the frame buffer. The static <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> function <a href=\"$MDN_URL$/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor\"><code>XRWebGLLayer.getNativeFramebufferScaleFactor()</code></a> returns the scale that would result in a 1:1 pixel ratio, thereby ensuring that the rendering is occurring at the device's native resolution. The default is 1.0.</li> <li><code>ignoreDepthValues</code>: A Boolean value which indicates whether or not to ignore the contents of the depth buffer while compositing the scene. The default is <code>false</code>.</li> <li><code>stencil</code>: A Boolean value which, if <code>true</code>, requests that the new layer include a stencil buffer. Otherwise, no stencil buffer is allocated. The default is <code>false</code>.</li> </ul>"
      },
      "returns": "<p>A newly-created <a href=\"$MDN_URL$/Web/API/XRWebGLLayer\"><code>XRWebGLLayer</code></a> which links the specified\n  <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> to the WebGL context given by <code>context</code>, which will\n  be used as the renderer for the session. Any options specified in <code>layerInit</code>\n  are used to tailor the rendering system's configuration.</p>",
      "throws": {
        "InvalidStateError": "The new <code>XRWebGLLayer</code> could not be created due to one of a number of possible state errors:<br> <ul> <li>The <a href=\"$MDN_URL$/Web/API/XRSession\"><code>XRSession</code></a> specified by <code>session</code> has already been stopped.</li> <li>The specified WebGL context, <code>context</code>, <a href=\"$MDN_URL$/Web/API/WebGLRenderingContext/isContextLost#usage_notes\" data-flaw=\"link1\">has been lost</a> for any reason, such as a GPU switch or reset.</li> <li>The specified <code>session</code> is immersive but the <code>context</code> is not WebXR compatible.</li> </ul>",
        "OperationError": "The resources (including memory buffers) needed for the layer to operate could not be allocated."
      }
    },
    "xsltprocessor": {
      "url": "$MDN_URL$/web/api/xsltprocessor",
      "status": [
        "Experimental"
      ],
      "compatibility": {
        "Chrome": "",
        "ChromeAndroid": "",
        "Edge": "",
        "Firefox": "",
        "Opera": "12.1",
        "Safari": "3.1",
        "SafariIOS": "2"
      },
      "doc": "<div><div class=\"notecard warning\">\n<h4 id=\"non-standard\">Non-standard</h4>\n<p>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</p>\n</div><div class=\"notecard experimental\">\n<h4 id=\"experimental\">Experimental</h4>\n<p><strong>This is an <a href=\"$MDN_URL$/MDN/Guidelines/Conventions_definitions#experimental\">experimental technology</a></strong><br>Check the <a href=\"#browser_compatibility\">Browser compatibility table</a> carefully before using this in production.</p>\n</div></div>\n<p>An <strong><code>XSLTProcessor</code></strong> applies an <a href=\"$MDN_URL$/Web/XSLT\">XSLT</a> stylesheet transformation to an XML document to\nproduce a new XML document as output. It has methods to load the XSLT stylesheet, to\nmanipulate <code>&lt;xsl:param&gt;</code> parameter values, and to apply the\ntransformation to documents.</p>"
    },
    "xsltprocessor.introduction": {
      "url": "$MDN_URL$/web/api/xsltprocessor/introduction",
      "doc": "<p>One noticeable trend in W3C standards has been the effort to separate content from style. This would allow the same style to be reused for multiple content, as well as simplify maintenance and allow a quick (only modify one file) way to change the look of content.</p>\n<p>CSS (Cascade Style Sheets) was one of the first ways proposed by the W3C. CSS is a simple way to apply style rules to a web document. These style rules define how the document (the content) should be laid out. However, it has several limitations, such as lack of programming structures and ability to create complex layout models. CSS also has limited support for changing the position of an element.</p>\n<p>XSL (Extensible Stylesheet Language) Transformations are composed of two parts: XSL elements, which allow the transformation of an XML tree into another markup tree and XPath, a selection language for trees. XSLT takes an XML document (the content) and creates a brand new document based on the rules in the XSL stylesheet. This allows XSLT to add, remove and reorganize elements from the original XML document and thus allows more fine-grain control of the resulting document's structure.</p>\n<p>Transformations in XSLT are based on rules that consist of templates. Each template matches (using XPath) a certain fragment of the input XML document and then applies the substitution part on that fragment to create the new resulting document.</p>"
    },
    "xsltprocessor.resources": {
      "url": "$MDN_URL$/web/api/xsltprocessor/resources",
      "doc": "<ul>\n<li><a href=\"http://devedge.netscape.com/library/manuals/2001/xslt/1.0/\" class=\"external\" rel=\" noopener\">Transforming XML: Netscape and XSLT</a></li>\n<li><a href=\"https://www-106.ibm.com/developerworks/library/x-xslt/\" data-flaw=\"link1\" class=\"external\" rel=\" noopener\">What kind of language is XSLT?</a> at <a href=\"https://www-106.ibm.com/developerworks/\" data-flaw=\"link2\" class=\"external\" rel=\" noopener\">IBM developerWorks</a></li>\n<li><a href=\"http://www.zvon.org/xxl/XSLTutorial/Books/Book1/index.html\" class=\"external\" rel=\" noopener\">XSLT Tutorial</a> at <a href=\"http://www.zvon.org/\" class=\"external\" rel=\" noopener\">zvon.org</a></li>\n<li><a href=\"http://www.zvon.org/xxl/XPathTutorial/General/examples.html\" class=\"external\" rel=\" noopener\">XPath Tutorial</a> at <a href=\"http://www.zvon.org/\" class=\"external\" rel=\" noopener\">zvon.org</a></li>\n<li><a href=\"https://www.mozilla.org/projects/xslt/js-interface.html\" class=\"external\" rel=\" noopener\">Using the Mozilla JavaScript interface to do XSL Transformations</a> at <a href=\"https://www.mozilla.org/\" class=\"external\" rel=\" noopener\">mozilla.org</a></li>\n<li><a href=\"https://www.mozilla.org/projects/xslt/\" class=\"external\" rel=\" noopener\">Mozilla.org's XSLT Project Page</a>, which includes a frequently encountered issues section.</li>\n</ul>"
    }
  }
}