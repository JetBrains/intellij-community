add.closing.tag=Add closing tag
add.custom.html.attribute=Add {0} to custom html attributes
add.custom.html.boolean.attribute=Add {0} to custom html boolean attributes
add.custom.html.tag=Add {0} to custom html tags
add.named.closing.tag=Add </{0}>
add.optional.html.attribute=Add {0} to not required html attributes
attribute.is.not.allowed.here=Attribute {0} is not allowed here
attribute.is.not.boolean=Attribute {0} is not boolean
attribute.should.be.preceded.with.space=There should be a space between attribute and previous attribute
cdata.end.should.not.appear.in.content.unless.to.mark.end.of.cdata.section=Character sequence ']]>' must not appear in content unless used to mark the end of a CDATA section
change.root.element.to=Change root tag name to {0}
declare.id.in.comment.quickfix=Declare invalid id in comment annotation
duplicate.attribute=Duplicate attribute {0}
duplicate.id.reference=Duplicate id reference
element.doesnt.have.required.attribute=Element {0} doesn''t have required attribute {1}
element.is.not.allowed.here=Element {0} is not allowed here
element.missing.end.tag=Element \\&lt;#ref\\&gt; is missing an end tag
element.must.be.declared=Element {0} must be declared
escape.ampersand.quickfix=Escape ampersand
extra.closing.tag.for.empty.element=Closing tag is redundant
fix.html.family=Fix Html
html.inspections.check.empty.script.message=Empty tag doesn't work in some browsers
html.inspections.check.empty.script.tag.fix.message=Expand tag
html.inspections.unknown.tag.attribute.checkbox.title=Custom HTML tag attributes:
html.inspections.unknown.tag.attribute.title=Edit custom attributes
html.inspections.unknown.tag.boolean.attribute.checkbox.title=Custom HTML boolean tag attributes:
html.inspections.unknown.tag.boolean.attribute.title=Edit custom boolean attributes
html.inspections.unknown.tag.checkbox.title=Custom HTML tags:
html.inspections.unknown.tag.title=Edit custom tags
invalid.id.reference=Invalid id reference
redundant.default.attribute.value.assignment=Redundant default attribute value assignment
remove.attribute.quickfix.family=Remove attribute
remove.attribute.quickfix.text=Remove attribute {0}
remove.extra.closing.tag.quickfix=Remove extra closing tag
remove.tag.quickfix.family=Remove tag
remove.tag.quickfix.text=Remove tag {0}
rename.attribute=Rename attribute
rename.attribute.to.0=Rename attribute to {0}
rename.end.tag.name.intention=Rename end tag ''{0}'' to ''{1}''
rename.start.tag.name.intention=Rename start tag ''{0}'' to ''{1}''
switch.to.html5.quickfix.text=Switch to HTML5 language level
tag.has.wrong.closing.tag.name=Start tag has wrong closing tag
tag.should.have.one.of.following.attributes.0=Tag should have one of following attributes: {0}
the.attribute.is.marked.as.deprecated=The attribute is marked as deprecated
the.tag.is.marked.as.deprecated=The tag is marked as deprecated
unbound.namespace=Namespace ''{0}'' is not bound
unbound.namespace.no.param=Namespace is not bound
unescaped.ampersand=Unescaped \\&
unescaped.xml.character=Unescaped xml character
unknown.html.tag=Unknown html tag {0}
wrong.closing.tag.name=Wrong closing tag name
wrong.root.element=Wrong root element

xml.declaration.should.precede.all.document.content=Xml declaration should precede all document content
xml.dtd.create.entity.intention.name=Create Entity Declaration {0}
xml.dtd.create.dtd.element.intention.name=Create Element Declaration {0}

xml.inspections.replace.tag.empty.body.with.empty.end=Collapse empty tag
xml.inspections.tag.empty.body=XML tag has empty body
xml.inspections.unused.schema.declaration=Namespace declaration is never used
xml.inspections.unused.schema.location=Namespace location is never used
xml.inspections.unused.schema.remove=Remove unused namespace declaration

xml.schema.create.attribute.group.intention.name=Create Attribute Group {0}
xml.schema.create.attribute.intention.name=Create Attribute {0}
xml.schema.create.complex.type.intention.name=Create Complex Type {0}
xml.schema.create.element.intention.name=Create Element {0}
xml.schema.create.group.intention.name=Create Group {0}
xml.schema.create.simple.type.intention.name=Create Simple Type {0}
