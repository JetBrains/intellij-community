default namespace = "http://www.w3.org/2000/svg"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"


## 
##     SVG 1.1 Mask Module
##     file: svg-mask.rng
## 
##     This is SVG, a language for describing two-dimensional graphics in XML.
##     Copyright 2001, 2002 W3C (MIT, INRIA, Keio), All Rights Reserved.
##
##     Modifications Copyright 2007 Mozilla Foundation
## 
##     $Id$
##   

## 
##     Mask
## 
##         mask
## 
##     This module declares markup to provide support for masking.
##   

## 
##     Datatypes
##   
[ xml:lang = "en" ]
grammar {
    MaskValue.datatype = xsd:string
    a:documentation [ "\x{a}" ~ "    SVG.Mask.attrib\x{a}" ~ "  " ]
    SVG.Mask.extra.attrib = empty
    SVG.Mask.attrib &=
        attribute mask { MaskValue.datatype }?,
        SVG.Mask.extra.attrib
    a:documentation [ "\x{a}" ~ "    SVG.Mask.class\x{a}" ~ "  " ]
    SVG.Mask.extra.class = notAllowed
    SVG.Mask.class |= mask | SVG.Mask.extra.class
    a:documentation [ "\x{a}" ~ "    mask: Mask Element\x{a}" ~ "  " ]
    SVG.mask.content =
        (SVG.Description.class
         | SVG.Animation.class
         | SVG.Structure.class
         | SVG.Conditional.class
         | SVG.Image.class
         | SVG.Style.class
         | SVG.Shape.class
         | SVG.Text.class
         | SVG.Marker.class
         | SVG.Profile.class
         | SVG.Gradient.class
         | SVG.Pattern.class
         | SVG.Clip.class
         | SVG.Mask.class
         | SVG.Filter.class
         | SVG.Cursor.class
         | SVG.Hyperlink.class
         | SVG.View.class
         | SVG.Script.class
         | SVG.Font.class)*
    mask = element mask { attlist.mask, SVG.mask.content }
    attlist.mask &=
        SVG.Core.attrib,
        SVG.Conditional.attrib,
        SVG.Style.attrib,
        SVG.Presentation.attrib,
        SVG.External.attrib,
        attribute x { Coordinate.datatype }?,
        attribute y { Coordinate.datatype }?,
        attribute width { Length.datatype }?,
        attribute height { Length.datatype }?,
        attribute maskUnits { "userSpaceOnUse" | "objectBoundingBox" }?,
        attribute maskContentUnits {
            "userSpaceOnUse" | "objectBoundingBox"
        }?
}
