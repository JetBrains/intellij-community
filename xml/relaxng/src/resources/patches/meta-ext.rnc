datatypes w = "http://whattf.org/datatype-draft"

## "Content-Language" pragma directive: <meta http-equiv='Content-Language'>

	meta.http-equiv.content-language.elem =
		element meta { meta.inner & meta.http-equiv.content-language.attrs }
	meta.http-equiv.content-language.attrs =
		(	common.attrs.basic
		&	common.attrs.i18n
		&	common.attrs.present
		&	common.attrs.other
		&	meta.http-equiv.attrs.http-equiv.content-language
		&	meta.http-equiv.attrs.content.content-language
		&	(	common.attrs.aria.role.presentation
			|	common.attrs.aria.role.menuitem
			)?
		)
		meta.http-equiv.attrs.http-equiv.content-language =
			attribute http-equiv {
				w:string "content-language"
			}
		meta.http-equiv.attrs.content.content-language =
			attribute content {
				common.data.string
			}

	common.elem.metadata |= meta.http-equiv.content-language.elem # not quite right per spec
                                                               # if the definition is
                                                               # reused in another language

## "X-UA-Compatible" pragma directive: <meta http-equiv='X-UA-Compatible'>

	meta.http-equiv.x-ua-compatible.elem =
		element meta { meta.inner & meta.http-equiv.x-ua-compatible.attrs }
	meta.http-equiv.x-ua-compatible.attrs =
		(	common.attrs.basic
		&	common.attrs.i18n
		&	common.attrs.present
		&	common.attrs.other
		&	meta.http-equiv.attrs.http-equiv.x-ua-compatible
		&	meta.http-equiv.attrs.content.x-ua-compatible
		&	(	common.attrs.aria.role.presentation
			|	common.attrs.aria.role.menuitem
			)?
		)
		meta.http-equiv.attrs.http-equiv.x-ua-compatible =
			attribute http-equiv {
				w:string "x-ua-compatible"
			}
		meta.http-equiv.attrs.content.x-ua-compatible =
			attribute content {
				common.data.string
			}

	common.elem.metadata |= meta.http-equiv.x-ua-compatible.elem # not quite right per spec
                                                               # if the definition is
                                                               # reused in another language

     html.inner |= (
                     head.inner,
                     body.inner
                   )