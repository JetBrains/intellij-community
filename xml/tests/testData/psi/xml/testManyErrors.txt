XmlFile:test.xml
  PsiElement(XML_DOCUMENT)
    PsiElement(XML_PROLOG)
      <empty list>
    XmlTag:html
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('html')
      XmlToken:XML_TAG_END('>')
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:HEAD
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('HEAD')
        XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n\t')
        XmlTag:TITLE
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('TITLE')
          XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('AppletViewer')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Tags')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('TITLE')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('HEAD')
        XmlToken:XML_TAG_END('>')
      XmlText
        PsiWhiteSpace('\n\n')
      XmlTag:BODY
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('BODY')
        PsiWhiteSpace(' ')
        PsiElement(XML_ATTRIBUTE)
          XmlToken:XML_NAME('bgcolor')
          XmlToken:XML_EQ('=')
          PsiElement(XML_ATTRIBUTE_VALUE)
            XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
            XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('white')
            XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element BODY is not closed
          <empty list>
      XmlText
        PsiWhiteSpace('\n\n')
      XmlTag:TABLE
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('TABLE')
        PsiWhiteSpace(' ')
        PsiElement(XML_ATTRIBUTE)
          XmlToken:XML_NAME('BORDER')
          XmlToken:XML_EQ('=')
          PsiElement(XML_ATTRIBUTE_VALUE)
            XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
            XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('0')
            XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
        PsiWhiteSpace(' ')
        PsiElement(XML_ATTRIBUTE)
          XmlToken:XML_NAME('WIDTH')
          XmlToken:XML_EQ('=')
          PsiElement(XML_ATTRIBUTE_VALUE)
            XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
            XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('100%')
            XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
        PsiWhiteSpace(' ')
        PsiElement(XML_ATTRIBUTE)
          XmlToken:XML_NAME('summary')
          XmlToken:XML_EQ('=')
          PsiElement(XML_ATTRIBUTE_VALUE)
            XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
            XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('layout')
            XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
        XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlTag:TR
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('TR')
          XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:TD
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('TD')
            XmlToken:XML_TAG_END('>')
            XmlText
              PsiWhiteSpace('\n   ')
            XmlTag:IMG
              XmlToken:XML_START_TAG_START('<')
              XmlToken:XML_NAME('IMG')
              PsiWhiteSpace(' ')
              PsiElement(XML_ATTRIBUTE)
                XmlToken:XML_NAME('SRC')
                XmlToken:XML_EQ('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                  XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('../images/javalogo52x88.gif')
                  XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
              PsiWhiteSpace(' ')
              PsiElement(XML_ATTRIBUTE)
                XmlToken:XML_NAME('ALT')
                XmlToken:XML_EQ('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                  XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('Java')
                  XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
              PsiWhiteSpace(' ')
              PsiElement(XML_ATTRIBUTE)
                XmlToken:XML_NAME('BORDER')
                XmlToken:XML_EQ('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  PsiErrorElement:Attribute value expected
                    <empty list>
            XmlText
              XmlToken:XML_DATA_CHARACTERS('0')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('WIDTH=52')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('HEIGHT=88>')
              PsiWhiteSpace('\n')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('TD')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n\n')
          XmlTag:TD
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('TD')
            XmlToken:XML_TAG_END('>')
            XmlText
              PsiWhiteSpace('\n')
            XmlTag:center
              XmlToken:XML_START_TAG_START('<')
              XmlToken:XML_NAME('center')
              XmlToken:XML_TAG_END('>')
              XmlText
                PsiWhiteSpace('\n           ')
              XmlTag:h1
                XmlToken:XML_START_TAG_START('<')
                XmlToken:XML_NAME('h1')
                XmlToken:XML_TAG_END('>')
                XmlText
                  XmlToken:XML_DATA_CHARACTERS('AppletViewer')
                  PsiWhiteSpace(' ')
                  XmlToken:XML_DATA_CHARACTERS('Tags')
                XmlToken:XML_END_TAG_START('</')
                XmlToken:XML_NAME('h1')
                XmlToken:XML_TAG_END('>')
              XmlText
                PsiWhiteSpace('\n')
              XmlToken:XML_END_TAG_START('</')
              XmlToken:XML_NAME('center')
              XmlToken:XML_TAG_END('>')
            XmlText
              PsiWhiteSpace('\n')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('TD')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n\n')
          XmlTag:TD
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('TD')
            PsiWhiteSpace(' ')
            PsiElement(XML_ATTRIBUTE)
              XmlToken:XML_NAME('ALIGN')
              XmlToken:XML_EQ('=')
              PsiElement(XML_ATTRIBUTE_VALUE)
                PsiErrorElement:Attribute value expected
                  <empty list>
            PsiElement(XML_ATTRIBUTE)
              XmlToken:XML_NAME('RIGHT')
              PsiErrorElement:= expected
                <empty list>
            PsiWhiteSpace(' ')
            PsiElement(XML_ATTRIBUTE)
              XmlToken:XML_NAME('VALIGN')
              XmlToken:XML_EQ('=')
              PsiElement(XML_ATTRIBUTE_VALUE)
                PsiErrorElement:Attribute value expected
                  <empty list>
            PsiElement(XML_ATTRIBUTE)
              XmlToken:XML_NAME('TOP')
              PsiErrorElement:= expected
                <empty list>
            XmlToken:XML_TAG_END('>')
            XmlText
              PsiWhiteSpace('\n')
            XmlTag:font
              XmlToken:XML_START_TAG_START('<')
              XmlToken:XML_NAME('font')
              PsiWhiteSpace(' ')
              PsiElement(XML_ATTRIBUTE)
                XmlToken:XML_NAME('size')
                XmlToken:XML_EQ('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                  XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('-1')
                  XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
              XmlToken:XML_TAG_END('>')
              XmlTag:a
                XmlToken:XML_START_TAG_START('<')
                XmlToken:XML_NAME('a')
                PsiWhiteSpace(' ')
                PsiElement(XML_ATTRIBUTE)
                  XmlToken:XML_NAME('href')
                  XmlToken:XML_EQ('=')
                  PsiElement(XML_ATTRIBUTE_VALUE)
                    XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                    XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('../index.html')
                    XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
                XmlToken:XML_TAG_END('>')
                XmlText
                  XmlToken:XML_DATA_CHARACTERS('Documentation')
                  PsiWhiteSpace(' ')
                  XmlToken:XML_DATA_CHARACTERS('Contents')
                XmlToken:XML_END_TAG_START('</')
                XmlToken:XML_NAME('a')
                XmlToken:XML_TAG_END('>')
              XmlToken:XML_END_TAG_START('</')
              XmlToken:XML_NAME('font')
              XmlToken:XML_TAG_END('>')
            XmlText
              PsiWhiteSpace('\n')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('TD')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('TR')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('TABLE')
        XmlToken:XML_TAG_END('>')
      XmlText
        PsiWhiteSpace('\n\n\n')
      PsiElement(XML_COMMENT)
        XmlToken:XML_COMMENT_START('<!--')
        XmlToken:XML_COMMENT_CHARACTERS(' ======================== Body text begins here ===================== ')
        XmlToken:XML_COMMENT_END('-->')
      XmlText
        PsiWhiteSpace('\n')
        XmlToken:XML_DATA_CHARACTERS('The')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('applet')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('viewer')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('makes')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('it')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('possible')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('to')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('run')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('a')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('Java')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('applet')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('without')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('using')
        PsiWhiteSpace('\n')
        XmlToken:XML_DATA_CHARACTERS('a')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('browser.')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('AppletViewer')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('ignores')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('any')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('HTML')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('that')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('is')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('not')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('immediately')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('relevant')
        PsiWhiteSpace('\n')
        XmlToken:XML_DATA_CHARACTERS('to')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('launching')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('an')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('applet.')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('However,')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('it')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('recognizes')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('a')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('wide')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('variety')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('of')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('applet-')
        PsiWhiteSpace('\n')
        XmlToken:XML_DATA_CHARACTERS('launching')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('syntax.')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('The')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('HTML')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('code')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('that')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('AppletViewer')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('recognizes')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('is')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('shown')
        PsiWhiteSpace('\n')
        XmlToken:XML_DATA_CHARACTERS('below.')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('All')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('other')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('HTML')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('code')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('is')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('ignored.')
        PsiWhiteSpace('\n')
      XmlTag:p
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('p')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element p is not closed
          <empty list>
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:b
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('b')
        XmlToken:XML_TAG_END('>')
        XmlText
          XmlToken:XML_DATA_CHARACTERS('object')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('b')
        XmlToken:XML_TAG_END('>')
      XmlTag:br
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('br')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element br is not closed
          <empty list>
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:blockquote
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('blockquote')
        XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
          XmlToken:XML_DATA_CHARACTERS('The')
          PsiWhiteSpace(' ')
        XmlTag:code
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('object')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('tag')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('is')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('HTML')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('4.0')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('tag')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('for')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('embedding')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('applets')
          PsiWhiteSpace(' \n')
          XmlToken:XML_DATA_CHARACTERS('and')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('mult-media')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('objects')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('into')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('an')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('HTML')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('page.')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('It')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('is')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('also')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('an')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Internet')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Explorer')
          PsiWhiteSpace('\n')
          XmlToken:XML_DATA_CHARACTERS('4.x')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('extension')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('to')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('HTML')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('3.2')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('which')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('allows')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('IE')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('to')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('run')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('a')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Java')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('applet')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('using')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' \n')
          XmlToken:XML_DATA_CHARACTERS('latest')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Java')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('plugin')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('from')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Sun.')
          PsiWhiteSpace('\n')
        XmlTag:pre
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('pre')
          XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('object')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('width="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('pixelWidth')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('height="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('pixelHeight')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('param')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('name="code"')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('value="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('yourClass.class')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('param')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('name="object"')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('value="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('serializedObjectOrJavaBean')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('param')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('name="codebase"')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('value="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('classFileDirectory')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n   ')
            XmlToken:XML_DATA_CHARACTERS('...')
            PsiWhiteSpace('\n  ')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('alternate-text')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('/object')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('pre')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlTag:b
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('b')
          XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('Notes:')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('b')
          XmlToken:XML_TAG_END('>')
        XmlTag:br
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('br')
          XmlToken:XML_TAG_END('>')
          PsiErrorElement:Element br is not closed
            <empty list>
        XmlTag:ul
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('ul')
          XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('AppletViewer')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('ignores')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('"classID"')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('attribute,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('on')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('assumption')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('it')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('is')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('pointing')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('to')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Java')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('plugin,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('with')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('value:')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
            XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
            XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              PsiWhiteSpace('\n      ')
              XmlToken:XML_DATA_CHARACTERS('classid="clsid:8AD9C840-044E-11D1-B3E9-00805F499D93"')
              PsiWhiteSpace('\n    ')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('AppletViewer')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('also')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('ignores')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('"codebase"')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('attribute')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('is')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('usually')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('included')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('as')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('part')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('of')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('object')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tag,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('assuming')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('it')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('points')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('to')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Java')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('plugin')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('in')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('network')
            PsiWhiteSpace(' ')
          XmlTag:b
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('b')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('cab')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('b')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('file')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('with')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('value')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('like:')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              PsiWhiteSpace('\n      ')
              XmlToken:XML_DATA_CHARACTERS('codebase="http://java.sun.com/products/plugin/1.1/jinstall-11-win32.cab#Version=1,1,0,0"')
              PsiWhiteSpace('\n    ')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('The')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('optional')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('codebase')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('param')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tag')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('supplies')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('relative')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('URL')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('specifies')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('location')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('of')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('class.')
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('Either')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('code')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('or')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('object')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('is')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('specified,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('not')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('both.')
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('The')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('type')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('param')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tag')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('is')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('not')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('used')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('by')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('AppletViewer,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('but')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('should')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('be')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('present')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('so')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('browsers')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('load')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('plugin')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('properly.')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n\t ')
            XmlToken:XML_DATA_CHARACTERS('For')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('an')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('value')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('should')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('be')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('something')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('like:')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              PsiWhiteSpace('\n      ')
              XmlToken:XML_CHAR_ENTITY_REF('&lt;')
              XmlToken:XML_DATA_CHARACTERS('param')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('name="type"')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('value="application/x-java-applet;version=1.1"')
              XmlToken:XML_CHAR_ENTITY_REF('&gt;')
              PsiWhiteSpace('\n    ')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('or')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              PsiWhiteSpace('\n      ')
              XmlToken:XML_CHAR_ENTITY_REF('&lt;')
              XmlToken:XML_DATA_CHARACTERS('param')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('name="type"')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('value="application/x-java-applet"')
              XmlToken:XML_CHAR_ENTITY_REF('&gt;')
              PsiWhiteSpace('\n    ')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('For')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('serialized')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('object')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('or')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('JavaBean,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('type')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('param')
            PsiWhiteSpace(' \n\t ')
            XmlToken:XML_DATA_CHARACTERS('value')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('should')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('be')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('something')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('like:')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              PsiWhiteSpace('\n      ')
              XmlToken:XML_CHAR_ENTITY_REF('&lt;')
              XmlToken:XML_DATA_CHARACTERS('param')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('name="type"')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('value="application/x-java-bean;version=1.1"')
              XmlToken:XML_CHAR_ENTITY_REF('&gt;')
              PsiWhiteSpace('\n    ')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('or')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              PsiWhiteSpace('\n      ')
              XmlToken:XML_CHAR_ENTITY_REF('&lt;')
              XmlToken:XML_DATA_CHARACTERS('param')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('name="type"')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('value="application/x-java-bean"')
              XmlToken:XML_CHAR_ENTITY_REF('&gt;')
              PsiWhiteSpace('\n    ')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('Other')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('param')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tags')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('are')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('argument')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('values')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('supplied')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('to')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet.')
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('The')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('object')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tag')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('recognized')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('by')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('IE4.x')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('and')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('embed')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tag')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('recognized')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('by')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Netscape')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('4.x')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('can')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('be')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('combined')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('so')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('an')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('can')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('use')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('latest')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Java')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('plugin')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('from')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Sun,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('regardless')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('of')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('browser')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('downloads')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet.')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n\t ')
            XmlToken:XML_DATA_CHARACTERS('For')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('more')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('information,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('see')
            PsiWhiteSpace('\n    ')
          XmlTag:a
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('a')
            PsiWhiteSpace(' ')
            PsiElement(XML_ATTRIBUTE)
              XmlToken:XML_NAME('href')
              XmlToken:XML_EQ('=')
              PsiElement(XML_ATTRIBUTE_VALUE)
                XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('http://java.sun.com/products/plugin/1.3/docs/tags.html')
                XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('Java')
              PsiWhiteSpace('\n    ')
              XmlToken:XML_DATA_CHARACTERS('PlugIn')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('HTML')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('Specification')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('a')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('AppletViewer')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('does')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('not')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('recognize')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('java_code')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS(',')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('java_codebase')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS(',')
            PsiWhiteSpace('\n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('java_object')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS(',')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('or')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('java_type')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('param')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tags.')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('These')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tags')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('are')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('only')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('needed')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('when')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('defines')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('parameters')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('with')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('names')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('code,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('codebase,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('object,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('or')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('type,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('respectively.')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('(In')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('situation,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('plugin')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('recognizes')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('and')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('uses')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('java_')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('version')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('in')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('preference')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('to')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('version')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('will')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('be')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('used')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('by')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet.)')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('If')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('requires')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('parameter')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('with')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('one')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('of')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('these')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('4')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('names,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('it')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('may')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('not')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('run')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('in')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('AppletViewer.')
            PsiWhiteSpace('\n')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('ul')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('blockquote')
        XmlToken:XML_TAG_END('>')
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:p
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('p')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element p is not closed
          <empty list>
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:b
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('b')
        XmlToken:XML_TAG_END('>')
        XmlText
          XmlToken:XML_DATA_CHARACTERS('embed')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('b')
        XmlToken:XML_TAG_END('>')
      XmlTag:br
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('br')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element br is not closed
          <empty list>
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:blockquote
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('blockquote')
        XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
          XmlToken:XML_DATA_CHARACTERS('The')
          PsiWhiteSpace(' ')
        XmlTag:code
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('embed')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('tag')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('is')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Netscape')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('extension')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('to')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('HTML')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('3.2')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('that')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('allows')
          PsiWhiteSpace(' \n')
          XmlToken:XML_DATA_CHARACTERS('embedding')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('an')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('applet')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('or')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('a')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('multimedia')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('object')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('in')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('an')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('HTML')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('page.')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('It')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('allows')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('a')
          PsiWhiteSpace('\n')
          XmlToken:XML_DATA_CHARACTERS('Netscape')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('4.x')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('browser')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('(which')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('supports')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('HTML')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('3.2)')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('to')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('run')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('a')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Java')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('applet')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('using')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' \n')
          XmlToken:XML_DATA_CHARACTERS('latest')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Java')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('plugin')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('from')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Sun.')
          PsiWhiteSpace('\n')
        XmlTag:pre
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('pre')
          XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('embed')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('code="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('yourClass.class')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('object="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('serializedObjectOrJavaBean')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('codebase="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('classFileDirectory')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('width="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('pixelWidth')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('height="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('pixelHeight')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n   ')
            XmlToken:XML_DATA_CHARACTERS('...')
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('/embed')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('pre')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlTag:b
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('b')
          XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('Notes:')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('b')
          XmlToken:XML_TAG_END('>')
        XmlTag:br
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('br')
          XmlToken:XML_TAG_END('>')
          PsiErrorElement:Element br is not closed
            <empty list>
        XmlText
          PsiWhiteSpace('\n')
        XmlTag:ul
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('ul')
          XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('The')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('object')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('and')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('embed')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tags')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('can')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('be')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('combined')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('so')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('an')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('can')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('use')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('latest')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Java')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('plugin')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('from')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Sun,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('regardless')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('of')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('browser')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('downloads')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet.')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n\t ')
            XmlToken:XML_DATA_CHARACTERS('For')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('more')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('information,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('see')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace('\n    ')
          XmlTag:a
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('a')
            PsiWhiteSpace(' ')
            PsiElement(XML_ATTRIBUTE)
              XmlToken:XML_NAME('href')
              XmlToken:XML_EQ('=')
              PsiElement(XML_ATTRIBUTE_VALUE)
                XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('http://java.sun.com/products/plugin/1.3/docs/tags.html')
                XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('Java')
              PsiWhiteSpace(' \n    ')
              XmlToken:XML_DATA_CHARACTERS('PlugIn')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('HTML')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('Specification')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('a')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('Unlike')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('object')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tag,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('all')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('values')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('specified')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('in')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('an')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('embed')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('tag')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('are')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('attributes')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('(part')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('of')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tag)')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('rather')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('than')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('parameters')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('(between')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('start')
            PsiWhiteSpace('\n\t ')
            XmlToken:XML_DATA_CHARACTERS('tag')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('and')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('end')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tag,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('specified')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('with')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('param')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tag.')
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('To')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('supply')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('argument')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('values')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('for')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('parameters,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('you')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('add')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('additional')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('attributes')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('to')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&lt;')
              XmlToken:XML_DATA_CHARACTERS('embed')
              XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tag.')
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('AppletViewer')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('ignores')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('"src"')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('attribute')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('is')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('usually')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('part')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('of')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('an')
            PsiWhiteSpace(' \n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&lt;')
              XmlToken:XML_DATA_CHARACTERS('embed')
              XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tag.')
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('Either')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('code')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('or')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('object')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('is')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('specified,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('not')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('both.')
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('The')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('optional')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('codebase')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('attribute')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('supplies')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('relative')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('URL')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('specifies')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('location')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('of')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('class.')
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('The')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('type')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('attribute')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('is')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('not')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('used')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('by')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('AppletViewer,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('but')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('should')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('be')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('present')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('so')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('browsers')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('load')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('plugin')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('properly.')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n\t ')
            XmlToken:XML_DATA_CHARACTERS('For')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('an')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('value')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('should')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('be')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('something')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('like:')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              PsiWhiteSpace('\n      ')
              XmlToken:XML_CHAR_ENTITY_REF('&lt;')
              XmlToken:XML_DATA_CHARACTERS('type="application/x-java-applet;version=1.1"')
              XmlToken:XML_CHAR_ENTITY_REF('&gt;')
              XmlToken:XML_DATA_CHARACTERS('...')
              PsiWhiteSpace('\n    ')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('or')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              PsiWhiteSpace('\n      ')
              XmlToken:XML_CHAR_ENTITY_REF('&lt;')
              XmlToken:XML_DATA_CHARACTERS('type="application/x-java-applet"')
              XmlToken:XML_CHAR_ENTITY_REF('&gt;')
              XmlToken:XML_DATA_CHARACTERS('...')
              PsiWhiteSpace('\n    ')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('For')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('serialized')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('object')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('or')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('JavaBean,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('type')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('param')
            PsiWhiteSpace(' \n\t ')
            XmlToken:XML_DATA_CHARACTERS('value')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('should')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('be')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('something')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('like:')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              PsiWhiteSpace('\n      ')
              XmlToken:XML_CHAR_ENTITY_REF('&lt;')
              XmlToken:XML_DATA_CHARACTERS('type="application/x-java-bean;version=1.1"')
              XmlToken:XML_CHAR_ENTITY_REF('&gt;')
              XmlToken:XML_DATA_CHARACTERS('...')
              PsiWhiteSpace('\n    ')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('or')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              PsiWhiteSpace('\n      ')
              XmlToken:XML_CHAR_ENTITY_REF('&lt;')
              XmlToken:XML_DATA_CHARACTERS('type="application/x-java-bean"')
              XmlToken:XML_CHAR_ENTITY_REF('&gt;')
              XmlToken:XML_DATA_CHARACTERS('...')
              PsiWhiteSpace('\n    ')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('The')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('"pluginspage"')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('attribute')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('is')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('not')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('used')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('by')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('AppletViewer,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('but')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('should')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('be')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('present')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('so')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('browsers')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('load')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('plugin')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('properly.')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('It')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('should')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('point')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('to')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('Java')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('plugin')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('in')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('network')
            PsiWhiteSpace(' ')
          XmlTag:b
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('b')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('cab')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('b')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('file')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('with')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('value')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('like:')
          XmlTag:br
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('br')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element br is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n    ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              XmlToken:XML_CHAR_ENTITY_REF('&nbsp;')
              PsiWhiteSpace('\n      ')
              XmlToken:XML_DATA_CHARACTERS('pluginspage="http://java.sun.com/products/plugin/1.1/jinstall-11-win32.cab#Version=1,1,0,0"')
              PsiWhiteSpace('\n    ')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('ul')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('blockquote')
        XmlToken:XML_TAG_END('>')
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:p
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('p')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element p is not closed
          <empty list>
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:b
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('b')
        XmlToken:XML_TAG_END('>')
        XmlText
          XmlToken:XML_DATA_CHARACTERS('applet')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('b')
        XmlToken:XML_TAG_END('>')
      XmlTag:br
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('br')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element br is not closed
          <empty list>
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:blockquote
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('blockquote')
        XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
          XmlToken:XML_DATA_CHARACTERS('The')
          PsiWhiteSpace(' ')
        XmlTag:code
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('applet')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('tag')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('is')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('original')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('HTML')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('3.2')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('tag')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('for')
          PsiWhiteSpace(' \n')
          XmlToken:XML_DATA_CHARACTERS('embedding')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('an')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('applet')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('in')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('an')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('HTML')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('page.')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Applets')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('loaded')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('using')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace('\n')
        XmlTag:code
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('applet')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('tag')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('are')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('run')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('by')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('browser,')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('which')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('may')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('not')
          PsiWhiteSpace('\n')
          XmlToken:XML_DATA_CHARACTERS('be')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('using')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('latest')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('version')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('of')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Java')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('platform.')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('To')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('ensure')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('that')
          PsiWhiteSpace('\n')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('applet')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('runs')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('with')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('latest')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('version,')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('use')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
        XmlTag:code
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('object')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
          XmlToken:XML_DATA_CHARACTERS('tag')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('to')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('load')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Java')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('plugin')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('into')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('browser.')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('The')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('plugin')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('will')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('then')
          PsiWhiteSpace('\n')
          XmlToken:XML_DATA_CHARACTERS('run')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('applet.')
          PsiWhiteSpace('\n')
        XmlTag:pre
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('pre')
          XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('applet')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('code="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('yourClass.class')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('object="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('serializedObjectOrJavaBean')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('codebase="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('classFileDirectory')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('width="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('pixelWidth')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('height="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('pixelHeight')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('param')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('name="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('...')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('value="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('...')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n   ')
            XmlToken:XML_DATA_CHARACTERS('...')
            PsiWhiteSpace('\n  ')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('alternate-text')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('/applet')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('pre')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlTag:b
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('b')
          XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('Notes:')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('b')
          XmlToken:XML_TAG_END('>')
        XmlTag:br
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('br')
          XmlToken:XML_TAG_END('>')
          PsiErrorElement:Element br is not closed
            <empty list>
        XmlText
          PsiWhiteSpace('\n')
        XmlTag:ul
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('ul')
          XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('Either')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('code')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('or')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('object')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('is')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('specified,')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('not')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('both.')
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('The')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('optional')
            PsiWhiteSpace(' ')
          XmlTag:code
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('codebase')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('code')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('attribute')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('supplies')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('relative')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('URL')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('that')
            PsiWhiteSpace('\n    ')
            XmlToken:XML_DATA_CHARACTERS('specifies')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('location')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('of')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('the')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('class.')
            PsiWhiteSpace('\n\t ')
          XmlTag:p
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('p')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element p is not closed
              <empty list>
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:li
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('li')
            XmlToken:XML_TAG_END('>')
            PsiErrorElement:Element li is not closed
              <empty list>
          XmlText
            XmlToken:XML_DATA_CHARACTERS('Param')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('tags')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('supply')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('argument')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('values')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('for')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('applet')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('parameters.')
            PsiWhiteSpace('\n')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('ul')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('blockquote')
        XmlToken:XML_TAG_END('>')
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:p
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('p')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element p is not closed
          <empty list>
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:b
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('b')
        XmlToken:XML_TAG_END('>')
        XmlText
          XmlToken:XML_DATA_CHARACTERS('app')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('b')
        XmlToken:XML_TAG_END('>')
      XmlTag:br
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('br')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element br is not closed
          <empty list>
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:blockquote
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('blockquote')
        XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
          XmlToken:XML_DATA_CHARACTERS('The')
          PsiWhiteSpace(' ')
        XmlTag:code
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('app')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('tag')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('was')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('a')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('short-lived')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('abbreviation')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('for')
          PsiWhiteSpace(' \n')
        XmlTag:code
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('applet')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('code')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('that')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('is')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('no')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('longer')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('supported.')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('AppletViewer')
          PsiWhiteSpace(' \n')
          XmlToken:XML_DATA_CHARACTERS('translates')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('the')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('tag')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('and')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('prints')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('out')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('an')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('equivalent')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('tag')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('that')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('is')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('supported.')
          PsiWhiteSpace('\n')
        XmlTag:pre
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('pre')
          XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('app')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('class="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('classFileName')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('(')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('without')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('a')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('.class')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('suffix)')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('src="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('classFileDirectory')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('width="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('pixelWidth')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n  ')
            XmlToken:XML_DATA_CHARACTERS('height="')
          XmlTag:i
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
            XmlText
              XmlToken:XML_DATA_CHARACTERS('pixelHeight')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('i')
            XmlToken:XML_TAG_END('>')
          XmlText
            XmlToken:XML_DATA_CHARACTERS('"')
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('param')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('name="..."')
            PsiWhiteSpace(' ')
            XmlToken:XML_DATA_CHARACTERS('value="..."')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n ')
            XmlToken:XML_DATA_CHARACTERS('...')
            PsiWhiteSpace('\n')
            XmlToken:XML_CHAR_ENTITY_REF('&lt;')
            XmlToken:XML_DATA_CHARACTERS('/app')
            XmlToken:XML_CHAR_ENTITY_REF('&gt;')
            PsiWhiteSpace('\n')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('pre')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('blockquote')
        XmlToken:XML_TAG_END('>')
      XmlText
        PsiWhiteSpace('\n\n')
        XmlToken:XML_DATA_CHARACTERS('For')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('more')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('information')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('on')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('the')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('tags')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('that')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('AppletViewer')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('supports')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('and')
      XmlTag:br
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('br')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element br is not closed
          <empty list>
      XmlText
        PsiWhiteSpace(' \n')
        XmlToken:XML_DATA_CHARACTERS('how')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('to')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('combine')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('them,')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('see')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('the')
        PsiWhiteSpace(' \n')
      XmlTag:a
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('a')
        PsiWhiteSpace(' ')
        PsiElement(XML_ATTRIBUTE)
          XmlToken:XML_NAME('href')
          XmlToken:XML_EQ('=')
          PsiElement(XML_ATTRIBUTE_VALUE)
            XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
            XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('http://java.sun.com/products/plugin/1.3/docs/tags.html')
            XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
        XmlToken:XML_TAG_END('>')
        XmlText
          XmlToken:XML_DATA_CHARACTERS('Java')
          PsiWhiteSpace(' \n')
          XmlToken:XML_DATA_CHARACTERS('PlugIn')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('HTML')
          PsiWhiteSpace(' ')
          XmlToken:XML_DATA_CHARACTERS('Specification')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('a')
        XmlToken:XML_TAG_END('>')
      XmlText
        XmlToken:XML_DATA_CHARACTERS('.')
        PsiWhiteSpace('\n')
      XmlTag:P
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('P')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element P is not closed
          <empty list>
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:HR
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('HR')
        PsiWhiteSpace(' ')
        PsiElement(XML_ATTRIBUTE)
          XmlToken:XML_NAME('SIZE')
          XmlToken:XML_EQ('=')
          PsiElement(XML_ATTRIBUTE_VALUE)
            PsiErrorElement:Attribute value expected
              <empty list>
      XmlText
        XmlToken:XML_DATA_CHARACTERS('3')
        PsiWhiteSpace(' ')
        XmlToken:XML_DATA_CHARACTERS('NOSHADE>')
        PsiWhiteSpace('\n')
      XmlTag:TABLE
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('TABLE')
        PsiWhiteSpace(' ')
        PsiElement(XML_ATTRIBUTE)
          XmlToken:XML_NAME('BORDER')
          XmlToken:XML_EQ('=')
          PsiElement(XML_ATTRIBUTE_VALUE)
            XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
            XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('0')
            XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
        PsiWhiteSpace(' ')
        PsiElement(XML_ATTRIBUTE)
          XmlToken:XML_NAME('WIDTH')
          XmlToken:XML_EQ('=')
          PsiElement(XML_ATTRIBUTE_VALUE)
            XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
            XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('100%')
            XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
        PsiWhiteSpace(' ')
        PsiElement(XML_ATTRIBUTE)
          XmlToken:XML_NAME('summary')
          XmlToken:XML_EQ('=')
          PsiElement(XML_ATTRIBUTE_VALUE)
            XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
            XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('layout')
            XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
        XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlTag:TR
          XmlToken:XML_START_TAG_START('<')
          XmlToken:XML_NAME('TR')
          PsiWhiteSpace(' ')
          PsiElement(XML_ATTRIBUTE)
            XmlToken:XML_NAME('VALIGN')
            XmlToken:XML_EQ('=')
            PsiElement(XML_ATTRIBUTE_VALUE)
              PsiErrorElement:Attribute value expected
                <empty list>
          PsiElement(XML_ATTRIBUTE)
            XmlToken:XML_NAME('TOP')
            PsiErrorElement:= expected
              <empty list>
          XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:TD
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('TD')
            XmlToken:XML_TAG_END('>')
            XmlText
              PsiWhiteSpace('\n')
            XmlTag:P
              XmlToken:XML_START_TAG_START('<')
              XmlToken:XML_NAME('P')
              XmlToken:XML_TAG_END('>')
              XmlTag:FONT
                XmlToken:XML_START_TAG_START('<')
                XmlToken:XML_NAME('FONT')
                PsiWhiteSpace(' ')
                PsiElement(XML_ATTRIBUTE)
                  XmlToken:XML_NAME('SIZE')
                  XmlToken:XML_EQ('=')
                  PsiElement(XML_ATTRIBUTE_VALUE)
                    XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                    XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('-2')
                    XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
                XmlToken:XML_TAG_END('>')
                XmlText
                  PsiWhiteSpace('\n  ')
                XmlTag:A
                  XmlToken:XML_START_TAG_START('<')
                  XmlToken:XML_NAME('A')
                  PsiWhiteSpace(' ')
                  PsiElement(XML_ATTRIBUTE)
                    XmlToken:XML_NAME('HREF')
                    XmlToken:XML_EQ('=')
                    PsiElement(XML_ATTRIBUTE_VALUE)
                      XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                      XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('../relnotes/SMICopyright.html')
                      XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
                  XmlToken:XML_TAG_END('>')
                  XmlText
                    XmlToken:XML_DATA_CHARACTERS('Copyright')
                  XmlToken:XML_END_TAG_START('</')
                  XmlToken:XML_NAME('A')
                  XmlToken:XML_TAG_END('>')
                XmlText
                  PsiWhiteSpace(' ')
                  XmlToken:XML_CHAR_ENTITY_REF('&#169;')
                  PsiWhiteSpace(' ')
                  XmlToken:XML_DATA_CHARACTERS('2001')
                  PsiWhiteSpace('\n  ')
                XmlTag:A
                  XmlToken:XML_START_TAG_START('<')
                  XmlToken:XML_NAME('A')
                  PsiWhiteSpace(' ')
                  PsiElement(XML_ATTRIBUTE)
                    XmlToken:XML_NAME('HREF')
                    XmlToken:XML_EQ('=')
                    PsiElement(XML_ATTRIBUTE_VALUE)
                      XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                      XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('http://www.sun.com')
                      XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
                  XmlToken:XML_TAG_END('>')
                  XmlText
                    XmlToken:XML_DATA_CHARACTERS('Sun')
                    PsiWhiteSpace(' ')
                    XmlToken:XML_DATA_CHARACTERS('Microsystems,')
                    PsiWhiteSpace(' ')
                    XmlToken:XML_DATA_CHARACTERS('Inc.')
                  XmlToken:XML_END_TAG_START('</')
                  XmlToken:XML_NAME('A')
                  XmlToken:XML_TAG_END('>')
                XmlText
                  PsiWhiteSpace('\n  ')
                  XmlToken:XML_DATA_CHARACTERS('All')
                  PsiWhiteSpace(' ')
                  XmlToken:XML_DATA_CHARACTERS('Rights')
                  PsiWhiteSpace(' ')
                  XmlToken:XML_DATA_CHARACTERS('Reserved.')
                XmlToken:XML_END_TAG_START('</')
                XmlToken:XML_NAME('FONT')
                XmlToken:XML_TAG_END('>')
              XmlToken:XML_END_TAG_START('</')
              XmlToken:XML_NAME('P')
              XmlToken:XML_TAG_END('>')
            XmlText
              PsiWhiteSpace('\n')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('TD')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
          XmlTag:TD
            XmlToken:XML_START_TAG_START('<')
            XmlToken:XML_NAME('TD')
            PsiWhiteSpace(' ')
            PsiElement(XML_ATTRIBUTE)
              XmlToken:XML_NAME('ALIGN')
              XmlToken:XML_EQ('=')
              PsiElement(XML_ATTRIBUTE_VALUE)
                PsiErrorElement:Attribute value expected
                  <empty list>
            PsiElement(XML_ATTRIBUTE)
              XmlToken:XML_NAME('RIGHT')
              PsiErrorElement:= expected
                <empty list>
            XmlToken:XML_TAG_END('>')
            XmlText
              PsiWhiteSpace('\n  ')
            XmlTag:IMG
              XmlToken:XML_START_TAG_START('<')
              XmlToken:XML_NAME('IMG')
              PsiWhiteSpace(' ')
              PsiElement(XML_ATTRIBUTE)
                XmlToken:XML_NAME('SRC')
                XmlToken:XML_EQ('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                  XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('../images/sunlogo64x30.gif')
                  XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
              PsiWhiteSpace(' ')
              PsiElement(XML_ATTRIBUTE)
                XmlToken:XML_NAME('ALT')
                XmlToken:XML_EQ('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                  XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('Sun')
                  XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
              PsiWhiteSpace(' ')
              PsiElement(XML_ATTRIBUTE)
                XmlToken:XML_NAME('BORDER')
                XmlToken:XML_EQ('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  PsiErrorElement:Attribute value expected
                    <empty list>
            XmlText
              XmlToken:XML_DATA_CHARACTERS('0')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('WIDTH=64')
              PsiWhiteSpace(' ')
              XmlToken:XML_DATA_CHARACTERS('HEIGHT=30>')
              PsiWhiteSpace('\n  ')
            XmlTag:BR
              XmlToken:XML_START_TAG_START('<')
              XmlToken:XML_NAME('BR')
              XmlToken:XML_TAG_END('>')
              PsiErrorElement:Element BR is not closed
                <empty list>
            XmlText
              PsiWhiteSpace('\n  ')
            XmlTag:FONT
              XmlToken:XML_START_TAG_START('<')
              XmlToken:XML_NAME('FONT')
              PsiWhiteSpace(' ')
              PsiElement(XML_ATTRIBUTE)
                XmlToken:XML_NAME('SIZE')
                XmlToken:XML_EQ('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
                  XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('+1')
                  XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
              XmlToken:XML_TAG_END('>')
              XmlText
                PsiWhiteSpace('\n  ')
              XmlTag:i
                XmlToken:XML_START_TAG_START('<')
                XmlToken:XML_NAME('i')
                XmlToken:XML_TAG_END('>')
                XmlText
                  XmlToken:XML_DATA_CHARACTERS('Java')
                  PsiWhiteSpace(' ')
                  XmlToken:XML_DATA_CHARACTERS('Software')
                XmlToken:XML_END_TAG_START('</')
                XmlToken:XML_NAME('i')
                XmlToken:XML_TAG_END('>')
              XmlText
                PsiWhiteSpace('\n  ')
              XmlToken:XML_END_TAG_START('</')
              XmlToken:XML_NAME('FONT')
              XmlToken:XML_TAG_END('>')
            XmlText
              PsiWhiteSpace('\n')
            XmlToken:XML_END_TAG_START('</')
            XmlToken:XML_NAME('TD')
            XmlToken:XML_TAG_END('>')
          XmlText
            PsiWhiteSpace('\n')
          XmlToken:XML_END_TAG_START('</')
          XmlToken:XML_NAME('TR')
          XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('TABLE')
        XmlToken:XML_TAG_END('>')
      XmlText
        PsiWhiteSpace('\n')
      XmlTag:BR
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('BR')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element BR is not closed
          <empty list>
      XmlTag:BR
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('BR')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element BR is not closed
          <empty list>
      XmlTag:BR
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('BR')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element BR is not closed
          <empty list>
      XmlTag:BR
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('BR')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element BR is not closed
          <empty list>
      XmlTag:BR
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('BR')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element BR is not closed
          <empty list>
      XmlTag:BR
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('BR')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element BR is not closed
          <empty list>
      XmlTag:BR
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('BR')
        XmlToken:XML_TAG_END('>')
        PsiErrorElement:Element BR is not closed
          <empty list>
      XmlTag:BR
        XmlToken:XML_START_TAG_START('<')
        XmlToken:XML_NAME('BR')
        XmlToken:XML_TAG_END('>')
        XmlText
          PsiWhiteSpace('\n\n')
        XmlToken:XML_END_TAG_START('</')
        XmlToken:XML_NAME('body')
        XmlToken:XML_TAG_END('>')
      XmlText
        PsiWhiteSpace('\n')
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('html')
      XmlToken:XML_TAG_END('>')