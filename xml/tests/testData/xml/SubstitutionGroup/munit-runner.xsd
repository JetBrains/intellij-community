<?xml version="1.0" encoding="UTF-8"?>

<xs:schema
        xmlns:mule="http://www.mulesoft.org/schema/mule/core"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        elementFormDefault="qualified"
        attributeFormDefault="unqualified"
        targetNamespace="http://www.mulesoft.org/schema/mule/munit">

    <xs:import namespace="http://www.w3.org/XML/1998/namespace"></xs:import>

    <xs:import namespace="http://www.mulesoft.org/schema/mule/core"
               schemaLocation="mule.xsd"/>

    <xs:element xmlns:mule="http://www.mulesoft.org/schema/mule/core" name="config" substitutionGroup="mule:abstract-extension">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="mule:abstractExtensionType">
                    <xs:annotation>
                        <xs:documentation>MUnit Configuration Element</xs:documentation>
                    </xs:annotation>
                    <xs:attribute name="name" use="required" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Give a name to this configuration so it can be later referenced by
                                org.mule.munit.config-ref.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>

                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="munitType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:baseFlowConstructType">
                <xs:sequence>
                    <xs:group ref="mule:messageProcessorOrMixedContentMessageProcessor" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="description" default="" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description message to be shown in case of failure.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="munitTestType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:baseFlowConstructType">
                <xs:sequence>
                    <xs:element name="enable-flow-sources" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>It lists the name of the flows to be enabled
                            </xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="enable-flow-source">
                                    <xs:complexType>
                                        <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                                <xs:attribute name="value" type="xs:string">
                                                    <xs:annotation>
                                                        <xs:documentation>Name of the flow to enabled
                                                        </xs:documentation>
                                                    </xs:annotation>
                                                </xs:attribute>
                                            </xs:extension>
                                        </xs:simpleContent>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="behavior" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Processors that define test behavior</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:group ref="mule:messageProcessorOrMixedContentMessageProcessor" maxOccurs="unbounded"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="execution" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Processors that define execution of the test</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:group ref="mule:messageProcessorOrMixedContentMessageProcessor" maxOccurs="unbounded"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="validation" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>Processors that define validation of the test</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:group ref="mule:messageProcessorOrMixedContentMessageProcessor" maxOccurs="unbounded"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="description" default="" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description message to be shown in case of failure.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="expectedErrorType" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Error id expected on this test</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="expectedException" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Exception expression to match</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ignore" use="optional" type="mule:substitutableBoolean" default="false">
                    <xs:annotation>
                        <xs:documentation>Defines if the test must be ignored.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="tags" use="optional" type="xs:string" default="">
                    <xs:annotation>
                        <xs:documentation>Defines the tags for the test.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="test" substitutionGroup="mule:abstract-flow-construct" type="munitTestType"
                xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns="http://www.mulesoft.org/schema/mule/munit">
        <xs:annotation>
            <xs:documentation>The test flow of MUnit</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="before-suite" substitutionGroup="mule:abstract-flow-construct" type="munitType"
                xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns="http://www.mulesoft.org/schema/mule/munit">
        <xs:annotation>
            <xs:documentation>Flow to be run before a munit suite</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="after-suite" substitutionGroup="mule:abstract-flow-construct" type="munitType"
                xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns="http://www.mulesoft.org/schema/mule/munit">
        <xs:annotation>
            <xs:documentation>Flow to be run after a MUnit suite</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="before-test" substitutionGroup="mule:abstract-flow-construct" type="munitType"
                xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns="http://www.mulesoft.org/schema/mule/munit">
        <xs:annotation>
            <xs:documentation>Flow to be run before each test flow</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="after-test" substitutionGroup="mule:abstract-flow-construct" type="munitType"
                xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns="http://www.mulesoft.org/schema/mule/munit">
        <xs:annotation>
            <xs:documentation>Flow to be run after each test flow</xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="set-event" substitutionGroup="mule:abstract-message-processor" type="SetEventType"
                xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns="http://www.mulesoft.org/schema/mule/munit">
        <xs:annotation>
            <xs:documentation>Defines the event to be used for testing.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="SetEventType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
                <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="payload">
                        <xs:annotation>
                            <xs:documentation>The payload to be set</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="xs:string">
                                    <xs:attribute name="value" type="xs:string" use="optional"/>
                                    <xs:attribute name="mediaType" type="xs:string" use="optional"/>
                                    <xs:attribute name="encoding" type="xs:string" use="optional"/>
                                </xs:extension>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="attributes">
                        <xs:annotation>
                            <xs:documentation>Attributes be set</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="xs:string">
                                    <xs:attribute name="value" type="xs:string" use="optional"/>
                                    <xs:attribute name="mediaType" type="xs:string" use="optional"/>
                                    <xs:attribute name="encoding" type="xs:string" use="optional"/>
                                </xs:extension>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="error">
                        <xs:annotation>
                            <xs:documentation>The Error to be set</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:simpleContent>
                                <xs:extension base="xs:string">
                                    <xs:attribute name="id" type="xs:string" use="optional"/>
                                    <xs:attribute name="exception" type="xs:string" use="optional"/>
                                </xs:extension>
                            </xs:simpleContent>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="variables">
                        <xs:annotation>
                            <xs:documentation>Variables</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="variable" maxOccurs="unbounded" minOccurs="0">
                                    <xs:complexType>
                                        <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                                <xs:attribute name="key" type="xs:string"/>
                                                <xs:attribute name="value" type="xs:string" use="optional"/>
                                                <xs:attribute name="mediaType" type="xs:string" use="optional"/>
                                                <xs:attribute name="encoding" type="xs:string" use="optional"/>
                                            </xs:extension>
                                        </xs:simpleContent>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="inbound-properties">
                        <xs:annotation>
                            <xs:documentation>inbound properties</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="inbound-property" maxOccurs="unbounded" minOccurs="0">
                                    <xs:complexType>
                                        <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                                <xs:attribute name="key" type="xs:string"/>
                                                <xs:attribute name="value" type="xs:string" use="optional"/>
                                                <xs:attribute name="mediaType" type="xs:string" use="optional"/>
                                                <xs:attribute name="encoding" type="xs:string" use="optional"/>
                                            </xs:extension>
                                        </xs:simpleContent>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="session-properties">
                        <xs:annotation>
                            <xs:documentation>session properties</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="session-property" maxOccurs="unbounded" minOccurs="0">
                                    <xs:complexType>
                                        <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                                <xs:attribute name="key" type="xs:string"/>
                                                <xs:attribute name="value" type="xs:string" use="optional"/>
                                                <xs:attribute name="mediaType" type="xs:string" use="optional"/>
                                                <xs:attribute name="encoding" type="xs:string" use="optional"/>
                                            </xs:extension>
                                        </xs:simpleContent>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="outbound-properties">
                        <xs:annotation>
                            <xs:documentation>outbound properties</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="outbound-property" maxOccurs="unbounded" minOccurs="0">
                                    <xs:complexType>
                                        <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                                <xs:attribute name="key" type="xs:string"/>
                                                <xs:attribute name="value" type="xs:string" use="optional"/>
                                                <xs:attribute name="mediaType" type="xs:string" use="optional"/>
                                                <xs:attribute name="encoding" type="xs:string" use="optional"/>
                                            </xs:extension>
                                        </xs:simpleContent>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="inbound-attachments">
                        <xs:annotation>
                            <xs:documentation>inbound attachments</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="inbound-attachment" maxOccurs="unbounded" minOccurs="0">
                                    <xs:complexType>
                                        <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                                <xs:attribute name="key" type="xs:string"/>
                                                <xs:attribute name="value" type="xs:string" use="optional"/>
                                                <xs:attribute name="mediaType" type="xs:string" use="optional"/>
                                                <xs:attribute name="encoding" type="xs:string" use="optional"/>
                                            </xs:extension>
                                        </xs:simpleContent>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="outbound-attachments">
                        <xs:annotation>
                            <xs:documentation>outbound attachments</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="outbound-attachment" maxOccurs="unbounded" minOccurs="0">
                                    <xs:complexType>
                                        <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                                <xs:attribute name="key" type="xs:string"/>
                                                <xs:attribute name="value" type="xs:string" use="optional"/>
                                                <xs:attribute name="mediaType" type="xs:string" use="optional"/>
                                                <xs:attribute name="encoding" type="xs:string" use="optional"/>
                                            </xs:extension>
                                        </xs:simpleContent>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>
                <xs:attribute name="cloneOriginalEvent" use="optional" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>Clone the original event</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="set-null-payload" substitutionGroup="mule:abstract-message-processor" type="SetNullPayloadType"
                xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns="http://www.mulesoft.org/schema/mule/munit">
        <xs:annotation>
            <xs:documentation>Defines a Null payload for testing.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="SetNullPayloadType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="dynamic-port" type="dynamicPortType" substitutionGroup="mule:abstract-shared-extension" xmlns="http://www.mulesoft.org/schema/mule/munit">
        <xs:annotation>
            <xs:documentation>
                Sets a dynamic port for a given property name
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:complexType name="dynamicPortType" xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns="http://www.mulesoft.org/schema/mule/munit" >
        <xs:complexContent>
            <xs:extension base="mule:abstractExtensionType">
                <xs:attribute name="propertyName" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>
                            Name of the property for the dynamic port
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="min" type="xs:int" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Minimum value of the port
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="max" type="xs:int" use="optional">
                    <xs:annotation>
                        <xs:documentation>
                            Maximum value of the port
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

</xs:schema>
