<?xml version="1.0"?>
<xsd:schema
  targetNamespace="http://schemas.niku.com/2002/view"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://schemas.niku.com/2002/view"
  elementFormDefault="qualified"
  attributeFormDefault="unqualified">
  <xsd:include schemaLocation="./commonUI-2005-06.xsd"/>
  <xsd:annotation>
    <xsd:documentation>XML schema for defining abstract application data views. This schema contains high-level, GUI-independant, but application UI specific view structures. A valid instance document would use different combinations of elements defined in this schema to describe the content or a view, and is called a view XML document. Regular XSLT stylesheet with proper namespace declarations should be used to generate view XML from a data XML document which serves as a data model for the view. The UI XSL layer transforms view XML instances into final presentation markup for a client agent to display the content of a page or a portlet. Various UI XSL libraries produce different presentation markup for the final page or portlet content, such as HTML, SVG, WML, or any other presentation markup depending on the client agent.     
    </xsd:documentation>
  </xsd:annotation>
  <xsd:element name="view">
    <xsd:annotation>
      <xsd:documentation>An abstraction of the user interface consisting of high-level UI structures and metadata to assist in rendering.
Attributes:
@id - The value of the html FORM name for the portlet.
@type - Used to specify alternate processing of the view fragment when a separate portlet is specified for a portion of the page. 
@disableEnter - When "true"; disables the form submission when user presses the "Enter" key.
@form - Overrides the default creation of html FORM start and end pair. 
        "false" - for portlets that do not need a form.
        "begin" - creates a FORM start tag only. 
        "end" - creates FORM end tag only.
@style - applies a css class and/or special formatting of the view
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="events" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Global view events. These events are extracted by the layout manager and appended to the page onLoad event list to be called when the page is loading. Typically these events are used for page/portlet view initialization or page redirect and require portlet pageEvent attribute to be set to true for the page processor to detect, extract, and append such events to the page onLoad event list.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="event" type="Event" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="title" type="Text" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Page Title  used to label the contents of a page. Appears once per page and as the HTML (browser) title.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="pageToolbar" type="ActionGroup" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Page toolbar contains a list of actions for defining navigation links that need to be displayed in the page personalization toolbar area (on the right-hand side of the page title panel). For page toolbars to be detected and extracted by the layout manager, each portlet containing such a toolbar definition in its view should also set its pageToolbar attribute to true.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="pageContext" type="CellGroup" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Page context contains a list of actions for defining page context information, such as properties of the object for displayed attributes page, and contextual information for naviagiting to this object/attributes page.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="titlebar" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Titlebar defines a portlet title bar with a portlet title, and optional list of portlet actions for different view modes and personalization.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="title" type="Text" minOccurs="0"/>
              <xsd:element name="action" type="Action" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="header" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Page header.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:complexContent>
              <xsd:extension base="ActionGroup">
                <xsd:sequence>
                  <xsd:element name="cell" type="Cell" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
              </xsd:extension>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="navigation" type="ActionGroup" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Navigation within a feature; appears within the content portion of the page.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="message" type="Message" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>Error, Alert and message information.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="tabs" type="ActionGroup" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Text Tabs help to organize large areas of functionality into smaller, more manageable units. Always placed at the top of the page, the first item in the Content Header Region, and they may be used in combination with SubTabs and Page Titles. </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="subtabs" type="ActionGroup" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Sub Tabs further organize information into sub-categories below a higher level set of tabs (Icon Tabs or Text Tabs). Sub Tabs can only be used below either Icon Tabs or Text Tabs. Sub Tabs can either be followed by a Tool Bar, Look Here Alert, Action Bar-Page, Secondary Breadcrumb, or Section header.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="toolbar" type="Toolbar" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Toolbars allow for general functionality, associated with a Page or Page Section, which is not well suited to Action Bars or Button Bars. Toolbar buttons are not used for adding, deleting or performing actions on selected list objects.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="buttonbar" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Button Bar offers a set of actions and links which act in some way upon the entire page. Actions appear as buttons, and links are rendered in the standard in-line link style.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:complexContent>
              <xsd:extension base="ActionGroup">
                <xsd:attribute name="position" use="optional" default="bottom">
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:enumeration value="top"/>
                      <xsd:enumeration value="bottom"/>
                      <xsd:enumeration value="top-bottom"/>
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:attribute>
              </xsd:extension>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:choice minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Choice of having content navigation or wizard.</xsd:documentation>
          </xsd:annotation>
          <xsd:element name="contentNav" type="ActionGroup">
            <xsd:annotation>
              <xsd:documentation>Specialized navigation for a sequence of pages. Links can be marked current, available (with and without data), unavailable and finished. </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="wizard" type="ActionGroup">
            <xsd:annotation>
              <xsd:documentation>Specialized navigation for a sequence of pages. Links can be marked current, available (with and without data), unavailable and finished. </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
        <xsd:choice minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>Choice of having a section or  a group of sections.</xsd:documentation>
          </xsd:annotation>
          <xsd:element name="section" type="Section">
            <xsd:annotation>
              <xsd:documentation>A major unit of the page that can contain a title, actions, rows and cells. Can be a attributes (form) table,  list, hierarchy, calendar.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="group" type="SectionGroup">
            <xsd:annotation>
              <xsd:documentation>Used to horizontally group sections. Sections contained in a group will stack horizontally rather than vertically.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
        <xsd:element name="legends" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Container for view level custom legend, mirroing the section level custom legend</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="legend" type="Text" minOccurs="0" maxOccurs="unbounded">
                <xsd:annotation>
                  <xsd:documentation>Custom legend element for view level legends.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="footer" type="ActionGroup" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Page footer.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="id" type="xsd:string" use="required"/>
      <xsd:attribute name="style" type="xsd:string" use="optional"/>
      <xsd:attribute name="type" use="required">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="content"/>
            <xsd:enumeration value="header"/>
            <xsd:enumeration value="footer"/>
            <xsd:enumeration value="navigation"/>
            <xsd:enumeration value="footerLaunch"/>
            <xsd:enumeration value="footerLogin"/>
            <xsd:enumeration value="wizard"/>
            <xsd:enumeration value="breadcrumbs"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="disableEnter" type="xsd:boolean" use="optional" default="false"/>
      <xsd:attribute name="pageType" use="optional">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="property"/>
            <xsd:enumeration value="filter"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="form" use="optional">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="false"/>
            <xsd:enumeration value="begin"/>
            <xsd:enumeration value="end"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <!-- end of view element -->

  <xsd:complexType name="Text">
    <xsd:complexContent>
      <xsd:extension base="Label">
        <xsd:sequence>
          <xsd:element name="sectionContext" type="CellGroup" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>
                Allows there to be context in the section title.
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="Cell">
    <xsd:annotation>
      <xsd:documentation>This is the most atomic element in a section.
Attributes:
@id - unique identifier for cell. required when the cell represents an HTML form element
@type - Each type maps to a(n) XSLT template(s) for rendering the related toolkit pattern.
             indent - used to indent groups of cells
             hidden - equivalent to html input type="hidden", no display
              checkbox - equivalent to html input type="checkbox"
             listbox - equivalent to html select with size > 1          
             password - equivalent to html input type="password" obscures typed text
             radio - equivalent to html input type="radio"
             select - equivalent to html select 
             text - equivalent to html input type="text"
             textarea - equivalent to html textarea
             file - equivalent to html input type="file"
             vgroup - vertical grouping of cells
             hgroup - horizontal grouping of cells
             ptrnDatePicker - pattern for date picker
             ptrnListBoxSrtRmv - pattern for list box with a sort up/down and remove button
             ptrnListBoxSrt - pattern for list box with a sort up/down 
             ptrnPmpy - pattern for Push Me Pull You list boxes (left and right list boxes with arrow buttons to move items from one to the other)
             ptrnPmpySrt - pattern for sortable Push Me Pull You list boxes (left and right list boxes with arrow buttons to move items from one to the other plus up/down)
             ptrnRecurring - pattern for recurring date
             rowHeader - pattern for the start of a row in a grid.  Used in calendar
             selected - pattern for a selected special cell. Used in calendar.
             blank - pattern for a blank cells. Used in calendar.
             selectedBlank - pattern for a selected  blank cells. Used in calendar.
             gap - used in the priority list pattern
             overBudget - used in the priority list pattern
@width - text, password - size attribute of correspondind html element, textarea - # cols, select and listbox - pixel override of width in a style
@height - select and listbox - the number of options to display, textarea - number of rows 
@disabled - "true" will render form elements as static value (no form widget, just its current value(s))
@readOnly - "true" will render form elements as greyed out and uneditable
@required -  "true" will display the required icon next to a form element
@unique - "true" will display the unique icon next to a form element
@enterOnce - "true" will display the enter once icon next to a form element
@locked - "true" will display the locked icon next to a form element
@maxDataSize - specifies the maxlength attribute of a text or password form element
@style - applies a css class and/or special formatting of the cell
@align - specifies the horizontal alingment of the cell contents
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="label" type="Text" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>For attributes, the label that appears to the left of the attribute table cell.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="hint" type="Text" minOccurs="0"/>
      <xsd:element name="tip" type="Text" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Provides additional instructions to user about the item. Localized. Can be used for context sensitive help.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="event" type="Event" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Defines an event handler to map a handler function to an event that a client can trigger. (e.g. onFocus)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="data" type="Data" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Dynamic data from Data XML.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="image" type="Image" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents a gif or jpg.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="xhtml" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>allows you to add xhtml to the page</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="action" type="Action" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Navigation or event triggering.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="toolbar" type="Toolbar" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Cell editing toolbar.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="message" type="Message" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="error" type="Message" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Message indicating a processing problem related to the form attribute.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cell" type="Cell" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Group cells into logical patterns. (e.g. Push-me Pull-you)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:string" use="optional"/>
    <xsd:attribute name="type" use="optional" default="text">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="indent"/>
          <xsd:enumeration value="hidden"/>
          <xsd:enumeration value="checkbox"/>
          <xsd:enumeration value="listbox"/>
          <xsd:enumeration value="comboBox"/>
          <xsd:enumeration value="password"/>
          <xsd:enumeration value="radio"/>
          <xsd:enumeration value="select"/>
          <xsd:enumeration value="text"/>
          <xsd:enumeration value="textarea"/>
          <xsd:enumeration value="file"/>
          <xsd:enumeration value="task"/>
          <xsd:enumeration value="progress"/>
          <xsd:enumeration value="vgroup"/>
          <xsd:enumeration value="hgroup"/>
          <xsd:enumeration value="selected"/>
          <xsd:enumeration value="blank"/>
          <xsd:enumeration value="ptrnDatePicker"/>
          <xsd:enumeration value="ptrnListBoxSrtRmv"/>
          <xsd:enumeration value="ptrnListBoxSrt"/>
          <xsd:enumeration value="ptrnPmpy"/>
          <xsd:enumeration value="ptrnPmpySrt"/>
          <xsd:enumeration value="ptrnRecurring"/>
          <xsd:enumeration value="rowHeader"/>
          <xsd:enumeration value="selectedBlank"/>
          <xsd:enumeration value="htmlText"/>
          <xsd:enumeration value="preText"/>
          <xsd:enumeration value="gap"/>
          <xsd:enumeration value="overBudget"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="width" type="xsd:string" use="optional"/>
    <xsd:attribute name="height" type="xsd:string" use="optional"/>
    <xsd:attribute name="disabled" type="xsd:boolean" use="optional" default="true"/>
    <xsd:attribute name="readOnly" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="required" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="unique" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="exact" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="enterOnce" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="locked" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="maxDataSize" type="xsd:integer" use="optional"/>
    <xsd:attribute name="style" type="xsd:string" use="optional"/>
    <xsd:attribute name="align" use="optional" default="left">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="left"/>
          <xsd:enumeration value="center"/>
          <xsd:enumeration value="right"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="textOnly" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="nowrap" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="noDynHeight" type="xsd:duration" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="Col">
    <xsd:annotation>
      <xsd:documentation>Used to define columns in a list table.
Attributes:
@id - unique identifier for a column !VERY IMPORTANT! passed as a parameter for currently sorted column
@actionId - the action that will be followed when a sortable column hyperlink is clicked
@type - sort - column label will be a hyperlink that navigates with the sort params, noSort - static label, checkAll - Select All icon and javascript, selected - in calendar means is highlighted specially  
@width - sets the with attribute of the TD for the column header, can be pixels or percentage
@align - sets the horizontal alignment of the column header (left, center, right)
@required - displays the Required icon next to the column header label, triggers the display of the legend
@span - sets the colspan attribute of the TD for the colmn header
@style - CSS class - alternative action object presentation style
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="label" type="Text" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>For attributes, the label that appears to the left of the attribute cell.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="event" type="Event" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Defines an event handler to map a handler function to an event that a client can trigger. (e.g. onFocus)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="data" type="Data" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Defines an event handler to map a handler function to an event that a client can trigger. (e.g. onFocus)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:string" use="required"/>
    <xsd:attribute name="actionId" type="xsd:string" use="optional"/>
    <xsd:attribute name="type" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="sort"/>
          <xsd:enumeration value="noSort"/>
          <xsd:enumeration value="checkAll"/>
          <xsd:enumeration value="selected"/>
          <xsd:enumeration value="staticSortAsc"/>
          <xsd:enumeration value="staticSortDesc"/>
          <xsd:enumeration value="timePeriod"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="width" type="xsd:string" use="optional"/>
    <xsd:attribute name="align" use="optional" default="left">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="left"/>
          <xsd:enumeration value="center"/>
          <xsd:enumeration value="right"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="required" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="span" type="xsd:string" use="optional"/>
    <xsd:attribute name="style" type="xsd:string" use="optional"/>
    <xsd:attribute name="nowrap" type="xsd:boolean" use="optional" default="true"/>
  </xsd:complexType>
  <xsd:complexType name="Data">
    <xsd:annotation>
      <xsd:documentation>Can represent either placeholders for dynamic data or paramters for JavaScript functions.
Attributes or Option values in a Select:
label subElement - When is a option in a select
event subElement - When using a jumpmenu.
@id - when specifying JavaScript parameters. 
  paired with @value to produce javascript:myFunction('idValue=valueValue'); QUOTED
  @id alone represents a javascript variable or html object (e.g. a form element object), produces javascript:myFunction(_helpID); NO QUOTES
@value - when contained by a cell it represents a placeholder for dynamic data
            when specifying JavaScript parmaters.
            paired with @id attribute to produce javascript:myFunction('idValue=valueValue'); QUOTED
            @value alone represents a string value, produces javascript:myFunction('valueValue'); QUOTED
@selected - sets the selected attribute on select and radio form elements and checked on checkbox form elements
@type - data type, can assist formatting
          </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="label" type="Text" minOccurs="0"/>
      <xsd:element name="event" type="Event" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:string" use="optional"/>
    <xsd:attribute name="value" type="xsd:string" use="optional"/>
    <xsd:attribute name="selected" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="type" use="optional">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="currency"/>
          <xsd:enumeration value="id"/>
          <xsd:enumeration value="int"/>
          <xsd:enumeration value="string"/>
          <xsd:enumeration value="boolean"/>
          <xsd:enumeration value="double"/>
          <xsd:enumeration value="float"/>
          <xsd:enumeration value="percentage"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:anyAttribute processContents="skip"/>
  </xsd:complexType>
  <xsd:complexType name="Image">
    <xsd:annotation>
      <xsd:documentation>displays a gif or jpg
Attributes:
@url - overrides the @src attribute. specifies an absolute path to an image.
@width - width in pixels
@height - height in pixels
@align - alignment
@src - image name without the extension
@type - image extension (gif, jpg)
@highlight - indicates whether or not the image has mouseover behavior
@selected - display as selected state
          </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="tip" type="Text" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Image tool tip and alt text</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="url" type="xsd:string" use="optional"/>
    <xsd:attribute name="width" type="xsd:string" use="optional"/>
    <xsd:attribute name="height" type="xsd:string" use="optional"/>
    <xsd:attribute name="align" type="xsd:string" use="optional"/>
    <xsd:attribute name="src" type="xsd:string" use="required"/>
    <xsd:attribute name="type" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="gif"/>
          <xsd:enumeration value="jpg"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="highlight" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="selected" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="Event">
    <xsd:annotation>
      <xsd:documentation>Defines an event handler to map a handler function to an event that a client can trigger.
Attributes:
@id - the id of this event that maps directly to the JavaScript or WMLScript function name or other handler depending on the client.
@type - the type of the event. If no type is specified the event behaves as an onClick event.
        </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="data" type="Data" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:string" use="required"/>
    <xsd:attribute name="type" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="onAbort"/>
          <xsd:enumeration value="onBlur"/>
          <xsd:enumeration value="onChange"/>
          <xsd:enumeration value="onClick"/>
          <xsd:enumeration value="onDblClick"/>
          <xsd:enumeration value="onDragDrop"/>
          <xsd:enumeration value="onError"/>
          <xsd:enumeration value="onFocus"/>
          <xsd:enumeration value="onKeyDown"/>
          <xsd:enumeration value="onKeyPress"/>
          <xsd:enumeration value="onKeyUp"/>
          <xsd:enumeration value="onLoad"/>
          <xsd:enumeration value="onMouseDown"/>
          <xsd:enumeration value="onMouseMove"/>
          <xsd:enumeration value="onMouseOut"/>
          <xsd:enumeration value="onMouseOver"/>
          <xsd:enumeration value="onMouseUp"/>
          <xsd:enumeration value="onMove"/>
          <xsd:enumeration value="onReset"/>
          <xsd:enumeration value="onResize"/>
          <xsd:enumeration value="onSelect"/>
          <xsd:enumeration value="onSubmit"/>
          <xsd:enumeration value="onUnload"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="Action">
    <xsd:complexContent>
      <xsd:extension base="ActionType">
        <xsd:sequence>
          <xsd:annotation>
            <xsd:documentation>Action can have either a label or image</xsd:documentation>
          </xsd:annotation>
          <xsd:element name="label" type="Text" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Link label</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="image" type="Image">
            <xsd:annotation>
              <xsd:documentation>Link image</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="tip" type="Text" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Link tip, this overrides the image tip</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="data" type="Data" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Parameters for the JavaScript of the action</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="event" type="Event" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Used to call custom JS events</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="action" type="Action" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Nested action used to group actions under a parent action.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="TextGroup">
    <xsd:annotation>
      <xsd:documentation>Used as a container to group cell elements</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="label" type="Text" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="style" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="CellGroup">
    <xsd:annotation>
      <xsd:documentation>Used as a container to group cell elements</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="cell" type="Cell" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="style" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="ColGroup">
    <xsd:annotation>
      <xsd:documentation>Used as a container to group column elements</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="label" type="Text" minOccurs="0"/>
      <xsd:element name="col" type="Col" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Row">
    <xsd:annotation>
      <xsd:documentation>Rows are used for modeling collections and hierarchical structures for list and tree list tables. The optional action element is for overriding tree list row element nodes with an alternative expand/collapse and leaf node actions.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="CellGroup">
        <xsd:sequence>
          <xsd:element name="title" type="Text" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The title for a row</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="action" type="Action" minOccurs="0"/>
          <xsd:element name="row" type="Row" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="state" use="optional">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:enumeration value="collapsed"/>
              <xsd:enumeration value="expanded"/>
              <xsd:enumeration value="leaf"/>
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="ActionGroup">
    <xsd:annotation>
      <xsd:documentation>Defines a multiple set of actions that can be represented by a menu bar, table of contents, a toolbar, etc.  
Attributes:
@id - type of the collection.
@selected - id for the selected action (e.g. the currently selected tab should be disabled and highlighted)
          </xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="action" type="Action"/>
      <xsd:element name="separator" type="Separator"/>
    </xsd:choice>
    <xsd:attribute name="id" type="xsd:string" use="optional"/>
    <xsd:attribute name="selected" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="Separator">
    <xsd:annotation>
      <xsd:documentation>Definies a separator for various navigation widgets and actions.</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="Toolbar">
    <xsd:annotation>
      <xsd:documentation>Same as ActionGroup with the addition of optional cells.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0">
      <xsd:element name="cell" type="Cell" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="action" type="Action" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SectionGroup">
    <xsd:annotation>
      <xsd:documentation>Used as a container to group section elements</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="section" type="Section" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Message">
    <xsd:annotation>
      <xsd:documentation>Messages are used to convey important information to the user. 
Attributes:
@id - unique identifier of message
@value - message text
@type - the type of message 
  error - indicate page processing errors (e.g. incorrect date format)
  warning - system level warning
  info - "Look Here"; draws attention to a section of the page (e.g. "Bill has the file checked out")
  alert - indicate important information (e.g. user successfully added)
  instruction - "Look Here"; draws attention to a section of the page (e.g. "Bill has the file checked out")
  fatalError- system critical message (e.g. "No license found")
xsd:anyAttribute - allows xml:lang attribute on the text element. 
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="cell" type="Cell" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Used when the message is dynamically generated</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="action" type="Action" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:string" use="optional"/>
    <xsd:attribute name="value" type="xsd:string" use="optional"/>
    <xsd:attribute name="type" use="optional" default="error">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="error"/>
          <xsd:enumeration value="warning"/>
          <xsd:enumeration value="info"/>
          <xsd:enumeration value="alert"/>
          <xsd:enumeration value="fatalError"/>
          <xsd:enumeration value="instruction"/>
          <xsd:enumeration value="noResults"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:anyAttribute processContents="skip"/>
  </xsd:complexType>
  <xsd:complexType name="Pagination">
    <xsd:annotation>
      <xsd:documentation>Provides the attributes necessary to render the pagination based upon the sliced data
Attributes:
@totalNumRows - the number of records in the complete set of data resulting from a query
@slice - the current subset of the sliced data (0 based index)
@sliceSize - the number of records contained in each subset of sliced data
@actionId - the action to follow when a pagination link is clicked      
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="label" type="Text" maxOccurs="unbounded"/>
      <xsd:element name="action" type="Action" minOccurs="0"/>
      <xsd:element name="data" type="Data" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="totalNumRows" type="xsd:string" use="required"/>
    <xsd:attribute name="slice" type="xsd:string" use="required"/>
    <xsd:attribute name="sliceSize" type="xsd:string" use="required"/>
    <xsd:attribute name="actionId" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="Section">
    <xsd:annotation>
      <xsd:documentation>Subdivision of a page.
Attributes:
@id - unique identifier of a section
@type - specifies the XSLT template to transform the section
  attributes - properties section with pairs of labels and form widgets
  list - list section with column headings and rows of cells
  treeList - tree list section
  collapsedTreeList - collapsed tree list section 
   image - image section
   pie - SVG graph
  funnel - SVG graph
  bubble - SVG graph
  bar - SVG graph
  column - SVG graph
  line - SVG graph
  dot - SVG graph
@style - overrides the CSS class of the section
@sortColumn - should match the @id attribute of the currently sorted column
@sortDirection - direction of the sort (asc = ascending A-Z, desc = descending Z-A)
@mode - Optional qualifier to UI rendering.  Used in attributes section rendering to specify whether label column is present.  Options are 'single' or 'multi' (default).
          </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="message" type="Message" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Instructional text that appears at the top of the section.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="image" type="Image" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Image element for sections that only hold images.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:choice minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Choice, of either having title or text tabs</xsd:documentation>
        </xsd:annotation>
        <xsd:element name="title" type="Text">
          <xsd:annotation>
            <xsd:documentation>Text and optional image contained by a single row table. Sections titles divide pages into useful groupings of information and aide the user to quickly identify relevant areas.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:sequence>
          <xsd:element name="texttabs" type="ActionGroup">
            <xsd:annotation>
              <xsd:documentation>Tab navigation widget. The selected tab appears highlighted andnon-clickable</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="subtabs" type="ActionGroup" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Used to provide further granularity below higher-level tabs.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:choice>
      <xsd:element name="toolbar" type="Toolbar" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Similar to page-toolbar, but the actions are relevant to the containing section. Offer added navigation and functionality to the information grouped below.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="buttonbar" type="ActionGroup" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Contains form buttons and/or navigation links. The buttons are specific to the containing section.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="breadcrumbs" type="ActionGroup" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Sub-navigation related to the section. (e.g. a trail of resource names browsed)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:choice>
        <xsd:choice minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Attributes</xsd:documentation>
          </xsd:annotation>
          <xsd:element name="cell" type="Cell" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Represent form elements or containers for labels, images and hyperlinks</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="group" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Group attributes horizontally. Every group will create a new column of attributes.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:complexContent>
                <xsd:extension base="CellGroup">
                  <xsd:attribute name="width" type="xsd:string"/>
                </xsd:extension>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
        <xsd:sequence minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>List</xsd:documentation>
          </xsd:annotation>
          <xsd:element name="headerRow" type="ColGroup" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Groups of Colums in a list. The number of cells in each row should a match the total number of cols.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="col" type="Col" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Colums in a list. The number of cells in each row should a match the total number of cols.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="row" type="Row" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>row reperesents each row in a list, a row contains cells</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:sequence minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Calendar</xsd:documentation>
          </xsd:annotation>
          <xsd:element name="col" type="Col" minOccurs="0" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Colums in a list. The number of cells in each row should a match the total number of cols.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="cell" type="Cell" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Represent days or hours or events</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="group" type="CellGroup" maxOccurs="unbounded">
            <xsd:annotation>
              <xsd:documentation>Groupings of days or hours.  Represents weeks or hour of events.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:choice>
      <xsd:element name="pagination" type="Pagination" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Pagination related to the list of data.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="graphInfo" type="GraphInfo" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If the type attribute=graph, then graphInfo must be present.  This element contains all the metadata the SVG XSL needs to render a graph</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="legends" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Container for section level custom legend, mirroing the view level custom legend</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="legend" type="Text" maxOccurs="unbounded">
              <xsd:annotation>
                <xsd:documentation>Custom legend element for section level legends</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:string" use="optional"/>
    <xsd:attribute name="type" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="hidden"/>
          <xsd:enumeration value="attributes"/>
          <xsd:enumeration value="list"/>
          <xsd:enumeration value="treeList"/>
          <xsd:enumeration value="collapsedTreeList"/>
          <xsd:enumeration value="image"/>
          <xsd:enumeration value="nugget"/>
          <xsd:enumeration value="graph"/>
          <xsd:enumeration value="hierarchy"/>
          <xsd:enumeration value="flatHierarchy"/>
          <xsd:enumeration value="day"/>
          <xsd:enumeration value="week"/>
          <xsd:enumeration value="month"/>
          <xsd:enumeration value="nuggetDay"/>
          <xsd:enumeration value="nuggetWeek"/>
          <xsd:enumeration value="nuggetMonth"/>
          <xsd:enumeration value="availability"/>
          <xsd:enumeration value="priorityListChart"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="style" use="optional">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="highlight"/>
          <xsd:enumeration value="noHighlight"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="size" use="optional">
      <xsd:annotation>
        <xsd:documentation>If a graph section, this is the default size of the graph</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="small"/>
          <xsd:enumeration value="medium"/>
          <xsd:enumeration value="large"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="sortColumn" type="xsd:string" use="optional"/>
    <xsd:attribute name="sortDirection" use="optional" default="asc">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="asc"/>
          <xsd:enumeration value="desc"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="mode" use="optional" default="multi">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="single"/>
          <xsd:enumeration value="multi"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="columns" type="xsd:integer">
      <xsd:annotation>
        <xsd:documentation>For use in attributes sections to provide automatic flow layout of cells into columns</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="GraphInfo">
    <xsd:annotation>
      <xsd:documentation>A complex type for all the graph metatdata</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="dataSeries" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:attribute name="numDataPoints" type="xsd:integer" use="required">
            <xsd:annotation>
              <xsd:documentation>The number of data points in the series</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="numValuesPerDataPoint" type="xsd:integer" use="required">
            <xsd:annotation>
              <xsd:documentation>The number of values per datapoint in the series</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="axis" minOccurs="0" maxOccurs="2">
        <xsd:complexType>
          <xsd:annotation>
            <xsd:documentation>A axis of the graph</xsd:documentation>
          </xsd:annotation>
          <xsd:sequence>
            <xsd:element name="label" type="Text">
              <xsd:annotation>
                <xsd:documentation>The axis label</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
          <xsd:attribute name="name" use="required">
            <xsd:annotation>
              <xsd:documentation>The name of the axis</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="x"/>
                <xsd:enumeration value="y"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="isCategory" use="required">
            <xsd:annotation>
              <xsd:documentation>True if the axis is a category axis</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="true"/>
                <xsd:enumeration value="false"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="minValue" type="xsd:double" use="required">
            <xsd:annotation>
              <xsd:documentation>The minimum value of the axis</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="maxValue" type="xsd:double" use="required">
            <xsd:annotation>
              <xsd:documentation>The maximum value of the axis</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="majorUnit" type="xsd:double" use="required">
            <xsd:annotation>
              <xsd:documentation>The value of the major incremental unit</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="minorUnit" type="xsd:double" use="required">
            <xsd:annotation>
              <xsd:documentation>The value of the minor incremental unit</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="crossesAt" type="xsd:double" use="required">
            <xsd:annotation>
              <xsd:documentation>The value on the opposite axis that determines where this axis crosses the opposite axis</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="labelAngle" use="required">
            <xsd:annotation>
              <xsd:documentation>The angle of rotation for the tick labels</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:integer">
                <xsd:maxInclusive value="90"/>
                <xsd:minExclusive value="-90"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="numDigitsAfterDec" use="required">
            <xsd:annotation>
              <xsd:documentation>The value on the opposite axis that determines where this axis crosses the opposite axis</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:integer">
                <xsd:minExclusive value="0"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="isLabelGrouped" use="required">
            <xsd:annotation>
              <xsd:documentation>True if grouping should be used when rendering tick labels</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="true"/>
                <xsd:enumeration value="false"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="majorTick" use="required">
            <xsd:annotation>
              <xsd:documentation>The code for the type of major ticks to render</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="none"/>
                <xsd:enumeration value="cross"/>
                <xsd:enumeration value="inside"/>
                <xsd:enumeration value="outside"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="minorTick" use="required">
            <xsd:annotation>
              <xsd:documentation>The code for the type of minor ticks to render</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="none"/>
                <xsd:enumeration value="cross"/>
                <xsd:enumeration value="inside"/>
                <xsd:enumeration value="outside"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="showAxis" use="required">
            <xsd:annotation>
              <xsd:documentation>True if the axis, ticks, and labels should be rendered</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="true"/>
                <xsd:enumeration value="false"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="showTickLabels" use="required">
            <xsd:annotation>
              <xsd:documentation>True if the tick labels should be rendered</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="true"/>
                <xsd:enumeration value="false"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="showMajorLines" use="required">
            <xsd:annotation>
              <xsd:documentation>True if the major grid lines should be rendered</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="true"/>
                <xsd:enumeration value="false"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="showMinorLines" use="required">
            <xsd:annotation>
              <xsd:documentation>True if the minor grid lines should be rendered</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="true"/>
                <xsd:enumeration value="false"/>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" use="required">
      <xsd:annotation>
        <xsd:documentation>The graph type</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="bar"/>
          <xsd:enumeration value="column"/>
          <xsd:enumeration value="funnel"/>
          <xsd:enumeration value="line"/>
          <xsd:enumeration value="pie"/>
          <xsd:enumeration value="bubble"/>
          <xsd:enumeration value="scatterplot"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="actionId" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>When the graph is rendered as SVG content in the browser, this is the actionId the SVG plugin should use to retrieve the SVG content</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="showLegend" use="required">
      <xsd:annotation>
        <xsd:documentation>Show or hide the legend</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="true"/>
          <xsd:enumeration value="false"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="showTitle" use="required">
      <xsd:annotation>
        <xsd:documentation>Show or hide the title</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="true"/>
          <xsd:enumeration value="false"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="showLines" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>Show or hide the lines of a line graph</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="true"/>
          <xsd:enumeration value="false"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="showLineMarkers" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>Show or hide the datapoint markers on the lines of a line graph</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="true"/>
          <xsd:enumeration value="false"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="isStacked" use="required">
      <xsd:annotation>
        <xsd:documentation>Bar and column graphs can be stacked.  Should be false for all other graph types</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="true"/>
          <xsd:enumeration value="false"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="dataLabels" use="optional">
      <xsd:annotation>
        <xsd:documentation>The code for the displayed value of the datapoint labels</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="none"/>
          <xsd:enumeration value="value"/>
          <xsd:enumeration value="percent"/>
          <xsd:enumeration value="label"/>
          <xsd:enumeration value="labelpercent"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="tooltipLabels" use="optional">
      <xsd:annotation>
        <xsd:documentation>The code for the displayed value of the mouseover labels</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="none"/>
          <xsd:enumeration value="value"/>
          <xsd:enumeration value="percent"/>
          <xsd:enumeration value="label"/>
          <xsd:enumeration value="labelpercent"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="maxCategoryItemChars" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>The number of characters in the category item with the most characters.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="maxSeriesItemChars" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>The number of characters in the series item with the most characters.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
</xsd:schema>
