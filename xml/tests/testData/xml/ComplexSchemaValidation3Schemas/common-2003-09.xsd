<?xml version="1.0" encoding="UTF-8"?>
<!--W3C Schema generated by XML Spy v4.0 NT beta 2 build Jul 26 2001 (http://www.xmlspy.com)-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xsd:complexType name="NlsType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">A generic type used to hold any name/description pair of localizable text</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="description" type="xsd:string"/>
    <xsd:attribute name="languageCode" type="xsd:string" use="required"/>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="ImageType">
    <xsd:annotation>
      <xsd:documentation>Specifies an image type. An image is similar to an nls except it can have its own tool tip.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nls" type="NlsType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="toolTip" type="NlsType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="MacroType">
    <xsd:annotation>
      <xsd:documentation>Macros that will be evaluated at runtime for their actual value. At present all these macros may be limited
    to date datatype. In future we could additional ones if required.
          </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="date_timestamp"/>
      <xsd:enumeration value="date_today"/>
      <xsd:enumeration value="date_yesterday"/>
      <xsd:enumeration value="date_tomorrow"/>
      <xsd:enumeration value="date_startofcurrentyear"/>
      <xsd:enumeration value="date_startofcurrentquarter"/>
      <xsd:enumeration value="date_startofcurrentmonth"/>
      <xsd:enumeration value="date_startofcurrentweek"/>
      <xsd:enumeration value="date_startofpreviousyear"/>
      <xsd:enumeration value="date_startofpreviousquarter"/>
      <xsd:enumeration value="date_startofpreviousmonth"/>
      <xsd:enumeration value="date_startofpreviousweek"/>
      <xsd:enumeration value="date_startofnextyear"/>
      <xsd:enumeration value="date_startofnextquarter"/>
      <xsd:enumeration value="date_startofnextmonth"/>
      <xsd:enumeration value="date_startofnextweek"/>
      <xsd:enumeration value="date_endofcurrentyear"/>
      <xsd:enumeration value="date_endofcurrentquarter"/>
      <xsd:enumeration value="date_endofcurrentmonth"/>
      <xsd:enumeration value="date_endofcurrentweek"/>
      <xsd:enumeration value="date_endofpreviousyear"/>
      <xsd:enumeration value="date_endofpreviousquarter"/>
      <xsd:enumeration value="date_endofpreviousmonth"/>
      <xsd:enumeration value="date_endofpreviousweek"/>
      <xsd:enumeration value="date_endofnextyear"/>
      <xsd:enumeration value="date_endofnextquarter"/>
      <xsd:enumeration value="date_endofnextmonth"/>
      <xsd:enumeration value="date_endofnextweek"/>
      <xsd:enumeration value="userId"/>
      <xsd:enumeration value="language"/>
      <xsd:enumeration value="locale"/>
      <xsd:enumeration value="sessionId"/>
      <xsd:enumeration value="userName"/>
      <xsd:enumeration value="timestamp"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ExtendedWidgetType">
    <xsd:annotation>
      <xsd:documentation>Specifies additional information to aid in rendering a display mapping field in a property and filter view. 
    Property view will use icon, description, icondescription values to determine rendering of a field
    as a text, text + icon, or text + icon + description or text + description.
          Filter view will use colorlookup and mappinglookup values to determine which lookup type to be used
          for rendering the pull-down.      
          </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="icon"/>
      <xsd:enumeration value="description"/>
      <xsd:enumeration value="icondescription"/>
      <xsd:enumeration value="mappinglookup"/>
      <xsd:enumeration value="colorlookup"/>
      <xsd:enumeration value="dependentLookup"/>
      <xsd:enumeration value="url"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <xsd:complexType name="DocumentType">
    <xsd:complexContent>
      <xsd:extension base="DocumentBaseType">
        <xsd:sequence>
          <xsd:element name="Version" minOccurs="1" maxOccurs="unbounded">
            <xsd:complexType>
              <xsd:complexContent>
                <xsd:extension base="DocumentVersionType">
                  <xsd:attribute name="isLatest" type="xsd:boolean" use="required"/>
                </xsd:extension>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:long" use="required"/>
        <xsd:attribute name="mimeType" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  
  <xsd:complexType name="DocumentBaseType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Base set of attributes for a document</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="description" type="xsd:string"/>
    <xsd:attribute name="versioningEnabled" type="xsd:boolean" default="true"/>
    <xsd:attribute name="numCheckoutDays" type="xsd:int" default="1"/>
    <xsd:attribute name="hasAllParticipants" type="xsd:boolean" default="true"/>
    <xsd:attribute name="allowNonParticipants" type="xsd:boolean"/>
    <xsd:attribute name="language" type="xsd:string"/>
    <xsd:attribute name="fileCreatedDate" type="xsd:dateTime"/>
    <xsd:attribute name="status" type="xsd:string"/>
  </xsd:complexType>
  
  <xsd:complexType name="DocumentVersionType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">The document version representation</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="id" type="xsd:long" use="required"/>
    <xsd:attribute name="versionNumber" type="xsd:nonNegativeInteger" use="required"/>
    <xsd:attribute name="checkInComment" type="xsd:string"/>
    <xsd:attribute name="status" type="xsd:string"/>
  </xsd:complexType>
  
  <xsd:simpleType name="DBVendorType">
    <xsd:annotation>
      <xsd:documentation>Identifies a particular db vendor.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="all"/>
      <xsd:enumeration value="oracle"/>
      <xsd:enumeration value="mssql"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="AttributeType">
    <xsd:annotation>
      <xsd:documentation>This represents an attribute. Report, Jobs, Graph, Grids and Business Object - all have attributes. However each of these entities refer to attributes with a different name. Reports and Jobs have "parameters". Graphs, Grids and Browse pages have "filters" and "searchResultColumns". Parameters, Filters, SearchResultColumns - essentially they all share some common information. This commonality is captured by this type.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="nls" type="NlsType" maxOccurs="unbounded"/>
      <xsd:element name="obsBrowseValue" type="ObsBrowseValueType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>If a particular attribute is a OBS browse, then this element will capture the default values for this OBS browse.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timeBrowseValue" type="TimeBrowseValueType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If a particular attribute is a time browse, then this element will capture the default values for this time browse.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="code" type="xsd:string" use="required"/>
    <xsd:attribute name="dataType" type="DataTypeType" use="optional"/>
    <xsd:attribute name="widgetType" type="WidgetType" use="optional"/>
    <xsd:attribute name="defaultValue" type="xsd:string" use="optional"/>
    <xsd:attribute name="status" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="readOnly" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="required" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="system" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="lookupCode" type="xsd:string" use="optional"/>
    <xsd:attribute name="lookupCardinality" type="xsd:int" use="optional"/>
    <xsd:attribute name="order" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:simpleType name="DataTypeType">
    <xsd:annotation>
      <xsd:documentation>Possible data types of an attribute.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="string"/>
      <xsd:enumeration value="boolean"/>
      <xsd:enumeration value="numeric"/>
      <xsd:enumeration value="datetime"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="WidgetType">
    <xsd:annotation>
      <xsd:documentation>
      List of UI widgets used in Niku 6 application.
      
      textexact - Used for NSQL parameters when there can only be one value.  So, the attribute cannot be multivalued and cannot have a wildcard.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="hidden"/>
      <xsd:enumeration value="checkbox"/>
      <xsd:enumeration value="select"/>
      <xsd:enumeration value="text"/>
      <xsd:enumeration value="textarea"/>
      <xsd:enumeration value="datepicker"/>
      <xsd:enumeration value="datetime"/>
      <xsd:enumeration value="browse"/>
      <xsd:enumeration value="daterange"/>
      <xsd:enumeration value="numericrange"/>
      <xsd:enumeration value="textexact"/>
      <xsd:enumeration value="numeric"/>
      <xsd:enumeration value="icon"/>
      <xsd:enumeration value="stoplight"/>
      <xsd:enumeration value="datetext"/>
      <xsd:enumeration value="datetimetext"/>
      <xsd:enumeration value="progressBar"/>
      <xsd:enumeration value="attachment"/>
      <xsd:enumeration value="clob"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ObsBrowseValueType">
    <xsd:annotation>
      <xsd:documentation>A complex type to represent the value of a OBS browse attribute.  This specifies the additional information (meta data) required to render and register this special type of attribute.
addOption = For a Dimension OBS Browse, it could be any of the following:
 - specific_units, subunits_of_specific_units, all_units_within_level.
For Filter OBS browses it could be any of the following:
- selected_unit_only, selected_unit_and_below, selected_unit_and_above.
typeId = Obs Type Id
levelId = Id of the selected OBS level
depth = The depth of the unit or level
    </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="unitId" type="xsd:long" use="optional"/>
    <xsd:attribute name="unitName" type="xsd:string" use="optional"/>
    <xsd:attribute name="addOption" type="ObsAddOptionType" use="required">
      <xsd:annotation>
        <xsd:documentation>For a Dimension OBS Browse, this can be any of the following:
 - specific_units, subunits_of_specific_units, all_units_within_level.
For Filter OBS browses this can be any of the following:
- selected_unit_only, selected_unit_and_below, selected_unit_and_above.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="typeId" type="xsd:long" use="optional">
      <xsd:annotation>
        <xsd:documentation>OBS Type Id</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="levelId" type="xsd:long" use="optional">
      <xsd:annotation>
        <xsd:documentation>Id of the selected OBS level</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="typeName" type="xsd:string" use="optional"/>
    <xsd:attribute name="depth" type="xsd:int" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="TimeBrowseValueType">
    <xsd:annotation>
      <xsd:documentation>A complex type to represent the value of a Time Browse attribute.  This specifies the additional information (meta data) required to render and register this special type of attribute.
timeLevel = What kind of time level?
setTimeBy = Indicates the style of the macro - specific date or a rolling window.
closestFromDate = Date value; use this when the setTimeBy is set to closest_periods_specific_date_range.
closestToDate = Date value; use this when the setTimeBy is set to closest_periods_specific_date_range.
rangeMacro  = Use this when setTimeBye is set to rolling_window.
timePeriods = Number of time periods.
offset = Time period offset.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="period" minOccurs="0" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:attribute name="key" type="xsd:string" use="optional"/>
          <xsd:attribute name="label" type="xsd:string" use="optional"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeLevel" type="TimeLevelType" use="required">
      <xsd:annotation>
        <xsd:documentation>What kind of time level?</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="setTimeBy" type="SetTimeByType" use="optional">
      <xsd:annotation>
        <xsd:documentation>Indicates the style of the macro - specific date or a rolling window</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="closestFromDate" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Date value; use this when the setTimeBy is set to closest_periods_specific_date_range</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="closestToDate" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Date value; use this when the setTimeBy is set to closest_periods_specific_date_range</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="rangeMacro" type="TimeRangeType" use="optional">
      <xsd:annotation>
        <xsd:documentation>Use this when setTimeBye is set to rolling_window</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timePeriods" type="xsd:int" use="optional">
      <xsd:annotation>
        <xsd:documentation>timePeriods = Number of time periods</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="offset" type="xsd:int" use="optional">
      <xsd:annotation>
        <xsd:documentation>Time period offset</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="label" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:simpleType name="ObsAddOptionType">
    <xsd:annotation>
      <xsd:documentation>Different options that one can specify the association/filter for a OBS browse attribute.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="selected_unit_only"/>
      <xsd:enumeration value="selected_unit_and_below"/>
      <xsd:enumeration value="selected_unit_and_above"/>
      <xsd:enumeration value="specific_units"/>
      <xsd:enumeration value="subunits_of_specific_units"/>
      <xsd:enumeration value="all_units_within_level"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TimeLevelType">
    <xsd:annotation>
      <xsd:documentation>List of time levels.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TL_YEAR"/>
      <xsd:enumeration value="TL_QUARTER"/>
      <xsd:enumeration value="TL_MONTH"/>
      <xsd:enumeration value="TL_PERIOD"/>
      <xsd:enumeration value="TL_WEEK"/>
      <xsd:enumeration value="TL_DAY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="SetTimeByType">
    <xsd:annotation>
      <xsd:documentation>Possible options for indicating the time period.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="closest_periods_to_daterange"/>
      <xsd:enumeration value="rolling_window"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DataProviderType">
    <xsd:annotation>
      <xsd:documentation>Possible data providers that could be used to get the Object metadata for list/filter/property views.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="nsql"/>
      <xsd:enumeration value="object"/>
      <xsd:enumeration value="system"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TimeRangeType">
    <xsd:annotation>
      <xsd:documentation>List of time macros.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="TODAY"/>
      <xsd:enumeration value="CURRENT_YEAR"/>
      <xsd:enumeration value="CURRENT_QUARTER"/>
      <xsd:enumeration value="CURRENT_MONTH"/>
      <xsd:enumeration value="CURRENT_WEEK"/>
      <xsd:enumeration value="CURRENT_PERIOD"/>
      <xsd:enumeration value="NEXT_YEAR"/>
      <xsd:enumeration value="NEXT_QUARTER"/>
      <xsd:enumeration value="NEXT_MONTH"/>
      <xsd:enumeration value="NEXT_WEEK"/>
      <xsd:enumeration value="NEXT_PERIOD"/>
      <xsd:enumeration value="PREVIOUS_YEAR"/>
      <xsd:enumeration value="PREVIOUS_QUARTER"/>
      <xsd:enumeration value="PREVIOUS_MONTH"/>
      <xsd:enumeration value="PREVIOUS_WEEK"/>
      <xsd:enumeration value="PREVIOUS_PERIOD"/>
      <xsd:enumeration value="YEAR_TO_DATE"/>
      <xsd:enumeration value="QUARTER_TO_DATE"/>
      <xsd:enumeration value="MOMTH_TO_DATE"/>
      <xsd:enumeration value="WEEK_TO_DATE"/>
      <xsd:enumeration value="PERIOD_TO_DATE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="LinkParamType">
    <xsd:sequence>
      <xsd:element name="nls"       type="NlsType"  minOccurs="0"  maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="paramCode" type="xsd:string" use="required"/>
    <xsd:attribute name="dataRef" type="xsd:string" use="required"/>
    <xsd:attribute name="dataSource" type="LinkDataSourceType" use="required"/>
  </xsd:complexType>
  <xsd:simpleType name="LinkDataSourceType">
    <xsd:annotation>
      <xsd:documentation xml:lang="en">Used to specify what source to use for resolving the dataRef attribute.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="data">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">dataRef specifes an attribute (in case of an ODF object) or a column (in case of NSQL) to use to resolve that value to pass</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="input">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">dataRef specifes an XPath in the input document to use for the value</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="static">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">dataRef is the actual value</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ExpressionType">
    <xsd:annotation>
      <xsd:documentation>
        The expression for the filter or portfolio include if there is one.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="value" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation>
          The expression value
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="uiValue" type="xsd:string" use="optional"/>
    <xsd:attribute name="whereClause" type="xsd:string" use="optional"/>
  </xsd:complexType>
</xsd:schema>
