name: Jewel Checks

on:
  pull_request:
    paths:
      - "platform/jewel/**"

defaults:
  run:
    working-directory: platform/jewel

jobs:
  checks:
    name: CI code checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Check out repository

      - name: Set up JBR 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: jetbrains
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run :check task
        # Run checks for all modules except the IDE plugin sample, as that is bound to have missing APIs issues
        run: ./gradlew check -x :samples:ide-plugin:check --continue --no-daemon

      - name: Run detektMain and detektTest tasks
        # Run detekt checks for all modules except the IDE plugin sample, as that is bound to have missing APIs issues
        run: ./gradlew detektMain detektTest -x :samples:ide-plugin:detektMain -x :samples:ide-plugin:detektTest --continue --no-daemon

      - name: Run ktfmt and ktlint checks on IDE plugin
        # We can only use static analysis that doesn't depend on compilation in the IDE plugin
        run: ./gradlew :samples:ide-plugin:ktfmtCheck :samples:ide-plugin:lintKotlinMain --continue --no-daemon

  check_paths:
    name: Check changed files
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      run_formalities: ${{ steps.filter.outputs.run_formalities }}

    steps:
      - uses: actions/checkout@v4
        name: Check out repository

      - uses: dorny/paths-filter@v3
        name: Check which files are changed
        id: filter
        with:
          filters: |
            run_formalities:
              - '!all(platform/jewel/ui/generated/org/jetbrains/jewel/ui/icons/AllIconsKeys.java)'

  formalities:
    name: PR formalities
    runs-on: ubuntu-latest
    needs: check_paths
    if: needs.check_paths.outputs.run_formalities == 'true'

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
        name: Check out repository

      - name: Grant execute permission for validation scripts
        run: chmod +x ./scripts/validate-commit-message.sh && chmod +x ./scripts/validate-pr-commits.sh

      - name: Validate PR has single commit
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/validate-pr-commits.sh

      - name: Validate commit message
        env:
          JEWEL_YT_TOKEN: ${{ secrets.JEWEL_YT_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/validate-commit-message.sh
