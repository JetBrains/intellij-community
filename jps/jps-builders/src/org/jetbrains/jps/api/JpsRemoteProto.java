// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jps_remote_proto.proto

package org.jetbrains.jps.api;

public final class JpsRemoteProto {
  private JpsRemoteProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public static final class Message extends
      com.google.protobuf.GeneratedMessageLite {
    // Use Message.newBuilder() to construct.
    private Message() {
      initFields();
    }
    private Message(boolean noInit) {}
    
    private static final Message defaultInstance;
    public static Message getDefaultInstance() {
      return defaultInstance;
    }
    
    public Message getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      REQUEST(0, 1),
      RESPONSE(1, 2),
      FAILURE(2, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 1: return REQUEST;
          case 2: return RESPONSE;
          case 3: return FAILURE;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:org.jetbrains.jpsservice.Message.Type)
    }
    
    public static final class UUID extends
        com.google.protobuf.GeneratedMessageLite {
      // Use UUID.newBuilder() to construct.
      private UUID() {
        initFields();
      }
      private UUID(boolean noInit) {}
      
      private static final UUID defaultInstance;
      public static UUID getDefaultInstance() {
        return defaultInstance;
      }
      
      public UUID getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // required sint64 most_sig_bits = 1;
      public static final int MOST_SIG_BITS_FIELD_NUMBER = 1;
      private boolean hasMostSigBits;
      private long mostSigBits_ = 0L;
      public boolean hasMostSigBits() { return hasMostSigBits; }
      public long getMostSigBits() { return mostSigBits_; }
      
      // required sint64 least_sig_bits = 2;
      public static final int LEAST_SIG_BITS_FIELD_NUMBER = 2;
      private boolean hasLeastSigBits;
      private long leastSigBits_ = 0L;
      public boolean hasLeastSigBits() { return hasLeastSigBits; }
      public long getLeastSigBits() { return leastSigBits_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasMostSigBits) return false;
        if (!hasLeastSigBits) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasMostSigBits()) {
          output.writeSInt64(1, getMostSigBits());
        }
        if (hasLeastSigBits()) {
          output.writeSInt64(2, getLeastSigBits());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasMostSigBits()) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(1, getMostSigBits());
        }
        if (hasLeastSigBits()) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(2, getLeastSigBits());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.UUID parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.UUID parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.UUID parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.UUID parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.UUID parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.UUID parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.UUID parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.UUID parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.UUID parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.UUID parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.UUID prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.jetbrains.jps.api.JpsRemoteProto.Message.UUID, Builder> {
        private org.jetbrains.jps.api.JpsRemoteProto.Message.UUID result;
        
        // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.UUID();
          return builder;
        }
        
        protected org.jetbrains.jps.api.JpsRemoteProto.Message.UUID internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new org.jetbrains.jps.api.JpsRemoteProto.Message.UUID();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public org.jetbrains.jps.api.JpsRemoteProto.Message.UUID getDefaultInstanceForType() {
          return org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.UUID build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private org.jetbrains.jps.api.JpsRemoteProto.Message.UUID buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public org.jetbrains.jps.api.JpsRemoteProto.Message.UUID buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          org.jetbrains.jps.api.JpsRemoteProto.Message.UUID returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.UUID other) {
          if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.getDefaultInstance()) return this;
          if (other.hasMostSigBits()) {
            setMostSigBits(other.getMostSigBits());
          }
          if (other.hasLeastSigBits()) {
            setLeastSigBits(other.getLeastSigBits());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                setMostSigBits(input.readSInt64());
                break;
              }
              case 16: {
                setLeastSigBits(input.readSInt64());
                break;
              }
            }
          }
        }
        
        
        // required sint64 most_sig_bits = 1;
        public boolean hasMostSigBits() {
          return result.hasMostSigBits();
        }
        public long getMostSigBits() {
          return result.getMostSigBits();
        }
        public Builder setMostSigBits(long value) {
          result.hasMostSigBits = true;
          result.mostSigBits_ = value;
          return this;
        }
        public Builder clearMostSigBits() {
          result.hasMostSigBits = false;
          result.mostSigBits_ = 0L;
          return this;
        }
        
        // required sint64 least_sig_bits = 2;
        public boolean hasLeastSigBits() {
          return result.hasLeastSigBits();
        }
        public long getLeastSigBits() {
          return result.getLeastSigBits();
        }
        public Builder setLeastSigBits(long value) {
          result.hasLeastSigBits = true;
          result.leastSigBits_ = value;
          return this;
        }
        public Builder clearLeastSigBits() {
          result.hasLeastSigBits = false;
          result.leastSigBits_ = 0L;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.UUID)
      }
      
      static {
        defaultInstance = new UUID(true);
        org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.UUID)
    }
    
    public static final class Failure extends
        com.google.protobuf.GeneratedMessageLite {
      // Use Failure.newBuilder() to construct.
      private Failure() {
        initFields();
      }
      private Failure(boolean noInit) {}
      
      private static final Failure defaultInstance;
      public static Failure getDefaultInstance() {
        return defaultInstance;
      }
      
      public Failure getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      // optional int32 error_code = 1;
      public static final int ERROR_CODE_FIELD_NUMBER = 1;
      private boolean hasErrorCode;
      private int errorCode_ = 0;
      public boolean hasErrorCode() { return hasErrorCode; }
      public int getErrorCode() { return errorCode_; }
      
      // optional string description = 2;
      public static final int DESCRIPTION_FIELD_NUMBER = 2;
      private boolean hasDescription;
      private java.lang.String description_ = "";
      public boolean hasDescription() { return hasDescription; }
      public java.lang.String getDescription() { return description_; }
      
      // optional string stacktrace = 3;
      public static final int STACKTRACE_FIELD_NUMBER = 3;
      private boolean hasStacktrace;
      private java.lang.String stacktrace_ = "";
      public boolean hasStacktrace() { return hasStacktrace; }
      public java.lang.String getStacktrace() { return stacktrace_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasErrorCode()) {
          output.writeInt32(1, getErrorCode());
        }
        if (hasDescription()) {
          output.writeString(2, getDescription());
        }
        if (hasStacktrace()) {
          output.writeString(3, getStacktrace());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasErrorCode()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getErrorCode());
        }
        if (hasDescription()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(2, getDescription());
        }
        if (hasStacktrace()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(3, getStacktrace());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Failure parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Failure parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Failure parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Failure parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Failure parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Failure parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Failure parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Failure parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Failure parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Failure parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Failure prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.jetbrains.jps.api.JpsRemoteProto.Message.Failure, Builder> {
        private org.jetbrains.jps.api.JpsRemoteProto.Message.Failure result;
        
        // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Failure.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Failure();
          return builder;
        }
        
        protected org.jetbrains.jps.api.JpsRemoteProto.Message.Failure internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Failure();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Failure getDefaultInstanceForType() {
          return org.jetbrains.jps.api.JpsRemoteProto.Message.Failure.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Failure build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private org.jetbrains.jps.api.JpsRemoteProto.Message.Failure buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Failure buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          org.jetbrains.jps.api.JpsRemoteProto.Message.Failure returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Failure other) {
          if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Failure.getDefaultInstance()) return this;
          if (other.hasErrorCode()) {
            setErrorCode(other.getErrorCode());
          }
          if (other.hasDescription()) {
            setDescription(other.getDescription());
          }
          if (other.hasStacktrace()) {
            setStacktrace(other.getStacktrace());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                setErrorCode(input.readInt32());
                break;
              }
              case 18: {
                setDescription(input.readString());
                break;
              }
              case 26: {
                setStacktrace(input.readString());
                break;
              }
            }
          }
        }
        
        
        // optional int32 error_code = 1;
        public boolean hasErrorCode() {
          return result.hasErrorCode();
        }
        public int getErrorCode() {
          return result.getErrorCode();
        }
        public Builder setErrorCode(int value) {
          result.hasErrorCode = true;
          result.errorCode_ = value;
          return this;
        }
        public Builder clearErrorCode() {
          result.hasErrorCode = false;
          result.errorCode_ = 0;
          return this;
        }
        
        // optional string description = 2;
        public boolean hasDescription() {
          return result.hasDescription();
        }
        public java.lang.String getDescription() {
          return result.getDescription();
        }
        public Builder setDescription(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
          result.description_ = value;
          return this;
        }
        public Builder clearDescription() {
          result.hasDescription = false;
          result.description_ = getDefaultInstance().getDescription();
          return this;
        }
        
        // optional string stacktrace = 3;
        public boolean hasStacktrace() {
          return result.hasStacktrace();
        }
        public java.lang.String getStacktrace() {
          return result.getStacktrace();
        }
        public Builder setStacktrace(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasStacktrace = true;
          result.stacktrace_ = value;
          return this;
        }
        public Builder clearStacktrace() {
          result.hasStacktrace = false;
          result.stacktrace_ = getDefaultInstance().getStacktrace();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Failure)
      }
      
      static {
        defaultInstance = new Failure(true);
        org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Failure)
    }
    
    public static final class Request extends
        com.google.protobuf.GeneratedMessageLite {
      // Use Request.newBuilder() to construct.
      private Request() {
        initFields();
      }
      private Request(boolean noInit) {}
      
      private static final Request defaultInstance;
      public static Request getDefaultInstance() {
        return defaultInstance;
      }
      
      public Request getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public enum Type
          implements com.google.protobuf.Internal.EnumLite {
        COMPILE_REQUEST(0, 1),
        SHUTDOWN_COMMAND(1, 2),
        SETUP_COMMAND(2, 3),
        RELOAD_PROJECT_COMMAND(3, 4),
        FS_EVENT(4, 5),
        CANCEL_BUILD_COMMAND(5, 6),
        ;
        
        
        public final int getNumber() { return value; }
        
        public static Type valueOf(int value) {
          switch (value) {
            case 1: return COMPILE_REQUEST;
            case 2: return SHUTDOWN_COMMAND;
            case 3: return SETUP_COMMAND;
            case 4: return RELOAD_PROJECT_COMMAND;
            case 5: return FS_EVENT;
            case 6: return CANCEL_BUILD_COMMAND;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                public Type findValueByNumber(int number) {
                  return Type.valueOf(number)
        ;        }
              };
        
        private final int index;
        private final int value;
        private Type(int index, int value) {
          this.index = index;
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:org.jetbrains.jpsservice.Message.Request.Type)
      }
      
      public static final class CompilationRequest extends
          com.google.protobuf.GeneratedMessageLite {
        // Use CompilationRequest.newBuilder() to construct.
        private CompilationRequest() {
          initFields();
        }
        private CompilationRequest(boolean noInit) {}
        
        private static final CompilationRequest defaultInstance;
        public static CompilationRequest getDefaultInstance() {
          return defaultInstance;
        }
        
        public CompilationRequest getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public enum Type
            implements com.google.protobuf.Internal.EnumLite {
          REBUILD(0, 1),
          MAKE(1, 2),
          CLEAN(2, 3),
          FORCED_COMPILATION(3, 4),
          ;
          
          
          public final int getNumber() { return value; }
          
          public static Type valueOf(int value) {
            switch (value) {
              case 1: return REBUILD;
              case 2: return MAKE;
              case 3: return CLEAN;
              case 4: return FORCED_COMPILATION;
              default: return null;
            }
          }
          
          public static com.google.protobuf.Internal.EnumLiteMap<Type>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static com.google.protobuf.Internal.EnumLiteMap<Type>
              internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                  public Type findValueByNumber(int number) {
                    return Type.valueOf(number)
          ;        }
                };
          
          private final int index;
          private final int value;
          private Type(int index, int value) {
            this.index = index;
            this.value = value;
          }
          
          // @@protoc_insertion_point(enum_scope:org.jetbrains.jpsservice.Message.Request.CompilationRequest.Type)
        }
        
        // required .org.jetbrains.jpsservice.Message.Request.CompilationRequest.Type command_type = 1;
        public static final int COMMAND_TYPE_FIELD_NUMBER = 1;
        private boolean hasCommandType;
        private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.Type commandType_;
        public boolean hasCommandType() { return hasCommandType; }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.Type getCommandType() { return commandType_; }
        
        // optional string project_id = 2;
        public static final int PROJECT_ID_FIELD_NUMBER = 2;
        private boolean hasProjectId;
        private java.lang.String projectId_ = "";
        public boolean hasProjectId() { return hasProjectId; }
        public java.lang.String getProjectId() { return projectId_; }
        
        // repeated string module_name = 3;
        public static final int MODULE_NAME_FIELD_NUMBER = 3;
        private java.util.List<java.lang.String> moduleName_ =
          java.util.Collections.emptyList();
        public java.util.List<java.lang.String> getModuleNameList() {
          return moduleName_;
        }
        public int getModuleNameCount() { return moduleName_.size(); }
        public java.lang.String getModuleName(int index) {
          return moduleName_.get(index);
        }
        
        // repeated string file_path = 4;
        public static final int FILE_PATH_FIELD_NUMBER = 4;
        private java.util.List<java.lang.String> filePath_ =
          java.util.Collections.emptyList();
        public java.util.List<java.lang.String> getFilePathList() {
          return filePath_;
        }
        public int getFilePathCount() { return filePath_.size(); }
        public java.lang.String getFilePath(int index) {
          return filePath_.get(index);
        }
        
        // repeated string artifact_name = 5;
        public static final int ARTIFACT_NAME_FIELD_NUMBER = 5;
        private java.util.List<java.lang.String> artifactName_ =
          java.util.Collections.emptyList();
        public java.util.List<java.lang.String> getArtifactNameList() {
          return artifactName_;
        }
        public int getArtifactNameCount() { return artifactName_.size(); }
        public java.lang.String getArtifactName(int index) {
          return artifactName_.get(index);
        }
        
        private void initFields() {
          commandType_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.Type.REBUILD;
        }
        public final boolean isInitialized() {
          if (!hasCommandType) return false;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasCommandType()) {
            output.writeEnum(1, getCommandType().getNumber());
          }
          if (hasProjectId()) {
            output.writeString(2, getProjectId());
          }
          for (java.lang.String element : getModuleNameList()) {
            output.writeString(3, element);
          }
          for (java.lang.String element : getFilePathList()) {
            output.writeString(4, element);
          }
          for (java.lang.String element : getArtifactNameList()) {
            output.writeString(5, element);
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasCommandType()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, getCommandType().getNumber());
          }
          if (hasProjectId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(2, getProjectId());
          }
          {
            int dataSize = 0;
            for (java.lang.String element : getModuleNameList()) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeStringSizeNoTag(element);
            }
            size += dataSize;
            size += 1 * getModuleNameList().size();
          }
          {
            int dataSize = 0;
            for (java.lang.String element : getFilePathList()) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeStringSizeNoTag(element);
            }
            size += dataSize;
            size += 1 * getFilePathList().size();
          }
          {
            int dataSize = 0;
            for (java.lang.String element : getArtifactNameList()) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeStringSizeNoTag(element);
            }
            size += dataSize;
            size += 1 * getArtifactNameList().size();
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest, Builder> {
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest result;
          
          // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest();
            return builder;
          }
          
          protected org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest getDefaultInstanceForType() {
            return org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            if (result.moduleName_ != java.util.Collections.EMPTY_LIST) {
              result.moduleName_ =
                java.util.Collections.unmodifiableList(result.moduleName_);
            }
            if (result.filePath_ != java.util.Collections.EMPTY_LIST) {
              result.filePath_ =
                java.util.Collections.unmodifiableList(result.filePath_);
            }
            if (result.artifactName_ != java.util.Collections.EMPTY_LIST) {
              result.artifactName_ =
                java.util.Collections.unmodifiableList(result.artifactName_);
            }
            org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest other) {
            if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.getDefaultInstance()) return this;
            if (other.hasCommandType()) {
              setCommandType(other.getCommandType());
            }
            if (other.hasProjectId()) {
              setProjectId(other.getProjectId());
            }
            if (!other.moduleName_.isEmpty()) {
              if (result.moduleName_.isEmpty()) {
                result.moduleName_ = new java.util.ArrayList<java.lang.String>();
              }
              result.moduleName_.addAll(other.moduleName_);
            }
            if (!other.filePath_.isEmpty()) {
              if (result.filePath_.isEmpty()) {
                result.filePath_ = new java.util.ArrayList<java.lang.String>();
              }
              result.filePath_.addAll(other.filePath_);
            }
            if (!other.artifactName_.isEmpty()) {
              if (result.artifactName_.isEmpty()) {
                result.artifactName_ = new java.util.ArrayList<java.lang.String>();
              }
              result.artifactName_.addAll(other.artifactName_);
            }
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    return this;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.Type value = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.Type.valueOf(rawValue);
                  if (value != null) {
                    setCommandType(value);
                  }
                  break;
                }
                case 18: {
                  setProjectId(input.readString());
                  break;
                }
                case 26: {
                  addModuleName(input.readString());
                  break;
                }
                case 34: {
                  addFilePath(input.readString());
                  break;
                }
                case 42: {
                  addArtifactName(input.readString());
                  break;
                }
              }
            }
          }
          
          
          // required .org.jetbrains.jpsservice.Message.Request.CompilationRequest.Type command_type = 1;
          public boolean hasCommandType() {
            return result.hasCommandType();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.Type getCommandType() {
            return result.getCommandType();
          }
          public Builder setCommandType(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.Type value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.hasCommandType = true;
            result.commandType_ = value;
            return this;
          }
          public Builder clearCommandType() {
            result.hasCommandType = false;
            result.commandType_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.Type.REBUILD;
            return this;
          }
          
          // optional string project_id = 2;
          public boolean hasProjectId() {
            return result.hasProjectId();
          }
          public java.lang.String getProjectId() {
            return result.getProjectId();
          }
          public Builder setProjectId(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasProjectId = true;
            result.projectId_ = value;
            return this;
          }
          public Builder clearProjectId() {
            result.hasProjectId = false;
            result.projectId_ = getDefaultInstance().getProjectId();
            return this;
          }
          
          // repeated string module_name = 3;
          public java.util.List<java.lang.String> getModuleNameList() {
            return java.util.Collections.unmodifiableList(result.moduleName_);
          }
          public int getModuleNameCount() {
            return result.getModuleNameCount();
          }
          public java.lang.String getModuleName(int index) {
            return result.getModuleName(index);
          }
          public Builder setModuleName(int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.moduleName_.set(index, value);
            return this;
          }
          public Builder addModuleName(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  if (result.moduleName_.isEmpty()) {
              result.moduleName_ = new java.util.ArrayList<java.lang.String>();
            }
            result.moduleName_.add(value);
            return this;
          }
          public Builder addAllModuleName(
              java.lang.Iterable<? extends java.lang.String> values) {
            if (result.moduleName_.isEmpty()) {
              result.moduleName_ = new java.util.ArrayList<java.lang.String>();
            }
            super.addAll(values, result.moduleName_);
            return this;
          }
          public Builder clearModuleName() {
            result.moduleName_ = java.util.Collections.emptyList();
            return this;
          }
          
          // repeated string file_path = 4;
          public java.util.List<java.lang.String> getFilePathList() {
            return java.util.Collections.unmodifiableList(result.filePath_);
          }
          public int getFilePathCount() {
            return result.getFilePathCount();
          }
          public java.lang.String getFilePath(int index) {
            return result.getFilePath(index);
          }
          public Builder setFilePath(int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.filePath_.set(index, value);
            return this;
          }
          public Builder addFilePath(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  if (result.filePath_.isEmpty()) {
              result.filePath_ = new java.util.ArrayList<java.lang.String>();
            }
            result.filePath_.add(value);
            return this;
          }
          public Builder addAllFilePath(
              java.lang.Iterable<? extends java.lang.String> values) {
            if (result.filePath_.isEmpty()) {
              result.filePath_ = new java.util.ArrayList<java.lang.String>();
            }
            super.addAll(values, result.filePath_);
            return this;
          }
          public Builder clearFilePath() {
            result.filePath_ = java.util.Collections.emptyList();
            return this;
          }
          
          // repeated string artifact_name = 5;
          public java.util.List<java.lang.String> getArtifactNameList() {
            return java.util.Collections.unmodifiableList(result.artifactName_);
          }
          public int getArtifactNameCount() {
            return result.getArtifactNameCount();
          }
          public java.lang.String getArtifactName(int index) {
            return result.getArtifactName(index);
          }
          public Builder setArtifactName(int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.artifactName_.set(index, value);
            return this;
          }
          public Builder addArtifactName(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  if (result.artifactName_.isEmpty()) {
              result.artifactName_ = new java.util.ArrayList<java.lang.String>();
            }
            result.artifactName_.add(value);
            return this;
          }
          public Builder addAllArtifactName(
              java.lang.Iterable<? extends java.lang.String> values) {
            if (result.artifactName_.isEmpty()) {
              result.artifactName_ = new java.util.ArrayList<java.lang.String>();
            }
            super.addAll(values, result.artifactName_);
            return this;
          }
          public Builder clearArtifactName() {
            result.artifactName_ = java.util.Collections.emptyList();
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Request.CompilationRequest)
        }
        
        static {
          defaultInstance = new CompilationRequest(true);
          org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Request.CompilationRequest)
      }
      
      public static final class ShutdownCommand extends
          com.google.protobuf.GeneratedMessageLite {
        // Use ShutdownCommand.newBuilder() to construct.
        private ShutdownCommand() {
          initFields();
        }
        private ShutdownCommand(boolean noInit) {}
        
        private static final ShutdownCommand defaultInstance;
        public static ShutdownCommand getDefaultInstance() {
          return defaultInstance;
        }
        
        public ShutdownCommand getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public enum ShutdownPolicy
            implements com.google.protobuf.Internal.EnumLite {
          CANCEL_RUNNING_BUILDS(0, 1),
          WAIT_RUNNING_BUILDS(1, 2),
          ;
          
          
          public final int getNumber() { return value; }
          
          public static ShutdownPolicy valueOf(int value) {
            switch (value) {
              case 1: return CANCEL_RUNNING_BUILDS;
              case 2: return WAIT_RUNNING_BUILDS;
              default: return null;
            }
          }
          
          public static com.google.protobuf.Internal.EnumLiteMap<ShutdownPolicy>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static com.google.protobuf.Internal.EnumLiteMap<ShutdownPolicy>
              internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<ShutdownPolicy>() {
                  public ShutdownPolicy findValueByNumber(int number) {
                    return ShutdownPolicy.valueOf(number)
          ;        }
                };
          
          private final int index;
          private final int value;
          private ShutdownPolicy(int index, int value) {
            this.index = index;
            this.value = value;
          }
          
          // @@protoc_insertion_point(enum_scope:org.jetbrains.jpsservice.Message.Request.ShutdownCommand.ShutdownPolicy)
        }
        
        // required .org.jetbrains.jpsservice.Message.Request.ShutdownCommand.ShutdownPolicy shutdownPolicy = 1;
        public static final int SHUTDOWNPOLICY_FIELD_NUMBER = 1;
        private boolean hasShutdownPolicy;
        private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.ShutdownPolicy shutdownPolicy_;
        public boolean hasShutdownPolicy() { return hasShutdownPolicy; }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.ShutdownPolicy getShutdownPolicy() { return shutdownPolicy_; }
        
        private void initFields() {
          shutdownPolicy_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.ShutdownPolicy.CANCEL_RUNNING_BUILDS;
        }
        public final boolean isInitialized() {
          if (!hasShutdownPolicy) return false;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasShutdownPolicy()) {
            output.writeEnum(1, getShutdownPolicy().getNumber());
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasShutdownPolicy()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, getShutdownPolicy().getNumber());
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand, Builder> {
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand result;
          
          // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand();
            return builder;
          }
          
          protected org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand getDefaultInstanceForType() {
            return org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand other) {
            if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.getDefaultInstance()) return this;
            if (other.hasShutdownPolicy()) {
              setShutdownPolicy(other.getShutdownPolicy());
            }
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    return this;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.ShutdownPolicy value = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.ShutdownPolicy.valueOf(rawValue);
                  if (value != null) {
                    setShutdownPolicy(value);
                  }
                  break;
                }
              }
            }
          }
          
          
          // required .org.jetbrains.jpsservice.Message.Request.ShutdownCommand.ShutdownPolicy shutdownPolicy = 1;
          public boolean hasShutdownPolicy() {
            return result.hasShutdownPolicy();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.ShutdownPolicy getShutdownPolicy() {
            return result.getShutdownPolicy();
          }
          public Builder setShutdownPolicy(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.ShutdownPolicy value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.hasShutdownPolicy = true;
            result.shutdownPolicy_ = value;
            return this;
          }
          public Builder clearShutdownPolicy() {
            result.hasShutdownPolicy = false;
            result.shutdownPolicy_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.ShutdownPolicy.CANCEL_RUNNING_BUILDS;
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Request.ShutdownCommand)
        }
        
        static {
          defaultInstance = new ShutdownCommand(true);
          org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Request.ShutdownCommand)
      }
      
      public static final class SetupCommand extends
          com.google.protobuf.GeneratedMessageLite {
        // Use SetupCommand.newBuilder() to construct.
        private SetupCommand() {
          initFields();
        }
        private SetupCommand(boolean noInit) {}
        
        private static final SetupCommand defaultInstance;
        public static SetupCommand getDefaultInstance() {
          return defaultInstance;
        }
        
        public SetupCommand getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public static final class PathVariable extends
            com.google.protobuf.GeneratedMessageLite {
          // Use PathVariable.newBuilder() to construct.
          private PathVariable() {
            initFields();
          }
          private PathVariable(boolean noInit) {}
          
          private static final PathVariable defaultInstance;
          public static PathVariable getDefaultInstance() {
            return defaultInstance;
          }
          
          public PathVariable getDefaultInstanceForType() {
            return defaultInstance;
          }
          
          // required string name = 1;
          public static final int NAME_FIELD_NUMBER = 1;
          private boolean hasName;
          private java.lang.String name_ = "";
          public boolean hasName() { return hasName; }
          public java.lang.String getName() { return name_; }
          
          // required string value = 2;
          public static final int VALUE_FIELD_NUMBER = 2;
          private boolean hasValue;
          private java.lang.String value_ = "";
          public boolean hasValue() { return hasValue; }
          public java.lang.String getValue() { return value_; }
          
          private void initFields() {
          }
          public final boolean isInitialized() {
            if (!hasName) return false;
            if (!hasValue) return false;
            return true;
          }
          
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            getSerializedSize();
            if (hasName()) {
              output.writeString(1, getName());
            }
            if (hasValue()) {
              output.writeString(2, getValue());
            }
          }
          
          private int memoizedSerializedSize = -1;
          public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
          
            size = 0;
            if (hasName()) {
              size += com.google.protobuf.CodedOutputStream
                .computeStringSize(1, getName());
            }
            if (hasValue()) {
              size += com.google.protobuf.CodedOutputStream
                .computeStringSize(2, getValue());
            }
            memoizedSerializedSize = size;
            return size;
          }
          
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                     .buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                     .buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                     .buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
              return builder.buildParsed();
            } else {
              return null;
            }
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
              return builder.buildParsed();
            } else {
              return null;
            }
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                     .buildParsed();
          }
          
          public static Builder newBuilder() { return Builder.create(); }
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable prototype) {
            return newBuilder().mergeFrom(prototype);
          }
          public Builder toBuilder() { return newBuilder(this); }
          
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageLite.Builder<
                org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable, Builder> {
            private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable result;
            
            // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable.newBuilder()
            private Builder() {}
            
            private static Builder create() {
              Builder builder = new Builder();
              builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable();
              return builder;
            }
            
            protected org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable internalGetResult() {
              return result;
            }
            
            public Builder clear() {
              if (result == null) {
                throw new IllegalStateException(
                  "Cannot call clear() after build().");
              }
              result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable();
              return this;
            }
            
            public Builder clone() {
              return create().mergeFrom(result);
            }
            
            public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable getDefaultInstanceForType() {
              return org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable.getDefaultInstance();
            }
            
            public boolean isInitialized() {
              return result.isInitialized();
            }
            public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable build() {
              if (result != null && !isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return buildPartial();
            }
            
            private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
              if (!isInitialized()) {
                throw newUninitializedMessageException(
                  result).asInvalidProtocolBufferException();
              }
              return buildPartial();
            }
            
            public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable buildPartial() {
              if (result == null) {
                throw new IllegalStateException(
                  "build() has already been called on this Builder.");
              }
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable returnMe = result;
              result = null;
              return returnMe;
            }
            
            public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable other) {
              if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable.getDefaultInstance()) return this;
              if (other.hasName()) {
                setName(other.getName());
              }
              if (other.hasValue()) {
                setValue(other.getValue());
              }
              return this;
            }
            
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              while (true) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    return this;
                  default: {
                    if (!parseUnknownField(input, extensionRegistry, tag)) {
                      return this;
                    }
                    break;
                  }
                  case 10: {
                    setName(input.readString());
                    break;
                  }
                  case 18: {
                    setValue(input.readString());
                    break;
                  }
                }
              }
            }
            
            
            // required string name = 1;
            public boolean hasName() {
              return result.hasName();
            }
            public java.lang.String getName() {
              return result.getName();
            }
            public Builder setName(java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
              result.name_ = value;
              return this;
            }
            public Builder clearName() {
              result.hasName = false;
              result.name_ = getDefaultInstance().getName();
              return this;
            }
            
            // required string value = 2;
            public boolean hasValue() {
              return result.hasValue();
            }
            public java.lang.String getValue() {
              return result.getValue();
            }
            public Builder setValue(java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
              result.value_ = value;
              return this;
            }
            public Builder clearValue() {
              result.hasValue = false;
              result.value_ = getDefaultInstance().getValue();
              return this;
            }
            
            // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Request.SetupCommand.PathVariable)
          }
          
          static {
            defaultInstance = new PathVariable(true);
            org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
            defaultInstance.initFields();
          }
          
          // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Request.SetupCommand.PathVariable)
        }
        
        public static final class GlobalLibrary extends
            com.google.protobuf.GeneratedMessageLite {
          // Use GlobalLibrary.newBuilder() to construct.
          private GlobalLibrary() {
            initFields();
          }
          private GlobalLibrary(boolean noInit) {}
          
          private static final GlobalLibrary defaultInstance;
          public static GlobalLibrary getDefaultInstance() {
            return defaultInstance;
          }
          
          public GlobalLibrary getDefaultInstanceForType() {
            return defaultInstance;
          }
          
          // required string name = 1;
          public static final int NAME_FIELD_NUMBER = 1;
          private boolean hasName;
          private java.lang.String name_ = "";
          public boolean hasName() { return hasName; }
          public java.lang.String getName() { return name_; }
          
          // optional string homePath = 2;
          public static final int HOMEPATH_FIELD_NUMBER = 2;
          private boolean hasHomePath;
          private java.lang.String homePath_ = "";
          public boolean hasHomePath() { return hasHomePath; }
          public java.lang.String getHomePath() { return homePath_; }
          
          // optional string type_name = 3;
          public static final int TYPE_NAME_FIELD_NUMBER = 3;
          private boolean hasTypeName;
          private java.lang.String typeName_ = "";
          public boolean hasTypeName() { return hasTypeName; }
          public java.lang.String getTypeName() { return typeName_; }
          
          // optional string additional_data_xml = 4;
          public static final int ADDITIONAL_DATA_XML_FIELD_NUMBER = 4;
          private boolean hasAdditionalDataXml;
          private java.lang.String additionalDataXml_ = "";
          public boolean hasAdditionalDataXml() { return hasAdditionalDataXml; }
          public java.lang.String getAdditionalDataXml() { return additionalDataXml_; }
          
          // repeated string path = 5;
          public static final int PATH_FIELD_NUMBER = 5;
          private java.util.List<java.lang.String> path_ =
            java.util.Collections.emptyList();
          public java.util.List<java.lang.String> getPathList() {
            return path_;
          }
          public int getPathCount() { return path_.size(); }
          public java.lang.String getPath(int index) {
            return path_.get(index);
          }
          
          private void initFields() {
          }
          public final boolean isInitialized() {
            if (!hasName) return false;
            return true;
          }
          
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            getSerializedSize();
            if (hasName()) {
              output.writeString(1, getName());
            }
            if (hasHomePath()) {
              output.writeString(2, getHomePath());
            }
            if (hasTypeName()) {
              output.writeString(3, getTypeName());
            }
            if (hasAdditionalDataXml()) {
              output.writeString(4, getAdditionalDataXml());
            }
            for (java.lang.String element : getPathList()) {
              output.writeString(5, element);
            }
          }
          
          private int memoizedSerializedSize = -1;
          public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
          
            size = 0;
            if (hasName()) {
              size += com.google.protobuf.CodedOutputStream
                .computeStringSize(1, getName());
            }
            if (hasHomePath()) {
              size += com.google.protobuf.CodedOutputStream
                .computeStringSize(2, getHomePath());
            }
            if (hasTypeName()) {
              size += com.google.protobuf.CodedOutputStream
                .computeStringSize(3, getTypeName());
            }
            if (hasAdditionalDataXml()) {
              size += com.google.protobuf.CodedOutputStream
                .computeStringSize(4, getAdditionalDataXml());
            }
            {
              int dataSize = 0;
              for (java.lang.String element : getPathList()) {
                dataSize += com.google.protobuf.CodedOutputStream
                  .computeStringSizeNoTag(element);
              }
              size += dataSize;
              size += 1 * getPathList().size();
            }
            memoizedSerializedSize = size;
            return size;
          }
          
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                     .buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                     .buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                     .buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
              return builder.buildParsed();
            } else {
              return null;
            }
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
              return builder.buildParsed();
            } else {
              return null;
            }
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                     .buildParsed();
          }
          
          public static Builder newBuilder() { return Builder.create(); }
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary prototype) {
            return newBuilder().mergeFrom(prototype);
          }
          public Builder toBuilder() { return newBuilder(this); }
          
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageLite.Builder<
                org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary, Builder> {
            private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary result;
            
            // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary.newBuilder()
            private Builder() {}
            
            private static Builder create() {
              Builder builder = new Builder();
              builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary();
              return builder;
            }
            
            protected org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary internalGetResult() {
              return result;
            }
            
            public Builder clear() {
              if (result == null) {
                throw new IllegalStateException(
                  "Cannot call clear() after build().");
              }
              result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary();
              return this;
            }
            
            public Builder clone() {
              return create().mergeFrom(result);
            }
            
            public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary getDefaultInstanceForType() {
              return org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary.getDefaultInstance();
            }
            
            public boolean isInitialized() {
              return result.isInitialized();
            }
            public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary build() {
              if (result != null && !isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return buildPartial();
            }
            
            private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
              if (!isInitialized()) {
                throw newUninitializedMessageException(
                  result).asInvalidProtocolBufferException();
              }
              return buildPartial();
            }
            
            public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary buildPartial() {
              if (result == null) {
                throw new IllegalStateException(
                  "build() has already been called on this Builder.");
              }
              if (result.path_ != java.util.Collections.EMPTY_LIST) {
                result.path_ =
                  java.util.Collections.unmodifiableList(result.path_);
              }
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary returnMe = result;
              result = null;
              return returnMe;
            }
            
            public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary other) {
              if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary.getDefaultInstance()) return this;
              if (other.hasName()) {
                setName(other.getName());
              }
              if (other.hasHomePath()) {
                setHomePath(other.getHomePath());
              }
              if (other.hasTypeName()) {
                setTypeName(other.getTypeName());
              }
              if (other.hasAdditionalDataXml()) {
                setAdditionalDataXml(other.getAdditionalDataXml());
              }
              if (!other.path_.isEmpty()) {
                if (result.path_.isEmpty()) {
                  result.path_ = new java.util.ArrayList<java.lang.String>();
                }
                result.path_.addAll(other.path_);
              }
              return this;
            }
            
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              while (true) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    return this;
                  default: {
                    if (!parseUnknownField(input, extensionRegistry, tag)) {
                      return this;
                    }
                    break;
                  }
                  case 10: {
                    setName(input.readString());
                    break;
                  }
                  case 18: {
                    setHomePath(input.readString());
                    break;
                  }
                  case 26: {
                    setTypeName(input.readString());
                    break;
                  }
                  case 34: {
                    setAdditionalDataXml(input.readString());
                    break;
                  }
                  case 42: {
                    addPath(input.readString());
                    break;
                  }
                }
              }
            }
            
            
            // required string name = 1;
            public boolean hasName() {
              return result.hasName();
            }
            public java.lang.String getName() {
              return result.getName();
            }
            public Builder setName(java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
              result.name_ = value;
              return this;
            }
            public Builder clearName() {
              result.hasName = false;
              result.name_ = getDefaultInstance().getName();
              return this;
            }
            
            // optional string homePath = 2;
            public boolean hasHomePath() {
              return result.hasHomePath();
            }
            public java.lang.String getHomePath() {
              return result.getHomePath();
            }
            public Builder setHomePath(java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  result.hasHomePath = true;
              result.homePath_ = value;
              return this;
            }
            public Builder clearHomePath() {
              result.hasHomePath = false;
              result.homePath_ = getDefaultInstance().getHomePath();
              return this;
            }
            
            // optional string type_name = 3;
            public boolean hasTypeName() {
              return result.hasTypeName();
            }
            public java.lang.String getTypeName() {
              return result.getTypeName();
            }
            public Builder setTypeName(java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  result.hasTypeName = true;
              result.typeName_ = value;
              return this;
            }
            public Builder clearTypeName() {
              result.hasTypeName = false;
              result.typeName_ = getDefaultInstance().getTypeName();
              return this;
            }
            
            // optional string additional_data_xml = 4;
            public boolean hasAdditionalDataXml() {
              return result.hasAdditionalDataXml();
            }
            public java.lang.String getAdditionalDataXml() {
              return result.getAdditionalDataXml();
            }
            public Builder setAdditionalDataXml(java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  result.hasAdditionalDataXml = true;
              result.additionalDataXml_ = value;
              return this;
            }
            public Builder clearAdditionalDataXml() {
              result.hasAdditionalDataXml = false;
              result.additionalDataXml_ = getDefaultInstance().getAdditionalDataXml();
              return this;
            }
            
            // repeated string path = 5;
            public java.util.List<java.lang.String> getPathList() {
              return java.util.Collections.unmodifiableList(result.path_);
            }
            public int getPathCount() {
              return result.getPathCount();
            }
            public java.lang.String getPath(int index) {
              return result.getPath(index);
            }
            public Builder setPath(int index, java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  result.path_.set(index, value);
              return this;
            }
            public Builder addPath(java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  if (result.path_.isEmpty()) {
                result.path_ = new java.util.ArrayList<java.lang.String>();
              }
              result.path_.add(value);
              return this;
            }
            public Builder addAllPath(
                java.lang.Iterable<? extends java.lang.String> values) {
              if (result.path_.isEmpty()) {
                result.path_ = new java.util.ArrayList<java.lang.String>();
              }
              super.addAll(values, result.path_);
              return this;
            }
            public Builder clearPath() {
              result.path_ = java.util.Collections.emptyList();
              return this;
            }
            
            // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Request.SetupCommand.GlobalLibrary)
          }
          
          static {
            defaultInstance = new GlobalLibrary(true);
            org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
            defaultInstance.initFields();
          }
          
          // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Request.SetupCommand.GlobalLibrary)
        }
        
        // repeated .org.jetbrains.jpsservice.Message.Request.SetupCommand.PathVariable path_variable = 1;
        public static final int PATH_VARIABLE_FIELD_NUMBER = 1;
        private java.util.List<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable> pathVariable_ =
          java.util.Collections.emptyList();
        public java.util.List<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable> getPathVariableList() {
          return pathVariable_;
        }
        public int getPathVariableCount() { return pathVariable_.size(); }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable getPathVariable(int index) {
          return pathVariable_.get(index);
        }
        
        // repeated .org.jetbrains.jpsservice.Message.Request.SetupCommand.GlobalLibrary global_library = 2;
        public static final int GLOBAL_LIBRARY_FIELD_NUMBER = 2;
        private java.util.List<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary> globalLibrary_ =
          java.util.Collections.emptyList();
        public java.util.List<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary> getGlobalLibraryList() {
          return globalLibrary_;
        }
        public int getGlobalLibraryCount() { return globalLibrary_.size(); }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary getGlobalLibrary(int index) {
          return globalLibrary_.get(index);
        }
        
        // optional string global_encoding = 3;
        public static final int GLOBAL_ENCODING_FIELD_NUMBER = 3;
        private boolean hasGlobalEncoding;
        private java.lang.String globalEncoding_ = "";
        public boolean hasGlobalEncoding() { return hasGlobalEncoding; }
        public java.lang.String getGlobalEncoding() { return globalEncoding_; }
        
        private void initFields() {
        }
        public final boolean isInitialized() {
          for (org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable element : getPathVariableList()) {
            if (!element.isInitialized()) return false;
          }
          for (org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary element : getGlobalLibraryList()) {
            if (!element.isInitialized()) return false;
          }
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          for (org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable element : getPathVariableList()) {
            output.writeMessage(1, element);
          }
          for (org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary element : getGlobalLibraryList()) {
            output.writeMessage(2, element);
          }
          if (hasGlobalEncoding()) {
            output.writeString(3, getGlobalEncoding());
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          for (org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable element : getPathVariableList()) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, element);
          }
          for (org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary element : getGlobalLibraryList()) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, element);
          }
          if (hasGlobalEncoding()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(3, getGlobalEncoding());
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand, Builder> {
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand result;
          
          // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand();
            return builder;
          }
          
          protected org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand getDefaultInstanceForType() {
            return org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            if (result.pathVariable_ != java.util.Collections.EMPTY_LIST) {
              result.pathVariable_ =
                java.util.Collections.unmodifiableList(result.pathVariable_);
            }
            if (result.globalLibrary_ != java.util.Collections.EMPTY_LIST) {
              result.globalLibrary_ =
                java.util.Collections.unmodifiableList(result.globalLibrary_);
            }
            org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand other) {
            if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.getDefaultInstance()) return this;
            if (!other.pathVariable_.isEmpty()) {
              if (result.pathVariable_.isEmpty()) {
                result.pathVariable_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable>();
              }
              result.pathVariable_.addAll(other.pathVariable_);
            }
            if (!other.globalLibrary_.isEmpty()) {
              if (result.globalLibrary_.isEmpty()) {
                result.globalLibrary_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary>();
              }
              result.globalLibrary_.addAll(other.globalLibrary_);
            }
            if (other.hasGlobalEncoding()) {
              setGlobalEncoding(other.getGlobalEncoding());
            }
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    return this;
                  }
                  break;
                }
                case 10: {
                  org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable.newBuilder();
                  input.readMessage(subBuilder, extensionRegistry);
                  addPathVariable(subBuilder.buildPartial());
                  break;
                }
                case 18: {
                  org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary.newBuilder();
                  input.readMessage(subBuilder, extensionRegistry);
                  addGlobalLibrary(subBuilder.buildPartial());
                  break;
                }
                case 26: {
                  setGlobalEncoding(input.readString());
                  break;
                }
              }
            }
          }
          
          
          // repeated .org.jetbrains.jpsservice.Message.Request.SetupCommand.PathVariable path_variable = 1;
          public java.util.List<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable> getPathVariableList() {
            return java.util.Collections.unmodifiableList(result.pathVariable_);
          }
          public int getPathVariableCount() {
            return result.getPathVariableCount();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable getPathVariable(int index) {
            return result.getPathVariable(index);
          }
          public Builder setPathVariable(int index, org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.pathVariable_.set(index, value);
            return this;
          }
          public Builder setPathVariable(int index, org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable.Builder builderForValue) {
            result.pathVariable_.set(index, builderForValue.build());
            return this;
          }
          public Builder addPathVariable(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable value) {
            if (value == null) {
              throw new NullPointerException();
            }
            if (result.pathVariable_.isEmpty()) {
              result.pathVariable_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable>();
            }
            result.pathVariable_.add(value);
            return this;
          }
          public Builder addPathVariable(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable.Builder builderForValue) {
            if (result.pathVariable_.isEmpty()) {
              result.pathVariable_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable>();
            }
            result.pathVariable_.add(builderForValue.build());
            return this;
          }
          public Builder addAllPathVariable(
              java.lang.Iterable<? extends org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable> values) {
            if (result.pathVariable_.isEmpty()) {
              result.pathVariable_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.PathVariable>();
            }
            super.addAll(values, result.pathVariable_);
            return this;
          }
          public Builder clearPathVariable() {
            result.pathVariable_ = java.util.Collections.emptyList();
            return this;
          }
          
          // repeated .org.jetbrains.jpsservice.Message.Request.SetupCommand.GlobalLibrary global_library = 2;
          public java.util.List<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary> getGlobalLibraryList() {
            return java.util.Collections.unmodifiableList(result.globalLibrary_);
          }
          public int getGlobalLibraryCount() {
            return result.getGlobalLibraryCount();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary getGlobalLibrary(int index) {
            return result.getGlobalLibrary(index);
          }
          public Builder setGlobalLibrary(int index, org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.globalLibrary_.set(index, value);
            return this;
          }
          public Builder setGlobalLibrary(int index, org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary.Builder builderForValue) {
            result.globalLibrary_.set(index, builderForValue.build());
            return this;
          }
          public Builder addGlobalLibrary(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary value) {
            if (value == null) {
              throw new NullPointerException();
            }
            if (result.globalLibrary_.isEmpty()) {
              result.globalLibrary_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary>();
            }
            result.globalLibrary_.add(value);
            return this;
          }
          public Builder addGlobalLibrary(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary.Builder builderForValue) {
            if (result.globalLibrary_.isEmpty()) {
              result.globalLibrary_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary>();
            }
            result.globalLibrary_.add(builderForValue.build());
            return this;
          }
          public Builder addAllGlobalLibrary(
              java.lang.Iterable<? extends org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary> values) {
            if (result.globalLibrary_.isEmpty()) {
              result.globalLibrary_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.GlobalLibrary>();
            }
            super.addAll(values, result.globalLibrary_);
            return this;
          }
          public Builder clearGlobalLibrary() {
            result.globalLibrary_ = java.util.Collections.emptyList();
            return this;
          }
          
          // optional string global_encoding = 3;
          public boolean hasGlobalEncoding() {
            return result.hasGlobalEncoding();
          }
          public java.lang.String getGlobalEncoding() {
            return result.getGlobalEncoding();
          }
          public Builder setGlobalEncoding(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasGlobalEncoding = true;
            result.globalEncoding_ = value;
            return this;
          }
          public Builder clearGlobalEncoding() {
            result.hasGlobalEncoding = false;
            result.globalEncoding_ = getDefaultInstance().getGlobalEncoding();
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Request.SetupCommand)
        }
        
        static {
          defaultInstance = new SetupCommand(true);
          org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Request.SetupCommand)
      }
      
      public static final class ReloadProjectCommand extends
          com.google.protobuf.GeneratedMessageLite {
        // Use ReloadProjectCommand.newBuilder() to construct.
        private ReloadProjectCommand() {
          initFields();
        }
        private ReloadProjectCommand(boolean noInit) {}
        
        private static final ReloadProjectCommand defaultInstance;
        public static ReloadProjectCommand getDefaultInstance() {
          return defaultInstance;
        }
        
        public ReloadProjectCommand getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        // repeated string project_id = 1;
        public static final int PROJECT_ID_FIELD_NUMBER = 1;
        private java.util.List<java.lang.String> projectId_ =
          java.util.Collections.emptyList();
        public java.util.List<java.lang.String> getProjectIdList() {
          return projectId_;
        }
        public int getProjectIdCount() { return projectId_.size(); }
        public java.lang.String getProjectId(int index) {
          return projectId_.get(index);
        }
        
        private void initFields() {
        }
        public final boolean isInitialized() {
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          for (java.lang.String element : getProjectIdList()) {
            output.writeString(1, element);
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          {
            int dataSize = 0;
            for (java.lang.String element : getProjectIdList()) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeStringSizeNoTag(element);
            }
            size += dataSize;
            size += 1 * getProjectIdList().size();
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand, Builder> {
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand result;
          
          // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand();
            return builder;
          }
          
          protected org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand getDefaultInstanceForType() {
            return org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            if (result.projectId_ != java.util.Collections.EMPTY_LIST) {
              result.projectId_ =
                java.util.Collections.unmodifiableList(result.projectId_);
            }
            org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand other) {
            if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand.getDefaultInstance()) return this;
            if (!other.projectId_.isEmpty()) {
              if (result.projectId_.isEmpty()) {
                result.projectId_ = new java.util.ArrayList<java.lang.String>();
              }
              result.projectId_.addAll(other.projectId_);
            }
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    return this;
                  }
                  break;
                }
                case 10: {
                  addProjectId(input.readString());
                  break;
                }
              }
            }
          }
          
          
          // repeated string project_id = 1;
          public java.util.List<java.lang.String> getProjectIdList() {
            return java.util.Collections.unmodifiableList(result.projectId_);
          }
          public int getProjectIdCount() {
            return result.getProjectIdCount();
          }
          public java.lang.String getProjectId(int index) {
            return result.getProjectId(index);
          }
          public Builder setProjectId(int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.projectId_.set(index, value);
            return this;
          }
          public Builder addProjectId(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  if (result.projectId_.isEmpty()) {
              result.projectId_ = new java.util.ArrayList<java.lang.String>();
            }
            result.projectId_.add(value);
            return this;
          }
          public Builder addAllProjectId(
              java.lang.Iterable<? extends java.lang.String> values) {
            if (result.projectId_.isEmpty()) {
              result.projectId_ = new java.util.ArrayList<java.lang.String>();
            }
            super.addAll(values, result.projectId_);
            return this;
          }
          public Builder clearProjectId() {
            result.projectId_ = java.util.Collections.emptyList();
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Request.ReloadProjectCommand)
        }
        
        static {
          defaultInstance = new ReloadProjectCommand(true);
          org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Request.ReloadProjectCommand)
      }
      
      public static final class CancelBuildCommand extends
          com.google.protobuf.GeneratedMessageLite {
        // Use CancelBuildCommand.newBuilder() to construct.
        private CancelBuildCommand() {
          initFields();
        }
        private CancelBuildCommand(boolean noInit) {}
        
        private static final CancelBuildCommand defaultInstance;
        public static CancelBuildCommand getDefaultInstance() {
          return defaultInstance;
        }
        
        public CancelBuildCommand getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        // required .org.jetbrains.jpsservice.Message.UUID target_session_id = 1;
        public static final int TARGET_SESSION_ID_FIELD_NUMBER = 1;
        private boolean hasTargetSessionId;
        private org.jetbrains.jps.api.JpsRemoteProto.Message.UUID targetSessionId_;
        public boolean hasTargetSessionId() { return hasTargetSessionId; }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.UUID getTargetSessionId() { return targetSessionId_; }
        
        private void initFields() {
          targetSessionId_ = org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.getDefaultInstance();
        }
        public final boolean isInitialized() {
          if (!hasTargetSessionId) return false;
          if (!getTargetSessionId().isInitialized()) return false;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasTargetSessionId()) {
            output.writeMessage(1, getTargetSessionId());
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasTargetSessionId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getTargetSessionId());
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand, Builder> {
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand result;
          
          // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand();
            return builder;
          }
          
          protected org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand getDefaultInstanceForType() {
            return org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand other) {
            if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand.getDefaultInstance()) return this;
            if (other.hasTargetSessionId()) {
              mergeTargetSessionId(other.getTargetSessionId());
            }
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    return this;
                  }
                  break;
                }
                case 10: {
                  org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.newBuilder();
                  if (hasTargetSessionId()) {
                    subBuilder.mergeFrom(getTargetSessionId());
                  }
                  input.readMessage(subBuilder, extensionRegistry);
                  setTargetSessionId(subBuilder.buildPartial());
                  break;
                }
              }
            }
          }
          
          
          // required .org.jetbrains.jpsservice.Message.UUID target_session_id = 1;
          public boolean hasTargetSessionId() {
            return result.hasTargetSessionId();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.UUID getTargetSessionId() {
            return result.getTargetSessionId();
          }
          public Builder setTargetSessionId(org.jetbrains.jps.api.JpsRemoteProto.Message.UUID value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.hasTargetSessionId = true;
            result.targetSessionId_ = value;
            return this;
          }
          public Builder setTargetSessionId(org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.Builder builderForValue) {
            result.hasTargetSessionId = true;
            result.targetSessionId_ = builderForValue.build();
            return this;
          }
          public Builder mergeTargetSessionId(org.jetbrains.jps.api.JpsRemoteProto.Message.UUID value) {
            if (result.hasTargetSessionId() &&
                result.targetSessionId_ != org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.getDefaultInstance()) {
              result.targetSessionId_ =
                org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.newBuilder(result.targetSessionId_).mergeFrom(value).buildPartial();
            } else {
              result.targetSessionId_ = value;
            }
            result.hasTargetSessionId = true;
            return this;
          }
          public Builder clearTargetSessionId() {
            result.hasTargetSessionId = false;
            result.targetSessionId_ = org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.getDefaultInstance();
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Request.CancelBuildCommand)
        }
        
        static {
          defaultInstance = new CancelBuildCommand(true);
          org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Request.CancelBuildCommand)
      }
      
      public static final class FSEvent extends
          com.google.protobuf.GeneratedMessageLite {
        // Use FSEvent.newBuilder() to construct.
        private FSEvent() {
          initFields();
        }
        private FSEvent(boolean noInit) {}
        
        private static final FSEvent defaultInstance;
        public static FSEvent getDefaultInstance() {
          return defaultInstance;
        }
        
        public FSEvent getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        // required string project_id = 1;
        public static final int PROJECT_ID_FIELD_NUMBER = 1;
        private boolean hasProjectId;
        private java.lang.String projectId_ = "";
        public boolean hasProjectId() { return hasProjectId; }
        public java.lang.String getProjectId() { return projectId_; }
        
        // repeated string changed_paths = 2;
        public static final int CHANGED_PATHS_FIELD_NUMBER = 2;
        private java.util.List<java.lang.String> changedPaths_ =
          java.util.Collections.emptyList();
        public java.util.List<java.lang.String> getChangedPathsList() {
          return changedPaths_;
        }
        public int getChangedPathsCount() { return changedPaths_.size(); }
        public java.lang.String getChangedPaths(int index) {
          return changedPaths_.get(index);
        }
        
        // repeated string deleted_paths = 3;
        public static final int DELETED_PATHS_FIELD_NUMBER = 3;
        private java.util.List<java.lang.String> deletedPaths_ =
          java.util.Collections.emptyList();
        public java.util.List<java.lang.String> getDeletedPathsList() {
          return deletedPaths_;
        }
        public int getDeletedPathsCount() { return deletedPaths_.size(); }
        public java.lang.String getDeletedPaths(int index) {
          return deletedPaths_.get(index);
        }
        
        private void initFields() {
        }
        public final boolean isInitialized() {
          if (!hasProjectId) return false;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasProjectId()) {
            output.writeString(1, getProjectId());
          }
          for (java.lang.String element : getChangedPathsList()) {
            output.writeString(2, element);
          }
          for (java.lang.String element : getDeletedPathsList()) {
            output.writeString(3, element);
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasProjectId()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(1, getProjectId());
          }
          {
            int dataSize = 0;
            for (java.lang.String element : getChangedPathsList()) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeStringSizeNoTag(element);
            }
            size += dataSize;
            size += 1 * getChangedPathsList().size();
          }
          {
            int dataSize = 0;
            for (java.lang.String element : getDeletedPathsList()) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeStringSizeNoTag(element);
            }
            size += dataSize;
            size += 1 * getDeletedPathsList().size();
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent, Builder> {
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent result;
          
          // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent();
            return builder;
          }
          
          protected org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent getDefaultInstanceForType() {
            return org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            if (result.changedPaths_ != java.util.Collections.EMPTY_LIST) {
              result.changedPaths_ =
                java.util.Collections.unmodifiableList(result.changedPaths_);
            }
            if (result.deletedPaths_ != java.util.Collections.EMPTY_LIST) {
              result.deletedPaths_ =
                java.util.Collections.unmodifiableList(result.deletedPaths_);
            }
            org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent other) {
            if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent.getDefaultInstance()) return this;
            if (other.hasProjectId()) {
              setProjectId(other.getProjectId());
            }
            if (!other.changedPaths_.isEmpty()) {
              if (result.changedPaths_.isEmpty()) {
                result.changedPaths_ = new java.util.ArrayList<java.lang.String>();
              }
              result.changedPaths_.addAll(other.changedPaths_);
            }
            if (!other.deletedPaths_.isEmpty()) {
              if (result.deletedPaths_.isEmpty()) {
                result.deletedPaths_ = new java.util.ArrayList<java.lang.String>();
              }
              result.deletedPaths_.addAll(other.deletedPaths_);
            }
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    return this;
                  }
                  break;
                }
                case 10: {
                  setProjectId(input.readString());
                  break;
                }
                case 18: {
                  addChangedPaths(input.readString());
                  break;
                }
                case 26: {
                  addDeletedPaths(input.readString());
                  break;
                }
              }
            }
          }
          
          
          // required string project_id = 1;
          public boolean hasProjectId() {
            return result.hasProjectId();
          }
          public java.lang.String getProjectId() {
            return result.getProjectId();
          }
          public Builder setProjectId(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasProjectId = true;
            result.projectId_ = value;
            return this;
          }
          public Builder clearProjectId() {
            result.hasProjectId = false;
            result.projectId_ = getDefaultInstance().getProjectId();
            return this;
          }
          
          // repeated string changed_paths = 2;
          public java.util.List<java.lang.String> getChangedPathsList() {
            return java.util.Collections.unmodifiableList(result.changedPaths_);
          }
          public int getChangedPathsCount() {
            return result.getChangedPathsCount();
          }
          public java.lang.String getChangedPaths(int index) {
            return result.getChangedPaths(index);
          }
          public Builder setChangedPaths(int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.changedPaths_.set(index, value);
            return this;
          }
          public Builder addChangedPaths(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  if (result.changedPaths_.isEmpty()) {
              result.changedPaths_ = new java.util.ArrayList<java.lang.String>();
            }
            result.changedPaths_.add(value);
            return this;
          }
          public Builder addAllChangedPaths(
              java.lang.Iterable<? extends java.lang.String> values) {
            if (result.changedPaths_.isEmpty()) {
              result.changedPaths_ = new java.util.ArrayList<java.lang.String>();
            }
            super.addAll(values, result.changedPaths_);
            return this;
          }
          public Builder clearChangedPaths() {
            result.changedPaths_ = java.util.Collections.emptyList();
            return this;
          }
          
          // repeated string deleted_paths = 3;
          public java.util.List<java.lang.String> getDeletedPathsList() {
            return java.util.Collections.unmodifiableList(result.deletedPaths_);
          }
          public int getDeletedPathsCount() {
            return result.getDeletedPathsCount();
          }
          public java.lang.String getDeletedPaths(int index) {
            return result.getDeletedPaths(index);
          }
          public Builder setDeletedPaths(int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.deletedPaths_.set(index, value);
            return this;
          }
          public Builder addDeletedPaths(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  if (result.deletedPaths_.isEmpty()) {
              result.deletedPaths_ = new java.util.ArrayList<java.lang.String>();
            }
            result.deletedPaths_.add(value);
            return this;
          }
          public Builder addAllDeletedPaths(
              java.lang.Iterable<? extends java.lang.String> values) {
            if (result.deletedPaths_.isEmpty()) {
              result.deletedPaths_ = new java.util.ArrayList<java.lang.String>();
            }
            super.addAll(values, result.deletedPaths_);
            return this;
          }
          public Builder clearDeletedPaths() {
            result.deletedPaths_ = java.util.Collections.emptyList();
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Request.FSEvent)
        }
        
        static {
          defaultInstance = new FSEvent(true);
          org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Request.FSEvent)
      }
      
      // required .org.jetbrains.jpsservice.Message.Request.Type request_type = 1;
      public static final int REQUEST_TYPE_FIELD_NUMBER = 1;
      private boolean hasRequestType;
      private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.Type requestType_;
      public boolean hasRequestType() { return hasRequestType; }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.Type getRequestType() { return requestType_; }
      
      // optional .org.jetbrains.jpsservice.Message.Request.CompilationRequest compile_request = 2;
      public static final int COMPILE_REQUEST_FIELD_NUMBER = 2;
      private boolean hasCompileRequest;
      private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest compileRequest_;
      public boolean hasCompileRequest() { return hasCompileRequest; }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest getCompileRequest() { return compileRequest_; }
      
      // optional .org.jetbrains.jpsservice.Message.Request.ShutdownCommand shutdown_command = 3;
      public static final int SHUTDOWN_COMMAND_FIELD_NUMBER = 3;
      private boolean hasShutdownCommand;
      private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand shutdownCommand_;
      public boolean hasShutdownCommand() { return hasShutdownCommand; }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand getShutdownCommand() { return shutdownCommand_; }
      
      // optional .org.jetbrains.jpsservice.Message.Request.SetupCommand setup_command = 4;
      public static final int SETUP_COMMAND_FIELD_NUMBER = 4;
      private boolean hasSetupCommand;
      private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand setupCommand_;
      public boolean hasSetupCommand() { return hasSetupCommand; }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand getSetupCommand() { return setupCommand_; }
      
      // optional .org.jetbrains.jpsservice.Message.Request.ReloadProjectCommand reload_project_command = 5;
      public static final int RELOAD_PROJECT_COMMAND_FIELD_NUMBER = 5;
      private boolean hasReloadProjectCommand;
      private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand reloadProjectCommand_;
      public boolean hasReloadProjectCommand() { return hasReloadProjectCommand; }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand getReloadProjectCommand() { return reloadProjectCommand_; }
      
      // optional .org.jetbrains.jpsservice.Message.Request.FSEvent fs_event = 6;
      public static final int FS_EVENT_FIELD_NUMBER = 6;
      private boolean hasFsEvent;
      private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent fsEvent_;
      public boolean hasFsEvent() { return hasFsEvent; }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent getFsEvent() { return fsEvent_; }
      
      // optional .org.jetbrains.jpsservice.Message.Request.CancelBuildCommand cancel_build_command = 7;
      public static final int CANCEL_BUILD_COMMAND_FIELD_NUMBER = 7;
      private boolean hasCancelBuildCommand;
      private org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand cancelBuildCommand_;
      public boolean hasCancelBuildCommand() { return hasCancelBuildCommand; }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand getCancelBuildCommand() { return cancelBuildCommand_; }
      
      private void initFields() {
        requestType_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.Type.COMPILE_REQUEST;
        compileRequest_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.getDefaultInstance();
        shutdownCommand_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.getDefaultInstance();
        setupCommand_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.getDefaultInstance();
        reloadProjectCommand_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand.getDefaultInstance();
        fsEvent_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent.getDefaultInstance();
        cancelBuildCommand_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand.getDefaultInstance();
      }
      public final boolean isInitialized() {
        if (!hasRequestType) return false;
        if (hasCompileRequest()) {
          if (!getCompileRequest().isInitialized()) return false;
        }
        if (hasShutdownCommand()) {
          if (!getShutdownCommand().isInitialized()) return false;
        }
        if (hasSetupCommand()) {
          if (!getSetupCommand().isInitialized()) return false;
        }
        if (hasFsEvent()) {
          if (!getFsEvent().isInitialized()) return false;
        }
        if (hasCancelBuildCommand()) {
          if (!getCancelBuildCommand().isInitialized()) return false;
        }
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasRequestType()) {
          output.writeEnum(1, getRequestType().getNumber());
        }
        if (hasCompileRequest()) {
          output.writeMessage(2, getCompileRequest());
        }
        if (hasShutdownCommand()) {
          output.writeMessage(3, getShutdownCommand());
        }
        if (hasSetupCommand()) {
          output.writeMessage(4, getSetupCommand());
        }
        if (hasReloadProjectCommand()) {
          output.writeMessage(5, getReloadProjectCommand());
        }
        if (hasFsEvent()) {
          output.writeMessage(6, getFsEvent());
        }
        if (hasCancelBuildCommand()) {
          output.writeMessage(7, getCancelBuildCommand());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasRequestType()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, getRequestType().getNumber());
        }
        if (hasCompileRequest()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getCompileRequest());
        }
        if (hasShutdownCommand()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getShutdownCommand());
        }
        if (hasSetupCommand()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getSetupCommand());
        }
        if (hasReloadProjectCommand()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getReloadProjectCommand());
        }
        if (hasFsEvent()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getFsEvent());
        }
        if (hasCancelBuildCommand()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, getCancelBuildCommand());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Request parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Request prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.jetbrains.jps.api.JpsRemoteProto.Message.Request, Builder> {
        private org.jetbrains.jps.api.JpsRemoteProto.Message.Request result;
        
        // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Request.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request();
          return builder;
        }
        
        protected org.jetbrains.jps.api.JpsRemoteProto.Message.Request internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Request();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request getDefaultInstanceForType() {
          return org.jetbrains.jps.api.JpsRemoteProto.Message.Request.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private org.jetbrains.jps.api.JpsRemoteProto.Message.Request buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          org.jetbrains.jps.api.JpsRemoteProto.Message.Request returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Request other) {
          if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Request.getDefaultInstance()) return this;
          if (other.hasRequestType()) {
            setRequestType(other.getRequestType());
          }
          if (other.hasCompileRequest()) {
            mergeCompileRequest(other.getCompileRequest());
          }
          if (other.hasShutdownCommand()) {
            mergeShutdownCommand(other.getShutdownCommand());
          }
          if (other.hasSetupCommand()) {
            mergeSetupCommand(other.getSetupCommand());
          }
          if (other.hasReloadProjectCommand()) {
            mergeReloadProjectCommand(other.getReloadProjectCommand());
          }
          if (other.hasFsEvent()) {
            mergeFsEvent(other.getFsEvent());
          }
          if (other.hasCancelBuildCommand()) {
            mergeCancelBuildCommand(other.getCancelBuildCommand());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                org.jetbrains.jps.api.JpsRemoteProto.Message.Request.Type value = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.Type.valueOf(rawValue);
                if (value != null) {
                  setRequestType(value);
                }
                break;
              }
              case 18: {
                org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.newBuilder();
                if (hasCompileRequest()) {
                  subBuilder.mergeFrom(getCompileRequest());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setCompileRequest(subBuilder.buildPartial());
                break;
              }
              case 26: {
                org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.newBuilder();
                if (hasShutdownCommand()) {
                  subBuilder.mergeFrom(getShutdownCommand());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setShutdownCommand(subBuilder.buildPartial());
                break;
              }
              case 34: {
                org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.newBuilder();
                if (hasSetupCommand()) {
                  subBuilder.mergeFrom(getSetupCommand());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setSetupCommand(subBuilder.buildPartial());
                break;
              }
              case 42: {
                org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand.newBuilder();
                if (hasReloadProjectCommand()) {
                  subBuilder.mergeFrom(getReloadProjectCommand());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setReloadProjectCommand(subBuilder.buildPartial());
                break;
              }
              case 50: {
                org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent.newBuilder();
                if (hasFsEvent()) {
                  subBuilder.mergeFrom(getFsEvent());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setFsEvent(subBuilder.buildPartial());
                break;
              }
              case 58: {
                org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand.newBuilder();
                if (hasCancelBuildCommand()) {
                  subBuilder.mergeFrom(getCancelBuildCommand());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setCancelBuildCommand(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // required .org.jetbrains.jpsservice.Message.Request.Type request_type = 1;
        public boolean hasRequestType() {
          return result.hasRequestType();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.Type getRequestType() {
          return result.getRequestType();
        }
        public Builder setRequestType(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasRequestType = true;
          result.requestType_ = value;
          return this;
        }
        public Builder clearRequestType() {
          result.hasRequestType = false;
          result.requestType_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.Type.COMPILE_REQUEST;
          return this;
        }
        
        // optional .org.jetbrains.jpsservice.Message.Request.CompilationRequest compile_request = 2;
        public boolean hasCompileRequest() {
          return result.hasCompileRequest();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest getCompileRequest() {
          return result.getCompileRequest();
        }
        public Builder setCompileRequest(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasCompileRequest = true;
          result.compileRequest_ = value;
          return this;
        }
        public Builder setCompileRequest(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.Builder builderForValue) {
          result.hasCompileRequest = true;
          result.compileRequest_ = builderForValue.build();
          return this;
        }
        public Builder mergeCompileRequest(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest value) {
          if (result.hasCompileRequest() &&
              result.compileRequest_ != org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.getDefaultInstance()) {
            result.compileRequest_ =
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.newBuilder(result.compileRequest_).mergeFrom(value).buildPartial();
          } else {
            result.compileRequest_ = value;
          }
          result.hasCompileRequest = true;
          return this;
        }
        public Builder clearCompileRequest() {
          result.hasCompileRequest = false;
          result.compileRequest_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CompilationRequest.getDefaultInstance();
          return this;
        }
        
        // optional .org.jetbrains.jpsservice.Message.Request.ShutdownCommand shutdown_command = 3;
        public boolean hasShutdownCommand() {
          return result.hasShutdownCommand();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand getShutdownCommand() {
          return result.getShutdownCommand();
        }
        public Builder setShutdownCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasShutdownCommand = true;
          result.shutdownCommand_ = value;
          return this;
        }
        public Builder setShutdownCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.Builder builderForValue) {
          result.hasShutdownCommand = true;
          result.shutdownCommand_ = builderForValue.build();
          return this;
        }
        public Builder mergeShutdownCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand value) {
          if (result.hasShutdownCommand() &&
              result.shutdownCommand_ != org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.getDefaultInstance()) {
            result.shutdownCommand_ =
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.newBuilder(result.shutdownCommand_).mergeFrom(value).buildPartial();
          } else {
            result.shutdownCommand_ = value;
          }
          result.hasShutdownCommand = true;
          return this;
        }
        public Builder clearShutdownCommand() {
          result.hasShutdownCommand = false;
          result.shutdownCommand_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ShutdownCommand.getDefaultInstance();
          return this;
        }
        
        // optional .org.jetbrains.jpsservice.Message.Request.SetupCommand setup_command = 4;
        public boolean hasSetupCommand() {
          return result.hasSetupCommand();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand getSetupCommand() {
          return result.getSetupCommand();
        }
        public Builder setSetupCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasSetupCommand = true;
          result.setupCommand_ = value;
          return this;
        }
        public Builder setSetupCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.Builder builderForValue) {
          result.hasSetupCommand = true;
          result.setupCommand_ = builderForValue.build();
          return this;
        }
        public Builder mergeSetupCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand value) {
          if (result.hasSetupCommand() &&
              result.setupCommand_ != org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.getDefaultInstance()) {
            result.setupCommand_ =
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.newBuilder(result.setupCommand_).mergeFrom(value).buildPartial();
          } else {
            result.setupCommand_ = value;
          }
          result.hasSetupCommand = true;
          return this;
        }
        public Builder clearSetupCommand() {
          result.hasSetupCommand = false;
          result.setupCommand_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.SetupCommand.getDefaultInstance();
          return this;
        }
        
        // optional .org.jetbrains.jpsservice.Message.Request.ReloadProjectCommand reload_project_command = 5;
        public boolean hasReloadProjectCommand() {
          return result.hasReloadProjectCommand();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand getReloadProjectCommand() {
          return result.getReloadProjectCommand();
        }
        public Builder setReloadProjectCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasReloadProjectCommand = true;
          result.reloadProjectCommand_ = value;
          return this;
        }
        public Builder setReloadProjectCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand.Builder builderForValue) {
          result.hasReloadProjectCommand = true;
          result.reloadProjectCommand_ = builderForValue.build();
          return this;
        }
        public Builder mergeReloadProjectCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand value) {
          if (result.hasReloadProjectCommand() &&
              result.reloadProjectCommand_ != org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand.getDefaultInstance()) {
            result.reloadProjectCommand_ =
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand.newBuilder(result.reloadProjectCommand_).mergeFrom(value).buildPartial();
          } else {
            result.reloadProjectCommand_ = value;
          }
          result.hasReloadProjectCommand = true;
          return this;
        }
        public Builder clearReloadProjectCommand() {
          result.hasReloadProjectCommand = false;
          result.reloadProjectCommand_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.ReloadProjectCommand.getDefaultInstance();
          return this;
        }
        
        // optional .org.jetbrains.jpsservice.Message.Request.FSEvent fs_event = 6;
        public boolean hasFsEvent() {
          return result.hasFsEvent();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent getFsEvent() {
          return result.getFsEvent();
        }
        public Builder setFsEvent(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasFsEvent = true;
          result.fsEvent_ = value;
          return this;
        }
        public Builder setFsEvent(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent.Builder builderForValue) {
          result.hasFsEvent = true;
          result.fsEvent_ = builderForValue.build();
          return this;
        }
        public Builder mergeFsEvent(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent value) {
          if (result.hasFsEvent() &&
              result.fsEvent_ != org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent.getDefaultInstance()) {
            result.fsEvent_ =
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent.newBuilder(result.fsEvent_).mergeFrom(value).buildPartial();
          } else {
            result.fsEvent_ = value;
          }
          result.hasFsEvent = true;
          return this;
        }
        public Builder clearFsEvent() {
          result.hasFsEvent = false;
          result.fsEvent_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.FSEvent.getDefaultInstance();
          return this;
        }
        
        // optional .org.jetbrains.jpsservice.Message.Request.CancelBuildCommand cancel_build_command = 7;
        public boolean hasCancelBuildCommand() {
          return result.hasCancelBuildCommand();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand getCancelBuildCommand() {
          return result.getCancelBuildCommand();
        }
        public Builder setCancelBuildCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasCancelBuildCommand = true;
          result.cancelBuildCommand_ = value;
          return this;
        }
        public Builder setCancelBuildCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand.Builder builderForValue) {
          result.hasCancelBuildCommand = true;
          result.cancelBuildCommand_ = builderForValue.build();
          return this;
        }
        public Builder mergeCancelBuildCommand(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand value) {
          if (result.hasCancelBuildCommand() &&
              result.cancelBuildCommand_ != org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand.getDefaultInstance()) {
            result.cancelBuildCommand_ =
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand.newBuilder(result.cancelBuildCommand_).mergeFrom(value).buildPartial();
          } else {
            result.cancelBuildCommand_ = value;
          }
          result.hasCancelBuildCommand = true;
          return this;
        }
        public Builder clearCancelBuildCommand() {
          result.hasCancelBuildCommand = false;
          result.cancelBuildCommand_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.CancelBuildCommand.getDefaultInstance();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Request)
      }
      
      static {
        defaultInstance = new Request(true);
        org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Request)
    }
    
    public static final class Response extends
        com.google.protobuf.GeneratedMessageLite {
      // Use Response.newBuilder() to construct.
      private Response() {
        initFields();
      }
      private Response(boolean noInit) {}
      
      private static final Response defaultInstance;
      public static Response getDefaultInstance() {
        return defaultInstance;
      }
      
      public Response getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public enum Type
          implements com.google.protobuf.Internal.EnumLite {
        BUILD_EVENT(0, 1),
        COMPILE_MESSAGE(1, 2),
        ;
        
        
        public final int getNumber() { return value; }
        
        public static Type valueOf(int value) {
          switch (value) {
            case 1: return BUILD_EVENT;
            case 2: return COMPILE_MESSAGE;
            default: return null;
          }
        }
        
        public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                public Type findValueByNumber(int number) {
                  return Type.valueOf(number)
        ;        }
              };
        
        private final int index;
        private final int value;
        private Type(int index, int value) {
          this.index = index;
          this.value = value;
        }
        
        // @@protoc_insertion_point(enum_scope:org.jetbrains.jpsservice.Message.Response.Type)
      }
      
      public static final class BuildEvent extends
          com.google.protobuf.GeneratedMessageLite {
        // Use BuildEvent.newBuilder() to construct.
        private BuildEvent() {
          initFields();
        }
        private BuildEvent(boolean noInit) {}
        
        private static final BuildEvent defaultInstance;
        public static BuildEvent getDefaultInstance() {
          return defaultInstance;
        }
        
        public BuildEvent getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public enum Type
            implements com.google.protobuf.Internal.EnumLite {
          BUILD_STARTED(0, 1),
          BUILD_COMPLETED(1, 2),
          COMMAND_COMPLETED(2, 3),
          FILES_GENERATED(3, 4),
          ;
          
          
          public final int getNumber() { return value; }
          
          public static Type valueOf(int value) {
            switch (value) {
              case 1: return BUILD_STARTED;
              case 2: return BUILD_COMPLETED;
              case 3: return COMMAND_COMPLETED;
              case 4: return FILES_GENERATED;
              default: return null;
            }
          }
          
          public static com.google.protobuf.Internal.EnumLiteMap<Type>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static com.google.protobuf.Internal.EnumLiteMap<Type>
              internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                  public Type findValueByNumber(int number) {
                    return Type.valueOf(number)
          ;        }
                };
          
          private final int index;
          private final int value;
          private Type(int index, int value) {
            this.index = index;
            this.value = value;
          }
          
          // @@protoc_insertion_point(enum_scope:org.jetbrains.jpsservice.Message.Response.BuildEvent.Type)
        }
        
        public enum Status
            implements com.google.protobuf.Internal.EnumLite {
          CANCELED(0, 1),
          ERRORS(1, 2),
          SUCCESS(2, 3),
          UP_TO_DATE(3, 4),
          ;
          
          
          public final int getNumber() { return value; }
          
          public static Status valueOf(int value) {
            switch (value) {
              case 1: return CANCELED;
              case 2: return ERRORS;
              case 3: return SUCCESS;
              case 4: return UP_TO_DATE;
              default: return null;
            }
          }
          
          public static com.google.protobuf.Internal.EnumLiteMap<Status>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static com.google.protobuf.Internal.EnumLiteMap<Status>
              internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<Status>() {
                  public Status findValueByNumber(int number) {
                    return Status.valueOf(number)
          ;        }
                };
          
          private final int index;
          private final int value;
          private Status(int index, int value) {
            this.index = index;
            this.value = value;
          }
          
          // @@protoc_insertion_point(enum_scope:org.jetbrains.jpsservice.Message.Response.BuildEvent.Status)
        }
        
        public static final class GeneratedFile extends
            com.google.protobuf.GeneratedMessageLite {
          // Use GeneratedFile.newBuilder() to construct.
          private GeneratedFile() {
            initFields();
          }
          private GeneratedFile(boolean noInit) {}
          
          private static final GeneratedFile defaultInstance;
          public static GeneratedFile getDefaultInstance() {
            return defaultInstance;
          }
          
          public GeneratedFile getDefaultInstanceForType() {
            return defaultInstance;
          }
          
          // required string output_root = 1;
          public static final int OUTPUT_ROOT_FIELD_NUMBER = 1;
          private boolean hasOutputRoot;
          private java.lang.String outputRoot_ = "";
          public boolean hasOutputRoot() { return hasOutputRoot; }
          public java.lang.String getOutputRoot() { return outputRoot_; }
          
          // required string relative_path = 2;
          public static final int RELATIVE_PATH_FIELD_NUMBER = 2;
          private boolean hasRelativePath;
          private java.lang.String relativePath_ = "";
          public boolean hasRelativePath() { return hasRelativePath; }
          public java.lang.String getRelativePath() { return relativePath_; }
          
          private void initFields() {
          }
          public final boolean isInitialized() {
            if (!hasOutputRoot) return false;
            if (!hasRelativePath) return false;
            return true;
          }
          
          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            getSerializedSize();
            if (hasOutputRoot()) {
              output.writeString(1, getOutputRoot());
            }
            if (hasRelativePath()) {
              output.writeString(2, getRelativePath());
            }
          }
          
          private int memoizedSerializedSize = -1;
          public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
          
            size = 0;
            if (hasOutputRoot()) {
              size += com.google.protobuf.CodedOutputStream
                .computeStringSize(1, getOutputRoot());
            }
            if (hasRelativePath()) {
              size += com.google.protobuf.CodedOutputStream
                .computeStringSize(2, getRelativePath());
            }
            memoizedSerializedSize = size;
            return size;
          }
          
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                     .buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return newBuilder().mergeFrom(data, extensionRegistry)
                     .buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                     .buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input)) {
              return builder.buildParsed();
            } else {
              return null;
            }
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            Builder builder = newBuilder();
            if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
              return builder.buildParsed();
            } else {
              return null;
            }
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input).buildParsed();
          }
          public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return newBuilder().mergeFrom(input, extensionRegistry)
                     .buildParsed();
          }
          
          public static Builder newBuilder() { return Builder.create(); }
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile prototype) {
            return newBuilder().mergeFrom(prototype);
          }
          public Builder toBuilder() { return newBuilder(this); }
          
          public static final class Builder extends
              com.google.protobuf.GeneratedMessageLite.Builder<
                org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile, Builder> {
            private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile result;
            
            // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile.newBuilder()
            private Builder() {}
            
            private static Builder create() {
              Builder builder = new Builder();
              builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile();
              return builder;
            }
            
            protected org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile internalGetResult() {
              return result;
            }
            
            public Builder clear() {
              if (result == null) {
                throw new IllegalStateException(
                  "Cannot call clear() after build().");
              }
              result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile();
              return this;
            }
            
            public Builder clone() {
              return create().mergeFrom(result);
            }
            
            public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile getDefaultInstanceForType() {
              return org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile.getDefaultInstance();
            }
            
            public boolean isInitialized() {
              return result.isInitialized();
            }
            public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile build() {
              if (result != null && !isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return buildPartial();
            }
            
            private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile buildParsed()
                throws com.google.protobuf.InvalidProtocolBufferException {
              if (!isInitialized()) {
                throw newUninitializedMessageException(
                  result).asInvalidProtocolBufferException();
              }
              return buildPartial();
            }
            
            public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile buildPartial() {
              if (result == null) {
                throw new IllegalStateException(
                  "build() has already been called on this Builder.");
              }
              org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile returnMe = result;
              result = null;
              return returnMe;
            }
            
            public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile other) {
              if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile.getDefaultInstance()) return this;
              if (other.hasOutputRoot()) {
                setOutputRoot(other.getOutputRoot());
              }
              if (other.hasRelativePath()) {
                setRelativePath(other.getRelativePath());
              }
              return this;
            }
            
            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              while (true) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    return this;
                  default: {
                    if (!parseUnknownField(input, extensionRegistry, tag)) {
                      return this;
                    }
                    break;
                  }
                  case 10: {
                    setOutputRoot(input.readString());
                    break;
                  }
                  case 18: {
                    setRelativePath(input.readString());
                    break;
                  }
                }
              }
            }
            
            
            // required string output_root = 1;
            public boolean hasOutputRoot() {
              return result.hasOutputRoot();
            }
            public java.lang.String getOutputRoot() {
              return result.getOutputRoot();
            }
            public Builder setOutputRoot(java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  result.hasOutputRoot = true;
              result.outputRoot_ = value;
              return this;
            }
            public Builder clearOutputRoot() {
              result.hasOutputRoot = false;
              result.outputRoot_ = getDefaultInstance().getOutputRoot();
              return this;
            }
            
            // required string relative_path = 2;
            public boolean hasRelativePath() {
              return result.hasRelativePath();
            }
            public java.lang.String getRelativePath() {
              return result.getRelativePath();
            }
            public Builder setRelativePath(java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  result.hasRelativePath = true;
              result.relativePath_ = value;
              return this;
            }
            public Builder clearRelativePath() {
              result.hasRelativePath = false;
              result.relativePath_ = getDefaultInstance().getRelativePath();
              return this;
            }
            
            // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Response.BuildEvent.GeneratedFile)
          }
          
          static {
            defaultInstance = new GeneratedFile(true);
            org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
            defaultInstance.initFields();
          }
          
          // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Response.BuildEvent.GeneratedFile)
        }
        
        // required .org.jetbrains.jpsservice.Message.Response.BuildEvent.Type event_type = 1;
        public static final int EVENT_TYPE_FIELD_NUMBER = 1;
        private boolean hasEventType;
        private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Type eventType_;
        public boolean hasEventType() { return hasEventType; }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Type getEventType() { return eventType_; }
        
        // optional string description = 2;
        public static final int DESCRIPTION_FIELD_NUMBER = 2;
        private boolean hasDescription;
        private java.lang.String description_ = "";
        public boolean hasDescription() { return hasDescription; }
        public java.lang.String getDescription() { return description_; }
        
        // optional .org.jetbrains.jpsservice.Message.Response.BuildEvent.Status completion_status = 3;
        public static final int COMPLETION_STATUS_FIELD_NUMBER = 3;
        private boolean hasCompletionStatus;
        private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Status completionStatus_;
        public boolean hasCompletionStatus() { return hasCompletionStatus; }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Status getCompletionStatus() { return completionStatus_; }
        
        // repeated .org.jetbrains.jpsservice.Message.Response.BuildEvent.GeneratedFile generated_files = 4;
        public static final int GENERATED_FILES_FIELD_NUMBER = 4;
        private java.util.List<org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile> generatedFiles_ =
          java.util.Collections.emptyList();
        public java.util.List<org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile> getGeneratedFilesList() {
          return generatedFiles_;
        }
        public int getGeneratedFilesCount() { return generatedFiles_.size(); }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile getGeneratedFiles(int index) {
          return generatedFiles_.get(index);
        }
        
        private void initFields() {
          eventType_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Type.BUILD_STARTED;
          completionStatus_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Status.CANCELED;
        }
        public final boolean isInitialized() {
          if (!hasEventType) return false;
          for (org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile element : getGeneratedFilesList()) {
            if (!element.isInitialized()) return false;
          }
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasEventType()) {
            output.writeEnum(1, getEventType().getNumber());
          }
          if (hasDescription()) {
            output.writeString(2, getDescription());
          }
          if (hasCompletionStatus()) {
            output.writeEnum(3, getCompletionStatus().getNumber());
          }
          for (org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile element : getGeneratedFilesList()) {
            output.writeMessage(4, element);
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasEventType()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, getEventType().getNumber());
          }
          if (hasDescription()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(2, getDescription());
          }
          if (hasCompletionStatus()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(3, getCompletionStatus().getNumber());
          }
          for (org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile element : getGeneratedFilesList()) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, element);
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent, Builder> {
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent result;
          
          // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent();
            return builder;
          }
          
          protected org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent getDefaultInstanceForType() {
            return org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            if (result.generatedFiles_ != java.util.Collections.EMPTY_LIST) {
              result.generatedFiles_ =
                java.util.Collections.unmodifiableList(result.generatedFiles_);
            }
            org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent other) {
            if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.getDefaultInstance()) return this;
            if (other.hasEventType()) {
              setEventType(other.getEventType());
            }
            if (other.hasDescription()) {
              setDescription(other.getDescription());
            }
            if (other.hasCompletionStatus()) {
              setCompletionStatus(other.getCompletionStatus());
            }
            if (!other.generatedFiles_.isEmpty()) {
              if (result.generatedFiles_.isEmpty()) {
                result.generatedFiles_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile>();
              }
              result.generatedFiles_.addAll(other.generatedFiles_);
            }
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    return this;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Type value = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Type.valueOf(rawValue);
                  if (value != null) {
                    setEventType(value);
                  }
                  break;
                }
                case 18: {
                  setDescription(input.readString());
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Status value = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Status.valueOf(rawValue);
                  if (value != null) {
                    setCompletionStatus(value);
                  }
                  break;
                }
                case 34: {
                  org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile.newBuilder();
                  input.readMessage(subBuilder, extensionRegistry);
                  addGeneratedFiles(subBuilder.buildPartial());
                  break;
                }
              }
            }
          }
          
          
          // required .org.jetbrains.jpsservice.Message.Response.BuildEvent.Type event_type = 1;
          public boolean hasEventType() {
            return result.hasEventType();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Type getEventType() {
            return result.getEventType();
          }
          public Builder setEventType(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Type value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.hasEventType = true;
            result.eventType_ = value;
            return this;
          }
          public Builder clearEventType() {
            result.hasEventType = false;
            result.eventType_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Type.BUILD_STARTED;
            return this;
          }
          
          // optional string description = 2;
          public boolean hasDescription() {
            return result.hasDescription();
          }
          public java.lang.String getDescription() {
            return result.getDescription();
          }
          public Builder setDescription(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
            result.description_ = value;
            return this;
          }
          public Builder clearDescription() {
            result.hasDescription = false;
            result.description_ = getDefaultInstance().getDescription();
            return this;
          }
          
          // optional .org.jetbrains.jpsservice.Message.Response.BuildEvent.Status completion_status = 3;
          public boolean hasCompletionStatus() {
            return result.hasCompletionStatus();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Status getCompletionStatus() {
            return result.getCompletionStatus();
          }
          public Builder setCompletionStatus(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Status value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.hasCompletionStatus = true;
            result.completionStatus_ = value;
            return this;
          }
          public Builder clearCompletionStatus() {
            result.hasCompletionStatus = false;
            result.completionStatus_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Status.CANCELED;
            return this;
          }
          
          // repeated .org.jetbrains.jpsservice.Message.Response.BuildEvent.GeneratedFile generated_files = 4;
          public java.util.List<org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile> getGeneratedFilesList() {
            return java.util.Collections.unmodifiableList(result.generatedFiles_);
          }
          public int getGeneratedFilesCount() {
            return result.getGeneratedFilesCount();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile getGeneratedFiles(int index) {
            return result.getGeneratedFiles(index);
          }
          public Builder setGeneratedFiles(int index, org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.generatedFiles_.set(index, value);
            return this;
          }
          public Builder setGeneratedFiles(int index, org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile.Builder builderForValue) {
            result.generatedFiles_.set(index, builderForValue.build());
            return this;
          }
          public Builder addGeneratedFiles(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile value) {
            if (value == null) {
              throw new NullPointerException();
            }
            if (result.generatedFiles_.isEmpty()) {
              result.generatedFiles_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile>();
            }
            result.generatedFiles_.add(value);
            return this;
          }
          public Builder addGeneratedFiles(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile.Builder builderForValue) {
            if (result.generatedFiles_.isEmpty()) {
              result.generatedFiles_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile>();
            }
            result.generatedFiles_.add(builderForValue.build());
            return this;
          }
          public Builder addAllGeneratedFiles(
              java.lang.Iterable<? extends org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile> values) {
            if (result.generatedFiles_.isEmpty()) {
              result.generatedFiles_ = new java.util.ArrayList<org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.GeneratedFile>();
            }
            super.addAll(values, result.generatedFiles_);
            return this;
          }
          public Builder clearGeneratedFiles() {
            result.generatedFiles_ = java.util.Collections.emptyList();
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Response.BuildEvent)
        }
        
        static {
          defaultInstance = new BuildEvent(true);
          org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Response.BuildEvent)
      }
      
      public static final class CompileMessage extends
          com.google.protobuf.GeneratedMessageLite {
        // Use CompileMessage.newBuilder() to construct.
        private CompileMessage() {
          initFields();
        }
        private CompileMessage(boolean noInit) {}
        
        private static final CompileMessage defaultInstance;
        public static CompileMessage getDefaultInstance() {
          return defaultInstance;
        }
        
        public CompileMessage getDefaultInstanceForType() {
          return defaultInstance;
        }
        
        public enum Kind
            implements com.google.protobuf.Internal.EnumLite {
          ERROR(0, 1),
          WARNING(1, 2),
          INFO(2, 3),
          PROGRESS(3, 4),
          ;
          
          
          public final int getNumber() { return value; }
          
          public static Kind valueOf(int value) {
            switch (value) {
              case 1: return ERROR;
              case 2: return WARNING;
              case 3: return INFO;
              case 4: return PROGRESS;
              default: return null;
            }
          }
          
          public static com.google.protobuf.Internal.EnumLiteMap<Kind>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static com.google.protobuf.Internal.EnumLiteMap<Kind>
              internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
                  public Kind findValueByNumber(int number) {
                    return Kind.valueOf(number)
          ;        }
                };
          
          private final int index;
          private final int value;
          private Kind(int index, int value) {
            this.index = index;
            this.value = value;
          }
          
          // @@protoc_insertion_point(enum_scope:org.jetbrains.jpsservice.Message.Response.CompileMessage.Kind)
        }
        
        // required .org.jetbrains.jpsservice.Message.Response.CompileMessage.Kind kind = 1;
        public static final int KIND_FIELD_NUMBER = 1;
        private boolean hasKind;
        private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.Kind kind_;
        public boolean hasKind() { return hasKind; }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.Kind getKind() { return kind_; }
        
        // optional string text = 2;
        public static final int TEXT_FIELD_NUMBER = 2;
        private boolean hasText;
        private java.lang.String text_ = "";
        public boolean hasText() { return hasText; }
        public java.lang.String getText() { return text_; }
        
        // optional string source_file_path = 3;
        public static final int SOURCE_FILE_PATH_FIELD_NUMBER = 3;
        private boolean hasSourceFilePath;
        private java.lang.String sourceFilePath_ = "";
        public boolean hasSourceFilePath() { return hasSourceFilePath; }
        public java.lang.String getSourceFilePath() { return sourceFilePath_; }
        
        // optional uint64 problem_begin_offset = 4;
        public static final int PROBLEM_BEGIN_OFFSET_FIELD_NUMBER = 4;
        private boolean hasProblemBeginOffset;
        private long problemBeginOffset_ = 0L;
        public boolean hasProblemBeginOffset() { return hasProblemBeginOffset; }
        public long getProblemBeginOffset() { return problemBeginOffset_; }
        
        // optional uint64 problem_end_offset = 5;
        public static final int PROBLEM_END_OFFSET_FIELD_NUMBER = 5;
        private boolean hasProblemEndOffset;
        private long problemEndOffset_ = 0L;
        public boolean hasProblemEndOffset() { return hasProblemEndOffset; }
        public long getProblemEndOffset() { return problemEndOffset_; }
        
        // optional uint64 problem_location_offset = 6;
        public static final int PROBLEM_LOCATION_OFFSET_FIELD_NUMBER = 6;
        private boolean hasProblemLocationOffset;
        private long problemLocationOffset_ = 0L;
        public boolean hasProblemLocationOffset() { return hasProblemLocationOffset; }
        public long getProblemLocationOffset() { return problemLocationOffset_; }
        
        // optional uint64 line = 7;
        public static final int LINE_FIELD_NUMBER = 7;
        private boolean hasLine;
        private long line_ = 0L;
        public boolean hasLine() { return hasLine; }
        public long getLine() { return line_; }
        
        // optional uint64 column = 8;
        public static final int COLUMN_FIELD_NUMBER = 8;
        private boolean hasColumn;
        private long column_ = 0L;
        public boolean hasColumn() { return hasColumn; }
        public long getColumn() { return column_; }
        
        // optional float done = 9;
        public static final int DONE_FIELD_NUMBER = 9;
        private boolean hasDone;
        private float done_ = 0F;
        public boolean hasDone() { return hasDone; }
        public float getDone() { return done_; }
        
        private void initFields() {
          kind_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.Kind.ERROR;
        }
        public final boolean isInitialized() {
          if (!hasKind) return false;
          return true;
        }
        
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (hasKind()) {
            output.writeEnum(1, getKind().getNumber());
          }
          if (hasText()) {
            output.writeString(2, getText());
          }
          if (hasSourceFilePath()) {
            output.writeString(3, getSourceFilePath());
          }
          if (hasProblemBeginOffset()) {
            output.writeUInt64(4, getProblemBeginOffset());
          }
          if (hasProblemEndOffset()) {
            output.writeUInt64(5, getProblemEndOffset());
          }
          if (hasProblemLocationOffset()) {
            output.writeUInt64(6, getProblemLocationOffset());
          }
          if (hasLine()) {
            output.writeUInt64(7, getLine());
          }
          if (hasColumn()) {
            output.writeUInt64(8, getColumn());
          }
          if (hasDone()) {
            output.writeFloat(9, getDone());
          }
        }
        
        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
        
          size = 0;
          if (hasKind()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, getKind().getNumber());
          }
          if (hasText()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(2, getText());
          }
          if (hasSourceFilePath()) {
            size += com.google.protobuf.CodedOutputStream
              .computeStringSize(3, getSourceFilePath());
          }
          if (hasProblemBeginOffset()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(4, getProblemBeginOffset());
          }
          if (hasProblemEndOffset()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(5, getProblemEndOffset());
          }
          if (hasProblemLocationOffset()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(6, getProblemLocationOffset());
          }
          if (hasLine()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(7, getLine());
          }
          if (hasColumn()) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(8, getColumn());
          }
          if (hasDone()) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(9, getDone());
          }
          memoizedSerializedSize = size;
          return size;
        }
        
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Builder builder = newBuilder();
          if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
            return builder.buildParsed();
          } else {
            return null;
          }
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }
        public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry)
                   .buildParsed();
        }
        
        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }
        
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageLite.Builder<
              org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage, Builder> {
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage result;
          
          // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.newBuilder()
          private Builder() {}
          
          private static Builder create() {
            Builder builder = new Builder();
            builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage();
            return builder;
          }
          
          protected org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage internalGetResult() {
            return result;
          }
          
          public Builder clear() {
            if (result == null) {
              throw new IllegalStateException(
                "Cannot call clear() after build().");
            }
            result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage();
            return this;
          }
          
          public Builder clone() {
            return create().mergeFrom(result);
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage getDefaultInstanceForType() {
            return org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.getDefaultInstance();
          }
          
          public boolean isInitialized() {
            return result.isInitialized();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage build() {
            if (result != null && !isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return buildPartial();
          }
          
          private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage buildParsed()
              throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw newUninitializedMessageException(
                result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }
          
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage buildPartial() {
            if (result == null) {
              throw new IllegalStateException(
                "build() has already been called on this Builder.");
            }
            org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage returnMe = result;
            result = null;
            return returnMe;
          }
          
          public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage other) {
            if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.getDefaultInstance()) return this;
            if (other.hasKind()) {
              setKind(other.getKind());
            }
            if (other.hasText()) {
              setText(other.getText());
            }
            if (other.hasSourceFilePath()) {
              setSourceFilePath(other.getSourceFilePath());
            }
            if (other.hasProblemBeginOffset()) {
              setProblemBeginOffset(other.getProblemBeginOffset());
            }
            if (other.hasProblemEndOffset()) {
              setProblemEndOffset(other.getProblemEndOffset());
            }
            if (other.hasProblemLocationOffset()) {
              setProblemLocationOffset(other.getProblemLocationOffset());
            }
            if (other.hasLine()) {
              setLine(other.getLine());
            }
            if (other.hasColumn()) {
              setColumn(other.getColumn());
            }
            if (other.hasDone()) {
              setDone(other.getDone());
            }
            return this;
          }
          
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!parseUnknownField(input, extensionRegistry, tag)) {
                    return this;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.Kind value = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.Kind.valueOf(rawValue);
                  if (value != null) {
                    setKind(value);
                  }
                  break;
                }
                case 18: {
                  setText(input.readString());
                  break;
                }
                case 26: {
                  setSourceFilePath(input.readString());
                  break;
                }
                case 32: {
                  setProblemBeginOffset(input.readUInt64());
                  break;
                }
                case 40: {
                  setProblemEndOffset(input.readUInt64());
                  break;
                }
                case 48: {
                  setProblemLocationOffset(input.readUInt64());
                  break;
                }
                case 56: {
                  setLine(input.readUInt64());
                  break;
                }
                case 64: {
                  setColumn(input.readUInt64());
                  break;
                }
                case 77: {
                  setDone(input.readFloat());
                  break;
                }
              }
            }
          }
          
          
          // required .org.jetbrains.jpsservice.Message.Response.CompileMessage.Kind kind = 1;
          public boolean hasKind() {
            return result.hasKind();
          }
          public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.Kind getKind() {
            return result.getKind();
          }
          public Builder setKind(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.Kind value) {
            if (value == null) {
              throw new NullPointerException();
            }
            result.hasKind = true;
            result.kind_ = value;
            return this;
          }
          public Builder clearKind() {
            result.hasKind = false;
            result.kind_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.Kind.ERROR;
            return this;
          }
          
          // optional string text = 2;
          public boolean hasText() {
            return result.hasText();
          }
          public java.lang.String getText() {
            return result.getText();
          }
          public Builder setText(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasText = true;
            result.text_ = value;
            return this;
          }
          public Builder clearText() {
            result.hasText = false;
            result.text_ = getDefaultInstance().getText();
            return this;
          }
          
          // optional string source_file_path = 3;
          public boolean hasSourceFilePath() {
            return result.hasSourceFilePath();
          }
          public java.lang.String getSourceFilePath() {
            return result.getSourceFilePath();
          }
          public Builder setSourceFilePath(java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  result.hasSourceFilePath = true;
            result.sourceFilePath_ = value;
            return this;
          }
          public Builder clearSourceFilePath() {
            result.hasSourceFilePath = false;
            result.sourceFilePath_ = getDefaultInstance().getSourceFilePath();
            return this;
          }
          
          // optional uint64 problem_begin_offset = 4;
          public boolean hasProblemBeginOffset() {
            return result.hasProblemBeginOffset();
          }
          public long getProblemBeginOffset() {
            return result.getProblemBeginOffset();
          }
          public Builder setProblemBeginOffset(long value) {
            result.hasProblemBeginOffset = true;
            result.problemBeginOffset_ = value;
            return this;
          }
          public Builder clearProblemBeginOffset() {
            result.hasProblemBeginOffset = false;
            result.problemBeginOffset_ = 0L;
            return this;
          }
          
          // optional uint64 problem_end_offset = 5;
          public boolean hasProblemEndOffset() {
            return result.hasProblemEndOffset();
          }
          public long getProblemEndOffset() {
            return result.getProblemEndOffset();
          }
          public Builder setProblemEndOffset(long value) {
            result.hasProblemEndOffset = true;
            result.problemEndOffset_ = value;
            return this;
          }
          public Builder clearProblemEndOffset() {
            result.hasProblemEndOffset = false;
            result.problemEndOffset_ = 0L;
            return this;
          }
          
          // optional uint64 problem_location_offset = 6;
          public boolean hasProblemLocationOffset() {
            return result.hasProblemLocationOffset();
          }
          public long getProblemLocationOffset() {
            return result.getProblemLocationOffset();
          }
          public Builder setProblemLocationOffset(long value) {
            result.hasProblemLocationOffset = true;
            result.problemLocationOffset_ = value;
            return this;
          }
          public Builder clearProblemLocationOffset() {
            result.hasProblemLocationOffset = false;
            result.problemLocationOffset_ = 0L;
            return this;
          }
          
          // optional uint64 line = 7;
          public boolean hasLine() {
            return result.hasLine();
          }
          public long getLine() {
            return result.getLine();
          }
          public Builder setLine(long value) {
            result.hasLine = true;
            result.line_ = value;
            return this;
          }
          public Builder clearLine() {
            result.hasLine = false;
            result.line_ = 0L;
            return this;
          }
          
          // optional uint64 column = 8;
          public boolean hasColumn() {
            return result.hasColumn();
          }
          public long getColumn() {
            return result.getColumn();
          }
          public Builder setColumn(long value) {
            result.hasColumn = true;
            result.column_ = value;
            return this;
          }
          public Builder clearColumn() {
            result.hasColumn = false;
            result.column_ = 0L;
            return this;
          }
          
          // optional float done = 9;
          public boolean hasDone() {
            return result.hasDone();
          }
          public float getDone() {
            return result.getDone();
          }
          public Builder setDone(float value) {
            result.hasDone = true;
            result.done_ = value;
            return this;
          }
          public Builder clearDone() {
            result.hasDone = false;
            result.done_ = 0F;
            return this;
          }
          
          // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Response.CompileMessage)
        }
        
        static {
          defaultInstance = new CompileMessage(true);
          org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
          defaultInstance.initFields();
        }
        
        // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Response.CompileMessage)
      }
      
      // required .org.jetbrains.jpsservice.Message.Response.Type response_type = 1;
      public static final int RESPONSE_TYPE_FIELD_NUMBER = 1;
      private boolean hasResponseType;
      private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.Type responseType_;
      public boolean hasResponseType() { return hasResponseType; }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.Type getResponseType() { return responseType_; }
      
      // optional .org.jetbrains.jpsservice.Message.Response.BuildEvent build_event = 2;
      public static final int BUILD_EVENT_FIELD_NUMBER = 2;
      private boolean hasBuildEvent;
      private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent buildEvent_;
      public boolean hasBuildEvent() { return hasBuildEvent; }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent getBuildEvent() { return buildEvent_; }
      
      // optional .org.jetbrains.jpsservice.Message.Response.CompileMessage compile_message = 3;
      public static final int COMPILE_MESSAGE_FIELD_NUMBER = 3;
      private boolean hasCompileMessage;
      private org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage compileMessage_;
      public boolean hasCompileMessage() { return hasCompileMessage; }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage getCompileMessage() { return compileMessage_; }
      
      private void initFields() {
        responseType_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.Type.BUILD_EVENT;
        buildEvent_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.getDefaultInstance();
        compileMessage_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.getDefaultInstance();
      }
      public final boolean isInitialized() {
        if (!hasResponseType) return false;
        if (hasBuildEvent()) {
          if (!getBuildEvent().isInitialized()) return false;
        }
        if (hasCompileMessage()) {
          if (!getCompileMessage().isInitialized()) return false;
        }
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasResponseType()) {
          output.writeEnum(1, getResponseType().getNumber());
        }
        if (hasBuildEvent()) {
          output.writeMessage(2, getBuildEvent());
        }
        if (hasCompileMessage()) {
          output.writeMessage(3, getCompileMessage());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasResponseType()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, getResponseType().getNumber());
        }
        if (hasBuildEvent()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getBuildEvent());
        }
        if (hasCompileMessage()) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getCompileMessage());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.jetbrains.jps.api.JpsRemoteProto.Message.Response parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message.Response prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.jetbrains.jps.api.JpsRemoteProto.Message.Response, Builder> {
        private org.jetbrains.jps.api.JpsRemoteProto.Message.Response result;
        
        // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.Response.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Response();
          return builder;
        }
        
        protected org.jetbrains.jps.api.JpsRemoteProto.Message.Response internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new org.jetbrains.jps.api.JpsRemoteProto.Message.Response();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Response getDefaultInstanceForType() {
          return org.jetbrains.jps.api.JpsRemoteProto.Message.Response.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Response build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private org.jetbrains.jps.api.JpsRemoteProto.Message.Response buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Response buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          org.jetbrains.jps.api.JpsRemoteProto.Message.Response returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message.Response other) {
          if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.Response.getDefaultInstance()) return this;
          if (other.hasResponseType()) {
            setResponseType(other.getResponseType());
          }
          if (other.hasBuildEvent()) {
            mergeBuildEvent(other.getBuildEvent());
          }
          if (other.hasCompileMessage()) {
            mergeCompileMessage(other.getCompileMessage());
          }
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                org.jetbrains.jps.api.JpsRemoteProto.Message.Response.Type value = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.Type.valueOf(rawValue);
                if (value != null) {
                  setResponseType(value);
                }
                break;
              }
              case 18: {
                org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.newBuilder();
                if (hasBuildEvent()) {
                  subBuilder.mergeFrom(getBuildEvent());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setBuildEvent(subBuilder.buildPartial());
                break;
              }
              case 26: {
                org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.newBuilder();
                if (hasCompileMessage()) {
                  subBuilder.mergeFrom(getCompileMessage());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setCompileMessage(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        
        // required .org.jetbrains.jpsservice.Message.Response.Type response_type = 1;
        public boolean hasResponseType() {
          return result.hasResponseType();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.Type getResponseType() {
          return result.getResponseType();
        }
        public Builder setResponseType(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasResponseType = true;
          result.responseType_ = value;
          return this;
        }
        public Builder clearResponseType() {
          result.hasResponseType = false;
          result.responseType_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.Type.BUILD_EVENT;
          return this;
        }
        
        // optional .org.jetbrains.jpsservice.Message.Response.BuildEvent build_event = 2;
        public boolean hasBuildEvent() {
          return result.hasBuildEvent();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent getBuildEvent() {
          return result.getBuildEvent();
        }
        public Builder setBuildEvent(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasBuildEvent = true;
          result.buildEvent_ = value;
          return this;
        }
        public Builder setBuildEvent(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.Builder builderForValue) {
          result.hasBuildEvent = true;
          result.buildEvent_ = builderForValue.build();
          return this;
        }
        public Builder mergeBuildEvent(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent value) {
          if (result.hasBuildEvent() &&
              result.buildEvent_ != org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.getDefaultInstance()) {
            result.buildEvent_ =
              org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.newBuilder(result.buildEvent_).mergeFrom(value).buildPartial();
          } else {
            result.buildEvent_ = value;
          }
          result.hasBuildEvent = true;
          return this;
        }
        public Builder clearBuildEvent() {
          result.hasBuildEvent = false;
          result.buildEvent_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.BuildEvent.getDefaultInstance();
          return this;
        }
        
        // optional .org.jetbrains.jpsservice.Message.Response.CompileMessage compile_message = 3;
        public boolean hasCompileMessage() {
          return result.hasCompileMessage();
        }
        public org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage getCompileMessage() {
          return result.getCompileMessage();
        }
        public Builder setCompileMessage(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasCompileMessage = true;
          result.compileMessage_ = value;
          return this;
        }
        public Builder setCompileMessage(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.Builder builderForValue) {
          result.hasCompileMessage = true;
          result.compileMessage_ = builderForValue.build();
          return this;
        }
        public Builder mergeCompileMessage(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage value) {
          if (result.hasCompileMessage() &&
              result.compileMessage_ != org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.getDefaultInstance()) {
            result.compileMessage_ =
              org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.newBuilder(result.compileMessage_).mergeFrom(value).buildPartial();
          } else {
            result.compileMessage_ = value;
          }
          result.hasCompileMessage = true;
          return this;
        }
        public Builder clearCompileMessage() {
          result.hasCompileMessage = false;
          result.compileMessage_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.CompileMessage.getDefaultInstance();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message.Response)
      }
      
      static {
        defaultInstance = new Response(true);
        org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message.Response)
    }
    
    // required .org.jetbrains.jpsservice.Message.UUID session_id = 1;
    public static final int SESSION_ID_FIELD_NUMBER = 1;
    private boolean hasSessionId;
    private org.jetbrains.jps.api.JpsRemoteProto.Message.UUID sessionId_;
    public boolean hasSessionId() { return hasSessionId; }
    public org.jetbrains.jps.api.JpsRemoteProto.Message.UUID getSessionId() { return sessionId_; }
    
    // required .org.jetbrains.jpsservice.Message.Type message_type = 2;
    public static final int MESSAGE_TYPE_FIELD_NUMBER = 2;
    private boolean hasMessageType;
    private org.jetbrains.jps.api.JpsRemoteProto.Message.Type messageType_;
    public boolean hasMessageType() { return hasMessageType; }
    public org.jetbrains.jps.api.JpsRemoteProto.Message.Type getMessageType() { return messageType_; }
    
    // optional .org.jetbrains.jpsservice.Message.Request request = 3;
    public static final int REQUEST_FIELD_NUMBER = 3;
    private boolean hasRequest;
    private org.jetbrains.jps.api.JpsRemoteProto.Message.Request request_;
    public boolean hasRequest() { return hasRequest; }
    public org.jetbrains.jps.api.JpsRemoteProto.Message.Request getRequest() { return request_; }
    
    // optional .org.jetbrains.jpsservice.Message.Response response = 4;
    public static final int RESPONSE_FIELD_NUMBER = 4;
    private boolean hasResponse;
    private org.jetbrains.jps.api.JpsRemoteProto.Message.Response response_;
    public boolean hasResponse() { return hasResponse; }
    public org.jetbrains.jps.api.JpsRemoteProto.Message.Response getResponse() { return response_; }
    
    // optional .org.jetbrains.jpsservice.Message.Failure failure = 5;
    public static final int FAILURE_FIELD_NUMBER = 5;
    private boolean hasFailure;
    private org.jetbrains.jps.api.JpsRemoteProto.Message.Failure failure_;
    public boolean hasFailure() { return hasFailure; }
    public org.jetbrains.jps.api.JpsRemoteProto.Message.Failure getFailure() { return failure_; }
    
    private void initFields() {
      sessionId_ = org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.getDefaultInstance();
      messageType_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Type.REQUEST;
      request_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.getDefaultInstance();
      response_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.getDefaultInstance();
      failure_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Failure.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasSessionId) return false;
      if (!hasMessageType) return false;
      if (!getSessionId().isInitialized()) return false;
      if (hasRequest()) {
        if (!getRequest().isInitialized()) return false;
      }
      if (hasResponse()) {
        if (!getResponse().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasSessionId()) {
        output.writeMessage(1, getSessionId());
      }
      if (hasMessageType()) {
        output.writeEnum(2, getMessageType().getNumber());
      }
      if (hasRequest()) {
        output.writeMessage(3, getRequest());
      }
      if (hasResponse()) {
        output.writeMessage(4, getResponse());
      }
      if (hasFailure()) {
        output.writeMessage(5, getFailure());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSessionId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSessionId());
      }
      if (hasMessageType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getMessageType().getNumber());
      }
      if (hasRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRequest());
      }
      if (hasResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getResponse());
      }
      if (hasFailure()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getFailure());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.jetbrains.jps.api.JpsRemoteProto.Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.jetbrains.jps.api.JpsRemoteProto.Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.jetbrains.jps.api.JpsRemoteProto.Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.jetbrains.jps.api.JpsRemoteProto.Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.jetbrains.jps.api.JpsRemoteProto.Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.jetbrains.jps.api.JpsRemoteProto.Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.jetbrains.jps.api.JpsRemoteProto.Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.jetbrains.jps.api.JpsRemoteProto.Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.jetbrains.jps.api.JpsRemoteProto.Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.jetbrains.jps.api.JpsRemoteProto.Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.jps.api.JpsRemoteProto.Message prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.jetbrains.jps.api.JpsRemoteProto.Message, Builder> {
      private org.jetbrains.jps.api.JpsRemoteProto.Message result;
      
      // Construct using org.jetbrains.jps.api.JpsRemoteProto.Message.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.jetbrains.jps.api.JpsRemoteProto.Message();
        return builder;
      }
      
      protected org.jetbrains.jps.api.JpsRemoteProto.Message internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.jetbrains.jps.api.JpsRemoteProto.Message();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public org.jetbrains.jps.api.JpsRemoteProto.Message getDefaultInstanceForType() {
        return org.jetbrains.jps.api.JpsRemoteProto.Message.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.jetbrains.jps.api.JpsRemoteProto.Message build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.jetbrains.jps.api.JpsRemoteProto.Message buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.jetbrains.jps.api.JpsRemoteProto.Message buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.jetbrains.jps.api.JpsRemoteProto.Message returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(org.jetbrains.jps.api.JpsRemoteProto.Message other) {
        if (other == org.jetbrains.jps.api.JpsRemoteProto.Message.getDefaultInstance()) return this;
        if (other.hasSessionId()) {
          mergeSessionId(other.getSessionId());
        }
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        if (other.hasFailure()) {
          mergeFailure(other.getFailure());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.newBuilder();
              if (hasSessionId()) {
                subBuilder.mergeFrom(getSessionId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSessionId(subBuilder.buildPartial());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              org.jetbrains.jps.api.JpsRemoteProto.Message.Type value = org.jetbrains.jps.api.JpsRemoteProto.Message.Type.valueOf(rawValue);
              if (value != null) {
                setMessageType(value);
              }
              break;
            }
            case 26: {
              org.jetbrains.jps.api.JpsRemoteProto.Message.Request.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.newBuilder();
              if (hasRequest()) {
                subBuilder.mergeFrom(getRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRequest(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.jetbrains.jps.api.JpsRemoteProto.Message.Response.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.newBuilder();
              if (hasResponse()) {
                subBuilder.mergeFrom(getResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResponse(subBuilder.buildPartial());
              break;
            }
            case 42: {
              org.jetbrains.jps.api.JpsRemoteProto.Message.Failure.Builder subBuilder = org.jetbrains.jps.api.JpsRemoteProto.Message.Failure.newBuilder();
              if (hasFailure()) {
                subBuilder.mergeFrom(getFailure());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFailure(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .org.jetbrains.jpsservice.Message.UUID session_id = 1;
      public boolean hasSessionId() {
        return result.hasSessionId();
      }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.UUID getSessionId() {
        return result.getSessionId();
      }
      public Builder setSessionId(org.jetbrains.jps.api.JpsRemoteProto.Message.UUID value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSessionId = true;
        result.sessionId_ = value;
        return this;
      }
      public Builder setSessionId(org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.Builder builderForValue) {
        result.hasSessionId = true;
        result.sessionId_ = builderForValue.build();
        return this;
      }
      public Builder mergeSessionId(org.jetbrains.jps.api.JpsRemoteProto.Message.UUID value) {
        if (result.hasSessionId() &&
            result.sessionId_ != org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.getDefaultInstance()) {
          result.sessionId_ =
            org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.newBuilder(result.sessionId_).mergeFrom(value).buildPartial();
        } else {
          result.sessionId_ = value;
        }
        result.hasSessionId = true;
        return this;
      }
      public Builder clearSessionId() {
        result.hasSessionId = false;
        result.sessionId_ = org.jetbrains.jps.api.JpsRemoteProto.Message.UUID.getDefaultInstance();
        return this;
      }
      
      // required .org.jetbrains.jpsservice.Message.Type message_type = 2;
      public boolean hasMessageType() {
        return result.hasMessageType();
      }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Type getMessageType() {
        return result.getMessageType();
      }
      public Builder setMessageType(org.jetbrains.jps.api.JpsRemoteProto.Message.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMessageType = true;
        result.messageType_ = value;
        return this;
      }
      public Builder clearMessageType() {
        result.hasMessageType = false;
        result.messageType_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Type.REQUEST;
        return this;
      }
      
      // optional .org.jetbrains.jpsservice.Message.Request request = 3;
      public boolean hasRequest() {
        return result.hasRequest();
      }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Request getRequest() {
        return result.getRequest();
      }
      public Builder setRequest(org.jetbrains.jps.api.JpsRemoteProto.Message.Request value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRequest = true;
        result.request_ = value;
        return this;
      }
      public Builder setRequest(org.jetbrains.jps.api.JpsRemoteProto.Message.Request.Builder builderForValue) {
        result.hasRequest = true;
        result.request_ = builderForValue.build();
        return this;
      }
      public Builder mergeRequest(org.jetbrains.jps.api.JpsRemoteProto.Message.Request value) {
        if (result.hasRequest() &&
            result.request_ != org.jetbrains.jps.api.JpsRemoteProto.Message.Request.getDefaultInstance()) {
          result.request_ =
            org.jetbrains.jps.api.JpsRemoteProto.Message.Request.newBuilder(result.request_).mergeFrom(value).buildPartial();
        } else {
          result.request_ = value;
        }
        result.hasRequest = true;
        return this;
      }
      public Builder clearRequest() {
        result.hasRequest = false;
        result.request_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Request.getDefaultInstance();
        return this;
      }
      
      // optional .org.jetbrains.jpsservice.Message.Response response = 4;
      public boolean hasResponse() {
        return result.hasResponse();
      }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Response getResponse() {
        return result.getResponse();
      }
      public Builder setResponse(org.jetbrains.jps.api.JpsRemoteProto.Message.Response value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder setResponse(org.jetbrains.jps.api.JpsRemoteProto.Message.Response.Builder builderForValue) {
        result.hasResponse = true;
        result.response_ = builderForValue.build();
        return this;
      }
      public Builder mergeResponse(org.jetbrains.jps.api.JpsRemoteProto.Message.Response value) {
        if (result.hasResponse() &&
            result.response_ != org.jetbrains.jps.api.JpsRemoteProto.Message.Response.getDefaultInstance()) {
          result.response_ =
            org.jetbrains.jps.api.JpsRemoteProto.Message.Response.newBuilder(result.response_).mergeFrom(value).buildPartial();
        } else {
          result.response_ = value;
        }
        result.hasResponse = true;
        return this;
      }
      public Builder clearResponse() {
        result.hasResponse = false;
        result.response_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Response.getDefaultInstance();
        return this;
      }
      
      // optional .org.jetbrains.jpsservice.Message.Failure failure = 5;
      public boolean hasFailure() {
        return result.hasFailure();
      }
      public org.jetbrains.jps.api.JpsRemoteProto.Message.Failure getFailure() {
        return result.getFailure();
      }
      public Builder setFailure(org.jetbrains.jps.api.JpsRemoteProto.Message.Failure value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFailure = true;
        result.failure_ = value;
        return this;
      }
      public Builder setFailure(org.jetbrains.jps.api.JpsRemoteProto.Message.Failure.Builder builderForValue) {
        result.hasFailure = true;
        result.failure_ = builderForValue.build();
        return this;
      }
      public Builder mergeFailure(org.jetbrains.jps.api.JpsRemoteProto.Message.Failure value) {
        if (result.hasFailure() &&
            result.failure_ != org.jetbrains.jps.api.JpsRemoteProto.Message.Failure.getDefaultInstance()) {
          result.failure_ =
            org.jetbrains.jps.api.JpsRemoteProto.Message.Failure.newBuilder(result.failure_).mergeFrom(value).buildPartial();
        } else {
          result.failure_ = value;
        }
        result.hasFailure = true;
        return this;
      }
      public Builder clearFailure() {
        result.hasFailure = false;
        result.failure_ = org.jetbrains.jps.api.JpsRemoteProto.Message.Failure.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.jetbrains.jpsservice.Message)
    }
    
    static {
      defaultInstance = new Message(true);
      org.jetbrains.jps.api.JpsRemoteProto.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.jetbrains.jpsservice.Message)
  }
  
  
  static {
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
