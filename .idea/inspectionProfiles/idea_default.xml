<component name="InspectionProjectProfileManager">
  <profile version="1.0">
    <option name="myName" value="idea.default" />
    <inspection_tool class="03c8b094-627d-3aaa-8d8b-4a66542826cd" enabled="true" level="WARNING" enabled_by_default="false">
      <scope name="Production" level="WARNING" enabled="true" />
    </inspection_tool>
    <inspection_tool class="AbstractMethodCallInConstructor" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="AndroidDomInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidElementNotAllowed" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintAdapterViewChildren" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintAllowBackup" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintAlwaysShowAction" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintButtonCase" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintButtonOrder" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintButtonStyle" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintCommitPrefEdits" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintContentDescription" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintCutPasteId" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintDisableBaselineAlignment" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintDrawAllocation" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintDuplicateActivity" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintDuplicateDefinition" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintDuplicateIds" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintDuplicateIncludedIds" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintDuplicateUsesFeature" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintEnforceUTF8" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintExportedContentProvider" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintExportedReceiver" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintExportedService" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintExtraText" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintExtraTranslation" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintGifUsage" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintGrantAllUris" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintGridLayout" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintHardcodedDebugMode" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintHardcodedText" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconColors" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconDensities" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconDipSize" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconDuplicates" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconDuplicatesConfig" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconExtension" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconLauncherShape" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconLocation" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconMissingDensityFolder" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconMixedNinePatch" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconNoDpi" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIconXmlAndPng" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintIllegalResourceRef" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintInOrMmUsage" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintInconsistentArrays" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintInconsistentLayout" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintInefficientWeight" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintInlinedApi" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintInnerclassSeparator" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintInvalidId" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintLabelFor" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintLibraryCustomView" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintLocalSuppress" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintManifestOrder" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintMenuTitle" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintMergeRootFrame" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintMissingApplicationIcon" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintMissingId" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintMissingPrefix" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintMissingQuantity" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintMissingTranslation" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintMissingVersion" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintMultipleUsesSdk" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintNestedScrolling" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintNestedWeights" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintNewApi" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintNotSibling" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintObsoleteLayoutParam" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintOldTargetApi" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintOrientation" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintOverdraw" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintOverride" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintPackagedPrivateKey" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintPrivateResource" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintProguard" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintProguardSplit" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintProtectedPermissions" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintPxUsage" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintRegistered" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintRequiredSize" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintResAuto" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintResourceAsColor" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintScrollViewCount" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintScrollViewSize" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintSdCardPath" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintServiceCast" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintSetJavaScriptEnabled" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintShowToast" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintSmallSp" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintSpUsage" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintStateListReachable" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintStringFormatCount" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintStringFormatInvalid" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintStringFormatMatches" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintStyleCycle" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintSuspicious0dp" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintSuspiciousImport" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintTextFields" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintTextViewEdits" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintTooDeepLayout" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintTooManyViews" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintTypographyDashes" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintTypographyEllipsis" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintTypographyFractions" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintTypographyOther" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintTypos" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUniquePermission" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUnknownId" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUnknownIdInLayout" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUnlocalizedSms" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUnusedQuantity" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUnusedResources" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUseCompoundDrawables" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUseSparseArrays" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUseValueOf" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUselessLeaf" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUselessParent" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintUsesMinSdkAttributes" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintWorldReadableFiles" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintWorldWriteableFiles" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintWrongCase" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidLintWrongFolder" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidLintWrongViewCast" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidMissingOnClickHandler" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AndroidNonConstantResIdsInSwitch" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="AndroidUnknownAttribute" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="Anonymous2MethodRef" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AppEngineForbiddenCode" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="ArchaicSystemPropertyAccess" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ArgNamesErrorsInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="ArgNamesWarningsInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="AroundAdviceStyleInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ArraysAsListWithZeroOrOneArgument" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="INFORMATION" enabled="true" editorAttributes="INFORMATION_ATTRIBUTES" />
    </inspection_tool>
    <inspection_tool class="AssignmentToForLoopParameter" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_checkForeachParameters" value="false" />
    </inspection_tool>
    <inspection_tool class="AssignmentToStaticFieldFromInstanceMethod" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false" />
    </inspection_tool>
    <inspection_tool class="BadExpressionStatementJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="BindingAnnotationWithoutInject" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="BlockingMethodInNonBlockingContext" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false" />
    </inspection_tool>
    <inspection_tool class="BooleanLiteralArgument" enabled="false" level="INFO" enabled_by_default="false" />
    <inspection_tool class="BooleanMethodIsAlwaysInverted" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="BoundedWildcard" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="REPORT_INVARIANT_CLASSES" value="false" />
      <option name="REPORT_PRIVATE_METHODS" value="false" />
    </inspection_tool>
    <inspection_tool class="BpmnConfigDomInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="BuildoutUnresolvedPartInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="BvConfigDomInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="BvConstraintMappingsInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CallerJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="CastConflictsWithInstanceof" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="CastToIncompatibleInterface" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="CdiDecoratorInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CdiDisposerMethodInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CdiDomBeans" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="CdiInjectInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CdiInjectionPointsInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="CdiInterceptorInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CdiManagedBeanInconsistencyInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CdiNormalScopeInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="CdiObservesInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CdiSpecializesInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CdiStereotypeInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CdiStereotypeRestrictionsInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CdiTypedAnnotationInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CdiUnproxyableBeanTypesInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="CfmlFileReference" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="CfmlReferenceInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ChainedEquality" enabled="false" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="CheckNodeTest" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="CloneCallsSuperClone" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="CloneDeclaresCloneNotSupported" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="CodeBlock2Expr" enabled="true" level="INFORMATION" enabled_by_default="true" />
    <inspection_tool class="CommaExpressionJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ComparisonOfShortAndChar" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ConditionalBreakInInfiniteLoop" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="noConversionToDoWhile" value="true" />
    </inspection_tool>
    <inspection_tool class="ConflictingAnnotations" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ConfusingOctalEscape" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ConstantConditionalExpression" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false" />
    </inspection_tool>
    <inspection_tool class="ConstantConditionalExpressionJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ConstantConditions" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="true">
        <option name="SUGGEST_NULLABLE_ANNOTATIONS" value="false" />
        <option name="DONT_REPORT_TRUE_ASSERT_STATEMENTS" value="false" />
        <option name="REPORT_UNSOUND_WARNINGS" value="false" />
      </scope>
      <scope name="runtime.classes" level="WARNING" enabled="false">
        <option name="SUGGEST_NULLABLE_ANNOTATIONS" value="false" />
        <option name="DONT_REPORT_TRUE_ASSERT_STATEMENTS" value="false" />
      </scope>
      <option name="SUGGEST_NULLABLE_ANNOTATIONS" value="false" />
      <option name="DONT_REPORT_TRUE_ASSERT_STATEMENTS" value="false" />
    </inspection_tool>
    <inspection_tool class="ConstantIfStatement" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false" />
    </inspection_tool>
    <inspection_tool class="ConstantIfStatementJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ConstraintValidatorCreator" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ContinueOrBreakFromFinallyBlock" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ContinueOrBreakFromFinallyBlockJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="Convert2Lambda" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="android" level="WARNING" enabled="false" />
      <option name="reportNotAnnotatedInterfaces" value="false" />
    </inspection_tool>
    <inspection_tool class="Convert2MethodRef" enabled="true" level="INFORMATION" enabled_by_default="true" />
    <inspection_tool class="CovariantCompareTo" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="CovariantEquals" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="DeclareParentsInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="DeprecatedGemInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="DialogTitleCapitalization" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false" />
    </inspection_tool>
    <inspection_tool class="DjangoBrokenLineCommentInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="DjangoCloseTagInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="DjangoUnresolvedFilterInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="DjangoUnresolvedLoadInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="DjangoUnresolvedStaticReferenceInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="DjangoUnresolvedTagInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="DjangoUnresolvedTemplateReferenceInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="DoubleCheckedLocking" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreOnVolatileVariables" value="true" />
    </inspection_tool>
    <inspection_tool class="DuplicateBooleanBranch" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="DuplicateCaseLabelJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="DuplicatedBlockNamesInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="EmptyStatementBody" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_reportEmptyBlocks" value="true" />
      <option name="commentsAreContent" value="true" />
    </inspection_tool>
    <inspection_tool class="EmptyStatementBodyJS" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="m_reportEmptyBlocks" value="false" />
    </inspection_tool>
    <inspection_tool class="EnumSwitchStatementWhichMissesCases" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreSwitchStatementsWithDefault" value="true" />
    </inspection_tool>
    <inspection_tool class="EqualsWithItself" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false" />
    </inspection_tool>
    <inspection_tool class="ExceptionCaughtLocallyJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ExceptionNameDoesntEndWithException" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ExtendsTagPositionInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="FallthroughInSwitchStatementJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="FieldAccessedSynchronizedAndUnsynchronized" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="countGettersAndSetters" value="false" />
    </inspection_tool>
    <inspection_tool class="FieldHidesSuperclassField" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignoreInvisibleFields" value="true" />
    </inspection_tool>
    <inspection_tool class="FieldMayBeStatic" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="Finalize" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreTrivialFinalizers" value="true" />
    </inspection_tool>
    <inspection_tool class="ForLoopReplaceableByWhile" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignoreLoopsWithoutConditions" value="false" />
    </inspection_tool>
    <inspection_tool class="ForLoopThatDoesntUseLoopVariable" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="GemInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="Geronimo" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="GlassFish" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="GrUnresolvedAccess" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="GtkPreferredJComboBoxRenderer" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="Guava" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="HardcodedActionUrl" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="HardwiredNamespacePrefix" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="IOResource" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoredTypesString" value="java.io.ByteArrayOutputStream,java.io.ByteArrayInputStream,java.io.StringBufferInputStream,java.io.CharArrayWriter,java.io.CharArrayReader,java.io.StringWriter,java.io.StringReader,io.netty.buffer.ByteBufOutputStream,com.intellij.openapi.util.io.BufferExposingByteArrayOutputStream" />
      <option name="insideTryAllowed" value="false" />
    </inspection_tool>
    <inspection_tool class="IfCanBeSwitch" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="minimumBranches" value="3" />
      <option name="suggestIntSwitches" value="false" />
      <option name="suggestEnumSwitches" value="false" />
    </inspection_tool>
    <inspection_tool class="IfStatementWithIdenticalBranches" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="IgnoreResultOfCall" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_reportAllNonLibraryCalls" value="false" />
      <option name="callCheckString" value="java.io.File,.*,java.io.InputStream,read|skip|available|markSupported,java.io.Writer,read|skip|ready|markSupported,java.lang.Boolean,.*,java.lang.Byte,.*,java.lang.Character,.*,java.lang.Double,.*,java.lang.Float,.*,java.lang.Integer,.*,java.lang.Long,.*,java.lang.Math,.*,java.lang.Object,equals|hashCode|toString,java.lang.Short,.*,java.lang.StrictMath,.*,java.lang.String,.*,java.math.BigInteger,.*,java.math.BigDecimal,.*,java.net.InetAddress,.*,java.net.URI,.*,java.util.UUID,.*,java.util.regex.Matcher,pattern|toMatchResult|start|end|group|groupCount|matches|find|lookingAt|quoteReplacement|replaceAll|replaceFirst|regionStart|regionEnd|hasTransparantBounds|hasAnchoringBounds|hitEnd|requireEnd,java.util.regex.Pattern,.*,com.intellij.openapi.util.LowMemoryWatcher,register,com.intellij.codeInsight.FileModificationService,preparePsiElementForWrite" />
    </inspection_tool>
    <inspection_tool class="ImplicitDefaultCharsetUsage" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ImplicitTypeConversion" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="BITS" value="1720" />
      <option name="FLAG_EXPLICIT_CONVERSION" value="true" />
      <option name="IGNORE_NODESET_TO_BOOLEAN_VIA_STRING" value="true" />
    </inspection_tool>
    <inspection_tool class="IncompatibleMaskJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="IndexZeroUsage" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="InfiniteLoopJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="InfiniteRecursionJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="InspectionDescriptionNotFoundInspection" enabled="true" level="ERROR" enabled_by_default="true" />
    <inspection_tool class="InstanceofCatchParameter" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="InstanceofIncompatibleInterface" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="InterceptionAnnotationWithoutRuntimeRetention" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="InvalidImplementedBy" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="InvalidProvidedBy" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="InvalidRequestParameters" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JavadocDeclaration" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="IGNORE_DEPRECATED_ELEMENTS" value="true" />
    </inspection_tool>
    <inspection_tool class="JBoss" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="JSDeprecatedSymbols" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
    <inspection_tool class="JSDuplicatedDeclaration" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSFieldCanBeLocal" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSImplicitlyInternalDeclaration" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSLastCommaInArrayLiteral" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSLastCommaInObjectLiteral" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="JSMethodCanBeStatic" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSMismatchedCollectionQueryUpdate" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="queries" value="trace,write" />
      <option name="updates" value="pop,push,shift,splice,unshift" />
    </inspection_tool>
    <inspection_tool class="JSPotentiallyInvalidConstructorUsage" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="myConsiderUppercaseFunctionsToBeConstructors" value="true" />
    </inspection_tool>
    <inspection_tool class="JSPotentiallyInvalidTargetOfIndexedPropertyAccess" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSPotentiallyInvalidUsageOfThis" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSReferencingMutableVariableFromClosure" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSSuspiciousNameCombination" enabled="false" level="WARNING" enabled_by_default="false">
      <group names="x,width,left,right" />
      <group names="y,height,top,bottom" />
      <exclude classes="Math" />
    </inspection_tool>
    <inspection_tool class="JSUndeclaredVariable" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
    <inspection_tool class="JSUnfilteredForInLoop" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSUnnecessarySemicolon" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSUnresolvedFunction" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
    <inspection_tool class="JSUnresolvedLibraryURL" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSUnresolvedVariable" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
    <inspection_tool class="JSUntypedDeclaration" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSUnusedGlobalSymbols" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSUnusedLocalSymbols" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JSValidateJSON" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="JSValidateTypes" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
    <inspection_tool class="JUnitTestClassNamingConvention" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_regex" value="[A-Z][A-Za-z0-9_]*Test" />
      <option name="m_minLength" value="8" />
      <option name="m_maxLength" value="64" />
    </inspection_tool>
    <inspection_tool class="Java8CollectionRemoveIf" enabled="true" level="INFORMATION" enabled_by_default="true" />
    <inspection_tool class="Java8CollectionsApi" enabled="true" level="INFORMATION" enabled_by_default="true" />
    <inspection_tool class="Java8ListSort" enabled="true" level="INFORMATION" enabled_by_default="true" />
    <inspection_tool class="Java8MapApi" enabled="true" level="INFORMATION" enabled_by_default="true" />
    <inspection_tool class="Java8ReplaceMapGet" enabled="true" level="INFORMATION" enabled_by_default="true" />
    <inspection_tool class="JavaDoc" enabled="true" level="WARNING" enabled_by_default="false">
      <scope name="Tests" level="WARNING" enabled="false">
        <option name="TOP_LEVEL_CLASS_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="" />
          </value>
        </option>
        <option name="INNER_CLASS_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="" />
          </value>
        </option>
        <option name="METHOD_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="@return@param@throws or @exception" />
          </value>
        </option>
        <option name="FIELD_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="" />
          </value>
        </option>
        <option name="IGNORE_DEPRECATED" value="false" />
        <option name="IGNORE_JAVADOC_PERIOD" value="true" />
        <option name="IGNORE_DUPLICATED_THROWS" value="false" />
        <option name="IGNORE_POINT_TO_ITSELF" value="false" />
        <option name="myAdditionalJavadocTags" value="" />
      </scope>
      <scope name="idea openapi" level="WARNING" enabled="true">
        <option name="TOP_LEVEL_CLASS_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="" />
          </value>
        </option>
        <option name="INNER_CLASS_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="" />
          </value>
        </option>
        <option name="METHOD_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="@return@param@throws or @exception" />
          </value>
        </option>
        <option name="FIELD_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="" />
          </value>
        </option>
        <option name="IGNORE_DEPRECATED" value="true" />
        <option name="IGNORE_JAVADOC_PERIOD" value="true" />
        <option name="IGNORE_DUPLICATED_THROWS" value="false" />
        <option name="IGNORE_POINT_TO_ITSELF" value="false" />
        <option name="myAdditionalJavadocTags" value="" />
      </scope>
      <scope name="runtime.classes" level="WARNING" enabled="true">
        <option name="TOP_LEVEL_CLASS_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="" />
          </value>
        </option>
        <option name="INNER_CLASS_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="" />
          </value>
        </option>
        <option name="METHOD_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="@return@param@throws or @exception" />
          </value>
        </option>
        <option name="FIELD_OPTIONS">
          <value>
            <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
            <option name="REQUIRED_TAGS" value="" />
          </value>
        </option>
        <option name="IGNORE_DEPRECATED" value="false" />
        <option name="IGNORE_JAVADOC_PERIOD" value="true" />
        <option name="IGNORE_DUPLICATED_THROWS" value="false" />
        <option name="IGNORE_POINT_TO_ITSELF" value="false" />
        <option name="myAdditionalJavadocTags" value="" />
      </scope>
      <option name="TOP_LEVEL_CLASS_OPTIONS">
        <value>
          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
          <option name="REQUIRED_TAGS" value="" />
        </value>
      </option>
      <option name="INNER_CLASS_OPTIONS">
        <value>
          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
          <option name="REQUIRED_TAGS" value="" />
        </value>
      </option>
      <option name="METHOD_OPTIONS">
        <value>
          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
          <option name="REQUIRED_TAGS" value="@return@param@throws or @exception" />
        </value>
      </option>
      <option name="FIELD_OPTIONS">
        <value>
          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
          <option name="REQUIRED_TAGS" value="" />
        </value>
      </option>
      <option name="IGNORE_DEPRECATED" value="false" />
      <option name="IGNORE_JAVADOC_PERIOD" value="true" />
      <option name="IGNORE_DUPLICATED_THROWS" value="false" />
      <option name="IGNORE_POINT_TO_ITSELF" value="false" />
      <option name="myAdditionalJavadocTags" value="" />
    </inspection_tool>
    <inspection_tool class="JavaFxDefaultTag" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JavaFxUnresolvedFxIdReference" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JavaFxUnresolvedStyleClassReference" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JavaFxUnusedImports" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="JavadocReference" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="ERROR" enabled="false" />
      <scope name="idea openapi" level="WARNING" enabled="true">
        <option name="REPORT_INACCESSIBLE" value="false" />
      </scope>
      <scope name="runtime.classes" level="ERROR" enabled="true">
        <option name="REPORT_INACCESSIBLE" value="false" />
      </scope>
      <option name="REPORT_INACCESSIBLE" value="false" />
    </inspection_tool>
    <inspection_tool class="LambdaUnfriendlyMethodOverload" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="LiftReturnOrAssignment" enabled="true" level="INFORMATION" enabled_by_default="true" />
    <inspection_tool class="LocalVariableName" enabled="true" level="WEAK WARNING" enabled_by_default="true">
      <option name="namePattern" value="[a-z][A-Za-z\d_]*" />
    </inspection_tool>
    <inspection_tool class="LoggerInitializedWithForeignClass" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="loggerClassName" value="org.apache.log4j.Logger,org.slf4j.LoggerFactory,org.apache.commons.logging.LogFactory,java.util.logging.Logger,org.apache.logging.log4j.LogManager,com.intellij.openapi.diagnostic.Logger" />
      <option name="loggerFactoryMethodName" value="getLogger,getLogger,getLog,getLogger,getLogger,getInstance" />
    </inspection_tool>
    <inspection_tool class="LoopStatementThatDoesntLoopJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="MakoArgumentListInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="MavenDuplicateDependenciesInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="MavenModelInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="MethodMayBeStatic" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_onlyPrivateOrFinal" value="true" />
      <option name="m_ignoreEmptyMethods" value="true" />
    </inspection_tool>
    <inspection_tool class="MethodNameSameAsParentName" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MethodNamesDifferOnlyByCase" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MethodOverloadsParentMethod" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MethodOverridesStaticMethod" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MinMaxValuesInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="MinitestFrameworkSupportInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="MisorderedAssertEqualsParameters" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MissingDeprecatedAnnotation" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="warnOnMissingJavadoc" value="true" />
    </inspection_tool>
    <inspection_tool class="MissingOverrideAnnotation" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreObjectMethods" value="true" />
      <option name="ignoreAnonymousClassMethods" value="false" />
    </inspection_tool>
    <inspection_tool class="MisspelledCompareTo" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MisspelledEquals" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MisspelledHashcode" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MisspelledSetUp" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MisspelledTearDown" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MisspelledToString" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="MultipleBindingAnnotations" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="MultipleInjectedConstructorsForClass" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="MultipleTypedDeclaration" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NestedSynchronizedStatement" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NoExplicitFinalizeCalls" enabled="true" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="NonExceptionNameEndsWithException" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NonStaticFinalLogger" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false">
        <option name="loggerClassName" value="java.util.logging.Logger" />
      </scope>
      <option name="loggerClassName" value="java.util.logging.Logger" />
    </inspection_tool>
    <inspection_tool class="NonSynchronizedMethodOverridesSynchronizedMethod" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="NullableProblems" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="REPORT_NULLABLE_METHOD_OVERRIDES_NOTNULL" value="true" />
      <option name="REPORT_NOT_ANNOTATED_METHOD_OVERRIDES_NOTNULL" value="true" />
      <option name="REPORT_NOTNULL_PARAMETER_OVERRIDES_NULLABLE" value="true" />
      <option name="REPORT_NOT_ANNOTATED_PARAMETER_OVERRIDES_NOTNULL" value="true" />
      <option name="REPORT_NOT_ANNOTATED_GETTER" value="true" />
      <option name="IGNORE_EXTERNAL_SUPER_NOTNULL" value="true" />
      <option name="REPORT_NOT_ANNOTATED_SETTER_PARAMETER" value="true" />
      <option name="REPORT_ANNOTATION_NOT_PROPAGATED_TO_OVERRIDERS" value="true" />
      <option name="REPORT_NULLS_PASSED_TO_NON_ANNOTATED_METHOD" value="true" />
    </inspection_tool>
    <inspection_tool class="ObjectEqualsNull" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ObjectNotify" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ObjectToString" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="IGNORE_NONNLS" value="true" />
      <option name="IGNORE_EXCEPTION" value="true" />
      <option name="IGNORE_ASSERT" value="true" />
      <option name="IGNORE_TOSTRING" value="true" />
    </inspection_tool>
    <inspection_tool class="ObsoleteCollection" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreRequiredObsoleteCollectionTypes" value="false" />
    </inspection_tool>
    <inspection_tool class="OctalIntegerJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="PackageName" enabled="true" level="WEAK WARNING" enabled_by_default="true">
      <option name="namePattern" value="[a-z_][a-z\d_]*(\.[a-z_][a-zA-Z\d_]*)*" />
    </inspection_tool>
    <inspection_tool class="PageflowModelInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="PagesModelInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="PluginXmlValidity" enabled="true" level="ERROR" enabled_by_default="true">
      <option name="myRegistrationCheckIgnoreClassList">
        <set>
          <option value="com.intellij.ide.customization.UtmIdeUrlTrackingParametersProvider" />
          <option value="com.intellij.openapi.application.IdeUrlTrackingParametersProvider" />
        </set>
      </option>
      <option name="PLUGINS_MODULES">
        <modules-set>
          <module name="intellij.platform.analysis" />
          <module name="intellij.platform.builtInServer" />
          <module name="intellij.platform.core" />
          <module name="intellij.platform.diff" />
          <module name="intellij.platform.vcs.dvcs" />
          <module name="intellij.platform.editor" />
          <module name="intellij.platform.externalSystem" />
          <module name="intellij.platform.indexing" />
          <module name="intellij.platform.jps.model" />
          <module name="intellij.platform.lang" />
          <module name="intellij.platform.lvcs" />
          <module name="intellij.platform.ide" />
          <module name="intellij.platform.projectModel" />
          <module name="intellij.platform.remoteServers.agent.rt" />
          <module name="intellij.platform.remoteServers" />
          <module name="intellij.platform.tasks" />
          <module name="intellij.platform.usageView" />
          <module name="intellij.platform.vcs.core" />
          <module name="intellij.platform.vcs" />
          <module name="intellij.platform.vcs.log" />
          <module name="intellij.platform.vcs.log.graph" />
          <module name="intellij.platform.debugger" />
          <module name="intellij.xml.analysis" />
          <module name="intellij.xml" />
          <module name="intellij.xml.psi" />
          <module name="intellij.xml.structureView" />
          <module name="intellij.platform.analysis.impl" />
          <module name="intellij.platform.builtInServer.impl" />
          <module name="intellij.platform.core.impl" />
          <module name="intellij.platform.credentialStore" />
          <module name="intellij.platform.diff.impl" />
          <module name="intellij.platform.vcs.dvcs.impl" />
          <module name="intellij.platform.editor.ex" />
          <module name="intellij.platform.images" />
          <module name="intellij.platform.indexing.impl" />
          <module name="intellij.json" />
          <module name="intellij.platform.lang.impl" />
          <module name="intellij.platform.lvcs.impl" />
          <module name="intellij.platform.ide.impl" />
          <module name="intellij.platform.projectModel.impl" />
          <module name="intellij.platform.scriptDebugger.protocolReaderRuntime" />
          <module name="intellij.regexp" />
          <module name="intellij.relaxng" />
          <module name="intellij.platform.remoteServers.impl" />
          <module name="intellij.platform.scriptDebugger.backend" />
          <module name="intellij.platform.scriptDebugger.ui" />
          <module name="intellij.platform.smRunner" />
          <module name="intellij.spellchecker" />
          <module name="intellij.platform.structureView.impl" />
          <module name="intellij.platform.tasks.impl" />
          <module name="intellij.platform.testRunner" />
          <module name="intellij.platform.vcs.impl" />
          <module name="intellij.platform.vcs.log.graph.impl" />
          <module name="intellij.platform.vcs.log.impl" />
          <module name="intellij.platform.debugger.impl" />
          <module name="intellij.xml.analysis.impl" />
          <module name="intellij.xml.psi.impl" />
          <module name="intellij.xml.structureView.impl" />
          <module name="intellij.xml.impl" />
          <module name="intellij.platform.configurationStore.impl" />
          <module name="intellij.xml.dom.impl" />
          <module name="intellij.platform.webide.impl" />
          <module name="intellij.platform.ssh" />
          <module name="intellij.platform.ssh.attach" />
          <module name="intellij.xml.dom" />
          <module name="intellij.platform.webide" />
          <module name="intellij.platform.util" />
          <module name="intellij.platform.util.rt" />
          <module name="intellij.platform.util.classLoader" />
          <module name="intellij.platform.extensions" />
          <module name="intellij.platform.bootstrap" />
          <module name="intellij.java.guiForms.rt" />
          <module name="intellij.platform.icons" />
          <module name="intellij.platform.boot" />
          <module name="intellij.platform.resources" />
          <module name="intellij.platform.colorSchemes" />
          <module name="intellij.platform.resources.en" />
          <module name="intellij.platform.jps.model.serialization" />
          <module name="intellij.platform.jps.model.impl" />
          <module name="intellij.platform.coverage" />
          <module name="intellij.platform.duplicates" />
          <module name="intellij.platform.duplicates.analysis" />
          <module name="intellij.platform.externalSystem.impl" />
        </modules-set>
        <modules-set>
          <module name="intellij.idea.community.resources" />
          <module name="intellij.java" />
          <module name="intellij.java.aetherDependencyResolver" />
          <module name="intellij.java.analysis" />
          <module name="intellij.java.analysis.impl" />
          <module name="intellij.java.compiler" />
          <module name="intellij.java.compiler.antTasks" />
          <module name="intellij.java.compiler.impl" />
          <module name="intellij.java.compiler.instrumentationUtil" />
          <module name="intellij.java.compiler.instrumentationUtil.java8" />
          <module name="intellij.java.debugger" />
          <module name="intellij.java.debugger.impl" />
          <module name="intellij.java.debugger.memory.agent" />
          <module name="intellij.java.duplicates" />
          <module name="intellij.java.duplicates.analysis" />
          <module name="intellij.java.duplicatesDetection" />
          <module name="intellij.java.execution" />
          <module name="intellij.java.execution.impl" />
          <module name="intellij.java.guiForms.compiler" />
          <module name="intellij.java.guiForms.rt" />
          <module name="intellij.java.impl" />
          <module name="intellij.java.indexing" />
          <module name="intellij.java.indexing.impl" />
          <module name="intellij.java.jam" />
          <module name="intellij.java.jam.impl" />
          <module name="intellij.java.jshell.protocol" />
          <module name="intellij.java.manifest" />
          <module name="intellij.java.psi" />
          <module name="intellij.java.psi.impl" />
          <module name="intellij.java.remoteServers" />
          <module name="intellij.java.remoteServers.impl" />
          <module name="intellij.java.resources" />
          <module name="intellij.java.resources.en" />
          <module name="intellij.java.rt" />
          <module name="intellij.java.structuralSearch" />
          <module name="intellij.java.structureView" />
          <module name="intellij.java.testFramework" />
          <module name="intellij.java.typeMigration" />
          <module name="intellij.java.uast" />
          <module name="intellij.java.ui" />
          <module name="intellij.jsp" />
          <module name="intellij.jsp.base" />
          <module name="intellij.jsp.spi" />
          <module name="intellij.jvm.analysis" />
          <module name="intellij.jvm.analysis.impl" />
          <module name="intellij.platform.jps.build" />
          <module name="intellij.platform.jps.build.javac.rt" />
          <module name="intellij.platform.jps.build.launcher" />
          <module name="intellij.platform.uast" />
          <module name="intellij.platform.uast.tests" />
          <module name="intellij.uiDesigner" />
          <module name="intellij.xml.dom" />
          <module name="intellij.xml.dom.impl" />
          <module name="intellij.platform.testFramework" />
        </modules-set>
        <modules-set>
          <module name="intellij.android.core" />
          <module name="intellij.android.adt.branding" />
          <module name="intellij.android.common" />
          <module name="intellij.android.apkanalyzer" />
          <module name="intellij.android.designer" />
        </modules-set>
        <modules-set>
          <module name="intellij.python.community" />
          <module name="intellij.python.community.impl" />
          <module name="intellij.pycharm.community" />
          <module name="intellij.python.community.plugin" />
          <module name="intellij.python.psi" />
          <module name="intellij.python.pydev" />
        </modules-set>
      </option>
    </inspection_tool>
    <inspection_tool class="PointcutMethodStyleInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="PointlessArithmeticExpressionJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="PointlessBinding" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="PointlessBitwiseExpressionJS" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="m_ignoreExpressionsContainingConstants" value="false" />
    </inspection_tool>
    <inspection_tool class="PointlessBooleanExpressionJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="PointlessNullCheck" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="PrivatePropertyName" enabled="true" level="WEAK WARNING" enabled_by_default="true">
      <option name="namePattern" value="([A-Z_][A-Z_\d]*)|(_?[a-z][A-Za-z\d]*)" />
    </inspection_tool>
    <inspection_tool class="PublicConstructorInNonPublicClass" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="PublicFieldAccessedInSynchronizedContext" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="Query_bound_parameters" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="Query_index_required" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="Query_restricted" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="RawUseOfParameterizedType" enabled="true" level="WEAK WARNING" enabled_by_default="true">
      <option name="ignoreParametersOfOverridingMethods" value="true" />
    </inspection_tool>
    <inspection_tool class="RedundantSamConstructor" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
    <inspection_tool class="RedundantScopeBinding" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="RedundantToBinding" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="RedundantToProviderBinding" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="RedundantTypeConversion" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="CHECK_ANY" value="false" />
    </inspection_tool>
    <inspection_tool class="RemoveCurlyBracesFromTemplate" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
    <inspection_tool class="ReplaceAssignmentWithOperatorAssignment" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreLazyOperators" value="true" />
      <option name="ignoreObscureOperators" value="true" />
    </inspection_tool>
    <inspection_tool class="ReplaceNullCheck" enabled="true" level="INFORMATION" enabled_by_default="true">
      <option name="noWarningReplacementBigger" value="false" />
    </inspection_tool>
    <inspection_tool class="ReservedWordUsedAsNameJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="Restricted_Python_calls" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ReturnFromFinallyBlockJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="SSBasedInspection" enabled="true" level="WARNING" enabled_by_default="true">
      <replaceConfiguration name="&quot;var = volatile = E&quot; should be &quot;volatile = var = E&quot;" text="$var$ = $field$ = $e$;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" useStaticImport="true" replacement="$field$ = $var$ = $e$;">
        <constraint name="e" within="" contains="" />
        <constraint name="var" within="" contains="" />
        <constraint name="field" script="&quot;import com.intellij.psi.PsiField&#10;import com.intellij.psi.PsiModifier&#10;import com.intellij.psi.PsiReferenceExpression&#10;import com.intellij.psi.PsiVariable&#10;&#10;field instanceof PsiReferenceExpression &amp;&amp;&#10;((PsiReferenceExpression)field).resolve() instanceof PsiField &amp;&amp;&#10;((PsiField)((PsiReferenceExpression)field).resolve()).hasModifierProperty(PsiModifier.VOLATILE) &amp;&amp;&#10;var instanceof PsiReferenceExpression &amp;&amp;&#10;((PsiReferenceExpression)var).resolve() instanceof PsiVariable &amp;&amp;&#10;!((PsiVariable)((PsiReferenceExpression)var).resolve()).hasModifierProperty(PsiModifier.VOLATILE)&quot;" within="" contains="" />
        <constraint name="__context__" target="true" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="@HardwareAgentRequired should be applied only for performance tests" text="@com.intellij.idea.HardwareAgentRequired&#10;class $class$ {&#10;  &#10;}" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="class" regexp=".*Performance.*" negateName="true" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="@HardwareAgentRequired should be applied only for performance tests" text="@com.intellij.idea.HardwareAgentRequired&#10;class $class$ {&#10;  &#10;}" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="class" regexp=".*Performance.*" negateName="true" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="@ScheduledForRemoval with version" description="Report usages of @ScheduledForRemoval annotation which specify 'inVersion' attribute. " suppressId="ScheduledForRemovalWithVersion" problemDescriptor="We don't specify target version in @ScheduledForRemoval annotation anymore." text="@org.jetbrains.annotations.ApiStatus.ScheduledForRemoval(inVersion = $version$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="@org.jetbrains.annotations.ApiStatus.ScheduledForRemoval">
        <constraint name="__context__" within="" contains="" />
        <constraint name="version" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="@ScheduledForRemoval with version" text="@org.jetbrains.annotations.ApiStatus.ScheduledForRemoval(inVersion = $version$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="@org.jetbrains.annotations.ApiStatus.ScheduledForRemoval">
        <constraint name="__context__" within="" contains="" />
        <constraint name="version" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Alarm constructor can be simplified" text="new Alarm(Alarm.ThreadToUse.SWING_THREAD)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="false" replacement="new Alarm()">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Alarm creation can be expensive" description="Alarm registration in Disposer is expensive, please use AppExecutorUtil.getAppScheduledExecutorService().schedule() or EdtScheduledExecutionService instead" text="new com.intellij.util.SingleAlarm($p$).request();" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" minCount="0" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Anonymous Disposable passed to method" description="Do not pass Disposer.newDisposable() or similar to method expecting Disposable, because it can cause memory leak via Disposer tree.&#10;Instead, pass Disposable which you can guarantee to be disposed at the time needed." problemDescriptor="Anonymous Disposable passed to method: possible memory leak" text="new $f$($s1$, com.intellij.openapi.util.Disposer.$newDisposable$($a$), $s2$)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="f" within="" contains="" />
        <constraint name="s1" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="s2" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="a" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="newDisposable" regexp="newDisposable" target="true" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Anonymous Disposable passed to method" text="$f$($s1$, com.intellij.openapi.util.Disposer.$newDisposable$($a$), $s2$)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="f" within="" contains="" />
        <constraint name="s1" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="s2" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="a" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="newDisposable" regexp="newDisposable" target="true" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Anonymous threads are discouraged; please supply name" text="new Thread()" recursive="true" caseInsensitive="true" type="JAVA" />
      <searchConfiguration name="Anonymous threads are discouraged; please supply name" text="Thread()" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Anonymous threads are discouraged; please supply name" text="Executors.newSingleThreadScheduledExecutor()" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ConcurrencyUtil.newSingleScheduledThreadExecutor()">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Anonymous threads are discouraged; please supply name" text="Executors.newSingleThreadScheduledExecutor()" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ConcurrencyUtil.newSingleScheduledThreadExecutor()">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Anonymous threads are discouraged; please supply name" text="Executors.newSingleThreadExecutor()" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ConcurrencyUtil.newSingleThreadExecutor()">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Anonymous threads are discouraged; please supply name" text="Executors.newSingleThreadExecutor()" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ConcurrencyUtil.newSingleThreadExecutor()">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Anonymous threads are discouraged; please supply name" text="new Thread($runnable$)" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="runnable" nameOfExprType="java.lang.Runnable" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Anonymous threads are discouraged; please supply name" text="Thread($runnable$)" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="runnable" nameOfExprType="java.lang.Runnable" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Arrays.asList() is not immutable" text="val $Field$ = java.util.Arrays.asList($elements$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="val $Field$ = listOf($elements$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Field" within="" contains="" />
        <constraint name="elements" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Avoid usage of Optional in Kotlin" text="$Expression$.ofNullable($params$)" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Expression" nameOfExprType="java\.util\.Optional" exprTypeWithinHierarchy="true" target="true" within="" contains="" />
        <constraint name="params" minCount="0" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Avoid usage of Optional in Kotlin" text="$Expression$.of($params$)" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Expression" nameOfExprType="java\.util\.Optional" exprTypeWithinHierarchy="true" target="true" within="" contains="" />
        <constraint name="params" minCount="0" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Avoid usage of Stream API in Kotlin" uuid="1a82ef49-d1d4-3d41-aa2e-acf65abc4fc9" description="Usage of Java Stream API should be converted to Kotlin sequences or collection extensions, with exception of Stream usage for parallel processing." suppressId="NoStreamApiInKotlin" text="$Expression$.$stream$($ARGUMENTS$)" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Expression" within="" contains="" />
        <constraint name="stream" regexp="stream" target="true" within="" contains="" />
        <constraint name="ARGUMENTS" minCount="0" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Avoid usage of Stream API in Kotlin" uuid="1a82ef49-d1d4-3d41-aa2e-acf65abc4fc9" text="$Expression$.of($params$)" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Expression" nameOfExprType="java\.util\.stream\.Stream" exprTypeWithinHierarchy="true" target="true" within="" contains="" />
        <constraint name="params" minCount="0" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="can be simplified to ReadAction.compute()" uuid="44cf5267-e665-3ff5-9d2f-0de5c6983156" text="$application$.runReadAction(new $Computable$() {&#10;  public $SearchScope$ compute() {&#10;    return $e$;&#10;  }&#10;})" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.application.ReadAction.compute(()-&gt;$e$)">
        <constraint name="SearchScope" within="" contains="" />
        <constraint name="e" within="" contains="" />
        <constraint name="application" nameOfExprType="com.intellij.openapi.application.Application" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="Computable" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can be simplified to ReadAction.compute()" uuid="44cf5267-e665-3ff5-9d2f-0de5c6983156" text="$application$.runReadAction(($C$)()-&gt;$e$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.application.ReadAction.compute(()-&gt;$e$)">
        <constraint name="e" within="" contains="" />
        <constraint name="C" minCount="0" within="" contains="" />
        <constraint name="application" nameOfExprType="com.intellij.openapi.application.Application" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can be simplified to ReadAction.compute()" uuid="44cf5267-e665-3ff5-9d2f-0de5c6983156" text="$application$.runReadAction($Computable$() {&#10;  fun compute() {&#10;    return $e$&#10;  }&#10;})" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.application.ReadAction.compute { $e$ }">
        <constraint name="e" within="" contains="" />
        <constraint name="application" nameOfExprType="com.intellij.openapi.application.Application" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="Computable" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can simplify to getInstanceEx()" uuid="83b2549d-3689-355b-bb4a-b2b6d2dad4fc" text="(PsiManagerEx)PsiManager.getInstance($project$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="PsiManagerEx.getInstanceEx($project$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="project" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can simplify to getInstanceEx()" uuid="83b2549d-3689-355b-bb4a-b2b6d2dad4fc" text="$PsiManager$.getInstance($project$) as PsiManagerEx" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.psi.impl.PsiManagerEx.getInstanceEx($project$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="project" within="" contains="" />
        <constraint name="PsiManager" nameOfExprType="com\.intellij\.psi\.PsiManager" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ArrayUtil" uuid="d28d1bfc-45ff-3472-864c-6e13c1d1688d" description="emptyCollection.toArray() creates new array whereas ArrayUtil.toArray() methods don't&#10;similarly, ArrayUtil.EMPTY_*_ARRAY don't allocate  " problemDescriptor="can use ArrayUtil" text="$collection$.toArray(new Object[$collection$.size()])" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ArrayUtil.toObjectArray($collection$)">
        <constraint name="collection" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ArrayUtil" uuid="d28d1bfc-45ff-3472-864c-6e13c1d1688d" text="$collection$.toArray(new Object[0])" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ArrayUtil.toObjectArray($collection$)">
        <constraint name="collection" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ArrayUtil" uuid="d28d1bfc-45ff-3472-864c-6e13c1d1688d" text="$collection$.toArray(ArrayUtil.EMPTY_OBJECT_ARRAY)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ArrayUtil.toObjectArray($collection$)">
        <constraint name="collection" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ArrayUtil" uuid="d28d1bfc-45ff-3472-864c-6e13c1d1688d" text="$collection$.toArray(new String[$collection$.size()])" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ArrayUtil.toStringArray($collection$)">
        <constraint name="collection" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ArrayUtil" uuid="d28d1bfc-45ff-3472-864c-6e13c1d1688d" text="$collection$.toArray(new String[0])" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ArrayUtil.toStringArray($collection$)">
        <constraint name="collection" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ArrayUtil" uuid="d28d1bfc-45ff-3472-864c-6e13c1d1688d" text="$collection$.toArray(ArrayUtil.EMPTY_STRING_ARRAY)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ArrayUtil.toStringArray($collection$)">
        <constraint name="collection" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ArrayUtil" uuid="d28d1bfc-45ff-3472-864c-6e13c1d1688d" text="new Class[0]" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ArrayUtil.EMPTY_CLASS_ARRAY">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ArrayUtil" uuid="d28d1bfc-45ff-3472-864c-6e13c1d1688d" text="new Object[0]" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ArrayUtil.EMPTY_OBJECT_ARRAY">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ArrayUtil" uuid="d28d1bfc-45ff-3472-864c-6e13c1d1688d" text="new String[0]" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ArrayUtil.EMPTY_STRING_ARRAY">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ContainerUtil" uuid="c9f1d44f-a345-34e5-8460-cf58d74c993d" text="new HashSet&lt;&gt;(Arrays.asList($list$))" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.newHashSet($list$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="list" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ContainerUtil" uuid="c9f1d44f-a345-34e5-8460-cf58d74c993d" text="HashSet(Arrays.asList($list$))" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="setOf($list$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="list" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ContainerUtil" uuid="c9f1d44f-a345-34e5-8460-cf58d74c993d" text="Collections.unmodifiableList(Arrays.asList($c$))" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="listOf($c$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="c" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use ContainerUtil" uuid="c9f1d44f-a345-34e5-8460-cf58d74c993d" text="Collections.newSetFromMap(new ConcurrentHashMap&lt;&gt;())" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.newConcurrentSet()">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use StringUtil" uuid="e2009598-65b8-3ae6-a9f8-9159d2b2e27a" text="if ($s$.endsWith($e$)) {&#10;  $s$ = $s$.substring(0, $s$.length() - $e$.length());&#10;}" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$s$ = com.intellij.openapi.util.text.StringUtil.trimEnd($s$, $e$);&#10;">
        <constraint name="s" within="" contains="" />
        <constraint name="e" within="" contains="" />
        <constraint name="__context__" script="&quot;import com.intellij.psi.*&#10;import com.intellij.psi.search.GlobalSearchScope&#10;import com.intellij.psi.util.PsiUtil&#10;&#10;def stringUtil = JavaPsiFacade.getInstance(e.getProject()).findClass(&quot;com.intellij.openapi.util.text.StringUtil&quot;, GlobalSearchScope.allScope(e.getProject()));&#10;def strVirtualFile = PsiUtil.getVirtualFile(stringUtil);&#10;&#10;e instanceof PsiLiteralExpression &amp;&amp;&#10;e.getParent().getParent().getParent() instanceof PsiIfStatement &amp;&amp;&#10;((PsiIfStatement)e.getParent().getParent().getParent()).getElseBranch() == null &amp;&amp;&#10;strVirtualFile != null &amp;&amp;  &#10;e.getResolveScope().contains(strVirtualFile)&#10;&#10;&quot;" target="true" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use StringUtil" uuid="e2009598-65b8-3ae6-a9f8-9159d2b2e27a" text="if ($s$.endsWith(&quot;$e$&quot;)) {&#10;  $s$ = $s$.substring(0,$s$.length()-$n$);&#10;}" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$s$ = com.intellij.openapi.util.text.StringUtil.trimEnd($s$, &quot;$e$&quot;);&#10;">
        <constraint name="s" within="" contains="" />
        <constraint name="e" within="" contains="" />
        <constraint name="n" within="" contains="" />
        <constraint name="__context__" script="&quot;import com.intellij.psi.*&#10;import com.intellij.psi.search.GlobalSearchScope&#10;import com.intellij.psi.util.PsiUtil&#10;&#10;def stringUtil = JavaPsiFacade.getInstance(e.getProject()).findClass(&quot;com.intellij.openapi.util.text.StringUtil&quot;, GlobalSearchScope.allScope(e.getProject()));&#10;def strVirtualFile = PsiUtil.getVirtualFile(stringUtil);&#10;&#10;e instanceof PsiLiteralExpression &amp;&amp;&#10;n instanceof PsiLiteralExpression &amp;&amp;&#10;((PsiLiteralExpression)e).getValue() instanceof String &amp;&amp;&#10;((PsiLiteralExpression)n).getValue() instanceof Integer &amp;&amp;&#10;((String)((PsiLiteralExpression)e).getValue()).length() ==&#10;((Integer)((PsiLiteralExpression)n).getValue()).intValue() &amp;&amp;&#10;e.getParent().getParent().getParent() instanceof PsiIfStatement &amp;&amp;&#10;((PsiIfStatement)e.getParent().getParent().getParent()).getElseBranch() == null &amp;&amp;  &#10;strVirtualFile != null &amp;&amp;  &#10;e.getResolveScope().contains(strVirtualFile)&quot;" target="true" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use StringUtil" uuid="e2009598-65b8-3ae6-a9f8-9159d2b2e27a" text="if ($s$.startsWith($e$)) {&#10;  $s$ = $s$.substring($e$.length());&#10;}" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$s$ = com.intellij.openapi.util.text.StringUtil.trimStart($s$, $e$);&#10;">
        <constraint name="s" within="" contains="" />
        <constraint name="e" within="" contains="" />
        <constraint name="__context__" script="&quot;import com.intellij.psi.*&#10;import com.intellij.psi.search.GlobalSearchScope&#10;import com.intellij.psi.util.PsiUtil&#10;&#10;def stringUtil = JavaPsiFacade.getInstance(e.getProject()).findClass(&quot;com.intellij.openapi.util.text.StringUtil&quot;, GlobalSearchScope.allScope(e.getProject()));&#10;def strVirtualFile = PsiUtil.getVirtualFile(stringUtil);&#10;&#10;e.getParent().getParent().getParent() instanceof PsiIfStatement &amp;&amp;&#10;((PsiIfStatement)e.getParent().getParent().getParent()).getElseBranch() == null &amp;&amp;&#10;strVirtualFile != null &amp;&amp;  &#10;e.getContainingFile().getResolveScope().contains(strVirtualFile)&#10;&quot;" target="true" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="can use StringUtil" uuid="e2009598-65b8-3ae6-a9f8-9159d2b2e27a" text="if ($s$.startsWith(&quot;$e$&quot;)) {&#10;  $s$ = $s$.substring($n$);&#10;}" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$s$ = com.intellij.openapi.util.text.StringUtil.trimStart($s$, &quot;$e$&quot;);&#10;">
        <constraint name="s" within="" contains="" />
        <constraint name="e" within="" contains="" />
        <constraint name="n" within="" contains="" />
        <constraint name="__context__" script="&quot;import com.intellij.psi.*&#10;import com.intellij.psi.search.GlobalSearchScope&#10;import com.intellij.psi.util.PsiUtil&#10;&#10;def stringUtil = JavaPsiFacade.getInstance(e.getProject()).findClass(&quot;com.intellij.openapi.util.text.StringUtil&quot;, GlobalSearchScope.allScope(e.getProject()));&#10;def strVirtualFile = PsiUtil.getVirtualFile(stringUtil);&#10;&#10;e instanceof PsiLiteralExpression &amp;&amp;&#10;n instanceof PsiLiteralExpression &amp;&amp;&#10;((PsiLiteralExpression)e).getValue() instanceof String &amp;&amp;&#10;((PsiLiteralExpression)n).getValue() instanceof Integer &amp;&amp;&#10;((String)((PsiLiteralExpression)e).getValue()).length() ==&#10;((Integer)((PsiLiteralExpression)n).getValue()).intValue() &amp;&amp;&#10;e.getParent().getParent().getParent() instanceof PsiIfStatement &amp;&amp;&#10;((PsiIfStatement)e.getParent().getParent().getParent()).getElseBranch() == null &amp;&amp;  &#10;strVirtualFile != null &amp;&amp;  &#10;e.getResolveScope().contains(strVirtualFile)&quot;" target="true" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Comparing Swift Types without context" description="Whether two types are equal depends on the context" suppressId="swift.type.equals" problemDescriptor="Use equalsInContext" text="$ref1$.equals($ref2$)" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ref2" nameOfExprType="com\.jetbrains\.swift\.psi\.types\.SwiftType" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="ref1" nameOfExprType="com\.jetbrains\.swift\.psi\.types\.SwiftType" exprTypeWithinHierarchy="true" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Comparing Swift Types without context" text="$ref1$.equals($ref2$)" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ref2" nameOfExprType="com\.jetbrains\.swift\.psi\.types\.SwiftType" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="ref1" nameOfExprType="com\.jetbrains\.swift\.psi\.types\.SwiftType" exprTypeWithinHierarchy="true" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Consider explicit delete when file is not needed any more" text="$file$.deleteOnExit()" recursive="false" caseInsensitive="true" type="JAVA">
        <constraint name="file" nameOfExprType="java.io.File" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Consider explicit delete when file is not needed any more" text="$file$.deleteOnExit()" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="file" nameOfExprType="java.io.File" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="DataContext.getData(String)" description="DataContext.getData(DataKey) with a dedicated DataKey constant shall be used instead" problemDescriptor="DataContext.getData(DataKey) shall be used instead" text="$Var2$.getData($Var3$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="__context__" target="true" within="" contains="" />
        <constraint name="Var2" nameOfExprType="DataContext" within="" contains="" />
        <constraint name="Var3" regexp="&quot;.*" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="DataContext.getData(String)" text="$Var2$.getData($Var3$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" target="true" within="" contains="" />
        <constraint name="Var2" nameOfExprType="DataContext" within="" contains="" />
        <constraint name="Var3" regexp="&quot;.*" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="DataKey API" text="$Var2$.getData($Var3$.getDataContext())" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var3$.getData($Var2$)">
        <constraint name="__context__" target="true" within="" contains="" />
        <constraint name="Var2" nameOfExprType="DataKey" within="" contains="" />
        <constraint name="Var3" nameOfExprType="AnActionEvent" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="DataKey API" text="$Var2$.getData($Var3$.dataContext)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var3$.getData($Var2$)">
        <constraint name="__context__" target="true" within="" contains="" />
        <constraint name="Var2" nameOfExprType="DataKey" within="" contains="" />
        <constraint name="Var3" nameOfExprType="AnActionEvent" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="DataKey API" text="$Var2$.getName().equals($Var3$)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var2$.is($Var3$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Var2" nameOfExprType="DataKey" within="" contains="" />
        <constraint name="Var3" nameOfExprType="String" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="DataKey API" text="$Var3$.equals($Var2$.getName())" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var2$.is($Var3$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Var2" nameOfExprType="DataKey" within="" contains="" />
        <constraint name="Var3" nameOfExprType="String" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="DataKey API" text="$Var2$.getName() == $Var3$" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var2$.is($Var3$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Var2" nameOfExprType="DataKey" within="" contains="" />
        <constraint name="Var3" nameOfExprType="String" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="DataKey API" text="$Var3$ == $Var2$.getName()" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var2$.is($Var3$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Var2" nameOfExprType="DataKey" within="" contains="" />
        <constraint name="Var3" nameOfExprType="String" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="DataKey API" text="$Var2$.name == $Var3$" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var2$.`is`($Var3$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Var2" nameOfExprType="DataKey" within="" contains="" />
        <constraint name="Var3" nameOfExprType="String" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="DataKey API" text="$Var3$ == $Var2$.name" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var2$.`is`($Var3$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Var2" nameOfExprType="DataKey" within="" contains="" />
        <constraint name="Var3" nameOfExprType="String" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="DBE model property must be public" uuid="0899a4c2-78e7-3f01-be3c-9c46451baec3" text="class $Class$ {&#10;  @StateProperty&#10;  @Modifier(&quot;packageLocal&quot;) $FieldType$ $FieldName$;&#10;}" recursive="true" caseInsensitive="true" type="JAVA">
        <constraint name="Class" within="" contains="" />
        <constraint name="FieldType" within="" contains="" />
        <constraint name="FieldName" target="true" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="DBE model property must be public" uuid="0899a4c2-78e7-3f01-be3c-9c46451baec3" text="class $Class$ {&#10;  @StateProperty&#10;  @Modifier(&quot;packageLocal&quot;) val $FieldName$&#10;}" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="Class" within="" contains="" />
        <constraint name="FieldName" target="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="DBE model property must be public" uuid="0899a4c2-78e7-3f01-be3c-9c46451baec3" text="class $Class$ {&#10;  @StateProperty&#10;  private $FieldType$ $FieldName$;&#10;}" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="Class" within="" contains="" />
        <constraint name="FieldType" within="" contains="" />
        <constraint name="FieldName" target="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="DBE model property must be public" uuid="0899a4c2-78e7-3f01-be3c-9c46451baec3" text="class $Class$ {&#10;  @StateProperty&#10;  private val $FieldName$&#10;}" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="Class" within="" contains="" />
        <constraint name="FieldName" target="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="DBE model property must be public" uuid="0899a4c2-78e7-3f01-be3c-9c46451baec3" text="class $Class$ {&#10;  @StateProperty&#10;  protected $FieldType$ $FieldName$;&#10;}" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="Class" within="" contains="" />
        <constraint name="FieldType" within="" contains="" />
        <constraint name="FieldName" target="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="DBE model property must be public" uuid="0899a4c2-78e7-3f01-be3c-9c46451baec3" text="class $Class$ {&#10;  @StateProperty&#10;  protected val $FieldName$&#10;}" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="Class" within="" contains="" />
        <constraint name="FieldName" target="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="DirectCallOfDispose" text="$Instance$.dispose()" recursive="false" caseInsensitive="false" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="Disposer.dispose($Instance$)">
        <constraint name="Instance" regexp="super" nameOfExprType="Disposable" withinHierarchy="true" exprTypeWithinHierarchy="true" minCount="0" negateName="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="DirectCallOfDispose" text="$Instance$.dispose()" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="Disposer.dispose($Instance$)">
        <constraint name="Instance" regexp="super" nameOfExprType="Disposable" withinHierarchy="true" exprTypeWithinHierarchy="true" minCount="0" negateName="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Disposable instance by lambda" description="It's not safe to instantiate Disposable via lambda because lambdas does not guarantee their identity." text="Disposable { }" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.Disposer.newDisposable()">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Don't read channels with for, use consume/consumeEach" suppressId="CHAN_WITH_FOR" text="for ($Item$ in $Collection$) {&#10;  $Statement$&#10;}" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="false" replacement="$Collection$.consumeEach { $Item$ -&gt;&#10;  $Statement$&#10;}">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Item" within="" contains="" />
        <constraint name="Collection" nameOfExprType="kotlinx\.coroutines\.channels\.ReceiveChannel" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="Statement" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Don't use Channel in function signatures, consider using Send/ReceiveChannel" suppressId="CHAN_FOR_FUN" text="fun $FUNCTION$($PARAM1$, $PARAM2$, $PARAM3$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="FUNCTION" within="" contains="" />
        <constraint name="PARAM1" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="PARAM2" nameOfExprType="kotlinx.coroutines.channels.Channel" target="true" within="" contains="" />
        <constraint name="PARAM3" minCount="0" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Don't use Channel in function signatures, consider using Send/ReceiveChannel" text="class $Class$($PARAM1$: $T1$, $PARAM2$: $T2$, $PARAM3$: $T3$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="PARAM1" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="PARAM2" nameOfExprType="kotlinx.coroutines.channels.Channel" target="true" within="" contains="" />
        <constraint name="PARAM3" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="Class" within="" contains="" />
        <constraint name="T1" within="" contains="" />
        <constraint name="T2" within="" contains="" />
        <constraint name="T3" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Don't use javax.swing.FocusManager" uuid="fdcd3e7e-31cb-3d1e-b4c1-373c34bde609" description="javax.swing.FocusManager is obsolete, using it can cause default application's focus traversal policy to be changed. javax.swing.KeyboardFocusManager should be used instead." suppressId="jsFocusManager" problemDescriptor="Obsolete class, use KeyboardFocusManager instead" text="$Clz$" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Clz" nameOfExprType="javax\.swing\.FocusManager" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Don't use javax.swing.FocusManager" uuid="fdcd3e7e-31cb-3d1e-b4c1-373c34bde609" text="$Clz$" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Clz" nameOfExprType="javax\.swing\.FocusManager" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Don't use serializer(type)" description="Use Class.serizlizer(), it's faster" problemDescriptor="Use Class.serizlizer(), it's faster" text="$MethodCall$($Parameter$)" recursive="true" caseInsensitive="false" type="Kotlin" pattern_context="default" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="MethodCall" regexp="serializer" within="" contains="" />
        <constraint name="Parameter" nameOfExprType="java\.lang\.Class" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Double ' in without { in property value" description="A double single quote in a propery value without a parameter like &#10;{0} will be rendered as a doubled single quote in the result. When&#10;a parameter is present it will be rendered as a single single &#10;quote." suppressId="DoubleSingleQuote" text="$key$=$value$" recursive="true" caseInsensitive="true" type="Properties" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="key" within="" contains="" />
        <constraint name="value" regexp="[^{]*''[^{]*" target="true" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Eager service initialization during classloading" description="This code is executed when JVM is loading the class, which may cause deadlocks, slowdowns and circular loading issues.&#10;&#10;An example of good API for service getters is&#10;fun instance(): Type = service()" suppressId="service_in_classloading" text="class $doesNotMatter$ {&#10;  companion object {&#10;    val $instance$ = service&lt;$cls$&gt;()&#10;  }&#10;}" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="fun $instance$() = service&lt;$cls$&gt;()&#10;  &#10;@Deprecated(&quot;inline me&quot;)&#10;val $instance$ = $instance$()">
        <constraint name="__context__" within="" contains="" />
        <constraint name="instance" target="true" within="" contains="" />
        <constraint name="doesNotMatter" within="" contains="" />
        <constraint name="cls" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Eager service initialization during classloading" text="class $doesNotMatter$ {&#10;  companion object {&#10;    val $instance$ = ApplicationManager.getApplication().getService($cls$)&#10;  }&#10;}" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="fun $instance$() = ApplicationManager.getApplication().getService($cls$)&#10;&#10;@Deprecated(&quot;inline me&quot;)&#10;val $instance$ get() = $instance$">
        <constraint name="__context__" within="" contains="" />
        <constraint name="instance" target="true" within="" contains="" />
        <constraint name="doesNotMatter" within="" contains="" />
        <constraint name="cls" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Eager service initialization during classloading" text="class $doesNotMatter$ {&#10;  companion object {&#10;    val $instance$: $cls$ = service()&#10;  }&#10;}" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="fun $instance$(): $cls$ = service()&#10;@Deprecated(&quot;inline me&quot;) val $instance$: $cls$ get() = instance&#10;">
        <constraint name="__context__" within="" contains="" />
        <constraint name="instance" target="true" within="" contains="" />
        <constraint name="doesNotMatter" within="" contains="" />
        <constraint name="cls" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="EventLogGroup version should be &gt; 0" text="EventLogGroup($Parameter1$, $Parameter2$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Parameter2" regexp="0" within="" contains="" />
        <constraint name="Parameter1" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="EventLogGroup version should be &gt; 0" text="new EventLogGroup($Argument1$, $Argument2$)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Argument1" within="" contains="" />
        <constraint name="Argument2" regexp="0" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Explicit cast to specific SwiftType" uuid="4728e433-2984-33d6-8696-3fd7f55d9252" description="a type can be a type alias or a single-item tuple of a desired type. And you most likely want to support them as well" suppressId="explicit.cast.to.swift.type" problemDescriptor="Please use `SwiftTypeUtil.as&lt;type&gt;` method instead" text="$ref$ instanceof $SwiftType$" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ref" within="" contains="" />
        <constraint name="SwiftType" regexp="Swift(?!Inout)(?!Ellipsis)(?!FileElement).+Type" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Explicit cast to specific SwiftType" uuid="4728e433-2984-33d6-8696-3fd7f55d9252" text="$ref$ is $SwiftType$" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ref" within="" contains="" />
        <constraint name="SwiftType" regexp="Swift(?!Inout)(?!Ellipsis)(?!FileElement).+Type" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Explicit cast to specific SwiftType" uuid="4728e433-2984-33d6-8696-3fd7f55d9252" text="$ref$ !is $SwiftType$" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ref" within="" contains="" />
        <constraint name="SwiftType" regexp="Swift(?!Inout)(?!Ellipsis)(?!FileElement).+Type" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Explicit cast to specific SwiftType" uuid="4728e433-2984-33d6-8696-3fd7f55d9252" text="$ref$ as $SwiftType$" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ref" within="" contains="" />
        <constraint name="SwiftType" regexp="Swift(?!Inout)(?!Ellipsis)(?!FileElement).+Type" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Explicit cast to specific SwiftType" uuid="4728e433-2984-33d6-8696-3fd7f55d9252" text="$ref$ as? $SwiftType$" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ref" within="" contains="" />
        <constraint name="SwiftType" regexp="Swift(?!Inout)(?!Ellipsis)(?!FileElement).+Type" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="File.createTempFile()" uuid="dee96c73-c402-36ca-a972-4b6641585bc0" text="java.io.File.createTempFile($prefix$, $suffix$)" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.io.FileUtil.createTempFile($prefix$, $suffix$)">
        <constraint name="prefix" within="" contains="" />
        <constraint name="suffix" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="File.createTempFile()" uuid="dee96c73-c402-36ca-a972-4b6641585bc0" text="$File$.createTempFile($prefix$, $suffix$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.io.FileUtil.createTempFile($prefix$, $suffix$)">
        <constraint name="prefix" within="" contains="" />
        <constraint name="suffix" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
        <constraint name="File" nameOfExprType="java\.io\.File" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="File.createTempFile()" uuid="dee96c73-c402-36ca-a972-4b6641585bc0" text="java.io.File.createTempFile($prefix$, $suffix$, $dir$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.io.FileUtil.createTempFile($dir$, $prefix$, $suffix$, true)">
        <constraint name="prefix" within="" contains="" />
        <constraint name="suffix" within="" contains="" />
        <constraint name="dir" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="File.createTempFile()" uuid="dee96c73-c402-36ca-a972-4b6641585bc0" text="$File$.createTempFile($prefix$, $suffix$, $dir$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.io.FileUtil.createTempFile($dir$, $prefix$, $suffix$, true)">
        <constraint name="prefix" within="" contains="" />
        <constraint name="suffix" within="" contains="" />
        <constraint name="dir" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
        <constraint name="File" nameOfExprType="java\.io\.File" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="findAnnotation(name) != null -&gt; hasAnnotation(name)" text="$Instance$.findAnnotation($Parameter$) != null" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Instance$.hasAnnotation($Parameter$)">
        <constraint name="Instance" nameOfExprType="com\.intellij\.psi\.PsiAnnotationOwner" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="findAnnotation(name) != null -&gt; hasAnnotation(name)" text="$Instance$.findAnnotation($Parameter$) != null" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Instance$.hasAnnotation($Parameter$)">
        <constraint name="Instance" nameOfExprType="com\.intellij\.psi\.PsiAnnotationOwner" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="findAnnotation(name) != null -&gt; hasAnnotation(name)" text="$Instance$.findAnnotation($Parameter$) == null&#10;" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="!$Instance$.hasAnnotation($Parameter$)">
        <constraint name="Instance" nameOfExprType="com\.intellij\.psi\.PsiAnnotationOwner" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="findAnnotation(name) can be simplified" uuid="7228acac-afb8-381c-b31f-ad9cdefe3a81" text="$Instance$.findAnnotation($Parameter$) == null&#10;" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="!$Instance$.hasAnnotation($Parameter$)">
        <constraint name="Instance" nameOfExprType="com\.intellij\.psi\.PsiAnnotationOwner" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Graphics clipping region should be updated not replaced" description="&lt;code&gt;setClip&lt;/code&gt; is a dangerous method that can break rendering of Swing components. It ignores the current clipping region and allows painting outside of the component. This method can be used in some specific cases, one of them is to restore the previous clip. In other cases, you have to use &lt;code&gt;Graphics.clipRect&lt;/code&gt; or &lt;code&gt;Graphics2D.clip&lt;/code&gt;." suppressId="GraphicsSetClipInspection" text="$Instance$.setClip($Parameter$)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Instance$.clipRect($Parameter$)">
        <constraint name="Instance" nameOfExprType="java\.awt\.Graphics" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="Parameter" minCount="4" maxCount="4" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Graphics clipping region should be updated not replaced" suppressId="GraphicsSetClipInspection" text="$Instance$.setClip($Parameter$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Instance$.clipRect($Parameter$)">
        <constraint name="Instance" nameOfExprType="java\.awt\.Graphics" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="Parameter" minCount="4" maxCount="4" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Graphics clipping region should be updated not replaced" suppressId="GraphicsSetClipInspection" text="$Instance$.setClip($Parameter$)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="((java.awt.Graphics2D)$Instance$).clip($Parameter$)">
        <constraint name="Instance" nameOfExprType="java\.awt\.Graphics" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Graphics clipping region should be updated not replaced" suppressId="GraphicsSetClipInspection" text="$Instance$.setClip($Parameter$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="($Instance$ as java.awt.Graphics2D).clip($Parameter$)">
        <constraint name="Instance" nameOfExprType="java\.awt\.Graphics" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Graphics clipping region should be updated not replaced" suppressId="GraphicsSetClipInspection" text="$Instance$.clip=$Parameter$" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="($Instance$ as java.awt.Graphics2D).clip($Parameter$)">
        <constraint name="Instance" nameOfExprType="java\.awt\.Graphics" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="incorrect DumbAware check" created="1522680840725" text="$target$ instanceof DumbAware" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.project.DumbService.isDumbAware($target$)">
        <constraint name="target" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="incorrect DumbAware check" text="$target$ is DumbAware" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.project.DumbService.isDumbAware($target$)">
        <constraint name="target" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="invalid use of ArrayUtil.contains(): always returns false" uuid="676e5e3d-30ef-3f51-88a6-6366b80d5d76" text="com.intellij.util.ArrayUtil.contains($t$, $e$)" recursive="true" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="$e$.contains($t$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="t" within="" contains="" />
        <constraint name="e" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="invalid use of ArrayUtil.contains(): always returns false" uuid="676e5e3d-30ef-3f51-88a6-6366b80d5d76" text="$ArrayUtil$.contains($t$, $e$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$e$.contains($t$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="t" within="" contains="" />
        <constraint name="e" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="ArrayUtil" nameOfExprType="com\.intellij\.util\.ArrayUtil" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="invalid use of ArrayUtil.contains(): always returns false" uuid="676e5e3d-30ef-3f51-88a6-6366b80d5d76" text="com.intellij.util.ArrayUtil.contains($t$, $e$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.ArrayUtil.contains($e$, $t$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="t" nameOfExprType="java\.lang\.Object\[\]" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="e" nameOfExprType="java\.lang\.Object\[\]" exprTypeWithinHierarchy="true" negateExprType="true" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Lambda can be replaced with Pair.comparingByFirst()" text="java.util.Comparator.comparing((com.intellij.openapi.util.Pair $p$) -&gt; $p$.first)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.Pair.comparingByFirst()">
        <constraint name="__context__" script="&quot;__context__.parent instanceof com.intellij.psi.PsiExpressionList&quot;" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Lambda can be replaced with Pair.comparingByFirst()" text="java.util.Comparator.comparing((com.intellij.openapi.util.Pair $p$) -&gt; $p$.getFirst())" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.Pair.comparingByFirst()">
        <constraint name="__context__" script="&quot;__context__.parent instanceof com.intellij.psi.PsiExpressionList&quot;" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Lambda can be replaced with Pair.comparingBySecond()" text="java.util.Comparator.comparing((com.intellij.openapi.util.Pair $p$) -&gt; $p$.second)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.Pair.comparingBySecond()">
        <constraint name="__context__" script="&quot;__context__.parent instanceof com.intellij.psi.PsiExpressionList&quot;" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Lambda can be replaced with Pair.comparingBySecond()" text="java.util.Comparator.comparing((com.intellij.openapi.util.Pair $p$) -&gt; $p$.getSecond())" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.Pair.comparingBySecond()">
        <constraint name="__context__" script="&quot;__context__.parent instanceof com.intellij.psi.PsiExpressionList&quot;" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Logger.getInstance(unknown class)" text="Logger.getInstance(&quot;#$c$&quot;)" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="__context__" script="&quot;import com.intellij.psi.*&#10;import com.intellij.psi.search.GlobalSearchScope&#10;import com.intellij.psi.util.PsiUtil&#10;&#10;def project = __context__.getProject();&#10;def fqn = c.getValue().substring(1);&#10;if (fqn.indexOf('.') == -1) return false;&#10;def shortName = com.intellij.openapi.util.text.StringUtil.getShortName(fqn);&#10;if (!shortName.equals(com.intellij.openapi.util.text.StringUtil.capitalize(shortName))) return false;&#10;&#10;def cClass = JavaPsiFacade.getInstance(project).findClass(fqn, GlobalSearchScope.allScope(project));&#10; cClass == null&#10;&quot;" within="" contains="" />
        <constraint name="c" target="true" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Logger expression can be simplified" uuid="0befec03-d2b3-3838-ada0-363adc05fac7" text="com.intellij.openapi.diagnostic.Logger.getInstance(&quot;#&quot; + $c$.class.getName())" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.diagnostic.Logger.getInstance($c$.class)">
        <constraint name="c" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Logger expression can be simplified" uuid="0befec03-d2b3-3838-ada0-363adc05fac7" text="$LOG$.assertTrue(false, $e$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$LOG$.error($e$)">
        <constraint name="e" within="" contains="" />
        <constraint name="LOG" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Logger expression can be simplified" uuid="0befec03-d2b3-3838-ada0-363adc05fac7" text="$Logger$.getInstance(&quot;#${$c$::class.java.name}&quot;)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.diagnostic.Logger.getInstance($c$::class.java)">
        <constraint name="c" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
        <constraint name="Logger" nameOfExprType="com\.intellij\.openapi\.diagnostic\.Logger" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Logger expression can be simplified" uuid="0befec03-d2b3-3838-ada0-363adc05fac7" text="$LOG$.assertTrue(false, $e$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$LOG$.error($e$)">
        <constraint name="e" within="" contains="" />
        <constraint name="LOG" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Logger expression can be simplified" uuid="0befec03-d2b3-3838-ada0-363adc05fac7" text="Logger.getInstance(&quot;#$c$&quot;)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="Logger.getInstance($c$.class)">
        <constraint name="__context__" script="&quot;import com.intellij.psi.*&#10;&#10;def resolveScope = __context__.getContainingFile().getResolveScope()&#10;def className = c.getText().substring(1)&#10;def psiFacade = JavaPsiFacade.getInstance(__context__.project)&#10;def aClass = psiFacade.findClass(className, resolveScope)&#10;&#10;aClass != null&quot;" target="true" within="" contains="" />
        <constraint name="c" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Logger expression can be simplified" uuid="0befec03-d2b3-3838-ada0-363adc05fac7" text="Logger.getInstance(&quot;#$c$&quot;)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="Logger.getInstance($c$::class.java)">
        <constraint name="__context__" script="&quot;import com.intellij.psi.*&#10;&#10;def resolveScope = __context__.getContainingFile().getResolveScope()&#10;def className = c.getText().substring(1)&#10;def psiFacade = JavaPsiFacade.getInstance(__context__.project)&#10;def aClass = psiFacade.findClass(className, resolveScope)&#10;aClass != null&quot;" target="true" within="" contains="" />
        <constraint name="c" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Logger should be a top-level declaration" uuid="03c8b094-627d-3aaa-8d8b-4a66542826cd" description="Creating a logger for each instance of a class isn't optimized.&#10;The idiomatic way to create a logger is using a top-level declaration." problemDescriptor="Logger should be a top-level declaration" text="class $Class$ { val $logger$ }" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Class" within="" contains="" />
        <constraint name="logger" nameOfExprType="Logger|libraries\.klogging\.BaseLogger" exprTypeWithinHierarchy="true" target="true" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Manual TextRange.substring() implementation" uuid="7eb9e6b2-16c6-3c0e-aa15-b8c0a54a6aee" description="Reports code pattern like str.substring(range.getStartOffset(), range.getEndOffset()). This code could be replaced with range.substring(str)" problemDescriptor="TextRange.substring() could be used" text="$str$.substring($range$.getStartOffset(), $range$.getEndOffset())" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$range$.substring($str$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="str" nameOfExprType="java\.lang\.String" within="" contains="" />
        <constraint name="range" nameOfExprType="com\.intellij\.openapi\.util\.TextRange" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Manual TextRange.substring() implementation" uuid="7eb9e6b2-16c6-3c0e-aa15-b8c0a54a6aee" text="$str$.substring($range$.startOffset, $range$.endOffset)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$range$.substring($str$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="str" nameOfExprType="java\.lang\.String" within="" contains="" />
        <constraint name="range" nameOfExprType="com\.intellij\.openapi\.util\.TextRange" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Method reference can slow down startup" description="Method references in class initializers cause qualifier class to be loaded as well, even if that reference would never be invoked" text="$C$::new" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default">
        <constraint name="__context__" script="&quot;import com.intellij.psi.*&#10;import com.intellij.psi.util.PsiTreeUtil &#10;&#10;def member = PsiTreeUtil.getParentOfType(__context__, PsiMember)&#10;if ((member instanceof PsiClassInitializer || member instanceof PsiField) &amp;&amp; member.hasModifierProperty(PsiModifier.STATIC)) {&#10;  def clazz = member.parent&#10;  def target = C.resolve()&#10;  def targetName = target?.qualifiedName&#10;  target != null &amp;&amp; clazz != target &amp;&amp; !target.qualifiedName.startsWith(&quot;java.&quot;)&#10;}&#10;else false&quot;" within="" contains="" />
        <constraint name="C" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="new String(byte[]) is default locale dependent; use new String(byte[], Charset) instead" text="new String($b$)" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="new String($b$, java.nio.charset.StandardCharsets.UTF_8)">
        <constraint name="b" nameOfExprType="byte\[\]" exprTypeWithinHierarchy="true" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="new String(byte[]) is default locale dependent; use new String(byte[], Charset) instead" text="String($b$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="String($b$, java.nio.charset.StandardCharsets.UTF_8)">
        <constraint name="b" nameOfExprType="ByteArray|Array&lt;Byte&gt;" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="non-static JamAnnotationMeta" text="class $Class$ {&#10;  $Type$ $Variable$ = $Init$;&#10;}" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="Class" within="" contains="" />
        <constraint name="Type" regexp="JamAnnotationMeta" within="" contains="" />
        <constraint name="Variable" script="&quot;!__context__.hasModifierProperty(&quot;static&quot;)&quot;" maxCount="2147483647" target="true" within="" contains="" />
        <constraint name="Init" minCount="0" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="non-static JamAnnotationMeta" text="class $Class$ {&#10;  val $Variable$&#10;}" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="Class" within="" contains="" />
        <constraint name="Variable" nameOfExprType="JamAnnotationMeta" maxCount="2147483647" target="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="notNullize(s,&quot;&quot;) can be simplified" text="com.intellij.openapi.util.text.StringUtil.notNullize($s$, &quot;$l$&quot;)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.text.StringUtil.notNullize($s$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="s" within="" contains="" />
        <constraint name="l" regexp="^$" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="nullability for array elements specified, probably nullability for the array itself was intended" text="@$Anno$ $Type$ $x$;" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="x" within="" contains="" />
        <constraint name="Anno" regexp="Nullable|NotNull" target="true" within="" contains="" />
        <constraint name="Type" script="&quot;import com.intellij.psi.util.PsiUtil&#10;&#10;def parent = Type.parent;&#10;parent != null &amp;&amp;&#10;PsiUtil.isLanguageLevel8OrHigher(Type) &amp;&amp;&#10;!parent.hasAnnotation(&quot;org.jetbrains.annotations.NotNull&quot;) &amp;&amp;&#10;!parent.hasAnnotation(&quot;org.jetbrains.annotations.Nullable&quot;);&quot;" regexp=".*(\[\])+" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="nullability for array elements specified, probably nullability for the array itself was intended" text="@$Anno$ $Type$ $x$($T$ $param$);" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="member">
        <constraint name="__context__" within="" contains="" />
        <constraint name="x" within="" contains="" />
        <constraint name="Anno" regexp="Nullable|NotNull" target="true" within="" contains="" />
        <constraint name="Type" script="&quot;import com.intellij.psi.util.PsiUtil&#10;&#10;def parent = Type.parent;&#10;parent != null &amp;&amp;&#10;PsiUtil.isLanguageLevel8OrHigher(Type) &amp;&amp;&#10;!parent.hasAnnotation(&quot;org.jetbrains.annotations.NotNull&quot;) &amp;&amp;&#10;!parent.hasAnnotation(&quot;org.jetbrains.annotations.Nullable&quot;);&quot;" regexp=".*(\[\])+" within="" contains="" />
        <constraint name="T" within="" contains="" />
        <constraint name="param" minCount="0" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Over-dependence on fastutil Collections" uuid="8c028576-2d38-32d6-a013-7c3ce0e29f09" description="Factory method CollectionFactory.createXXX() should be used to reduce dependence on concrete collection implementation from third-party library " problemDescriptor="Should use factory method instead of direct ctr call" text="new Object2ObjectOpenHashMap&lt;&gt;($a$)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.CollectionFactory.createSmallMemoryFootprintMap($a$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="a" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Over-dependence on fastutil Collections" uuid="8c028576-2d38-32d6-a013-7c3ce0e29f09" text="Object2ObjectOpenHashMap($a$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.CollectionFactory.createSmallMemoryFootprintMap($a$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="a" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Over-dependence on fastutil Collections" uuid="8c028576-2d38-32d6-a013-7c3ce0e29f09" text="new Object2ObjectLinkedOpenHashMap&lt;&gt;($a$)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.CollectionFactory.createSmallMemoryFootprintLinkedMap($a$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="a" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Over-dependence on fastutil Collections" uuid="8c028576-2d38-32d6-a013-7c3ce0e29f09" text="Object2ObjectLinkedOpenHashMap($a$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.CollectionFactory.createSmallMemoryFootprintLinkedMap($a$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="a" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Over-dependence on fastutil Collections" uuid="8c028576-2d38-32d6-a013-7c3ce0e29f09" text="new ObjectOpenHashSet&lt;&gt;($a$)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.CollectionFactory.createSmallMemoryFootprintSet($a$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="a" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Over-dependence on fastutil Collections" uuid="8c028576-2d38-32d6-a013-7c3ce0e29f09" text="ObjectOpenHashSet($a$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.CollectionFactory.createSmallMemoryFootprintSet($a$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="a" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Potential memory leak: don't hold PsiElement inside quick fix, use SmartPsiElementPointer or instead of; also see LocalQuickFixOnPsiElement" text="class $Class$ { &#10;  $FieldType$ $FieldName$ = $Init$;&#10;}" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default">
        <constraint name="Class" regexp="com.intellij.codeInspection.LocalQuickFix" withinHierarchy="true" within="" contains="" />
        <constraint name="FieldType" regexp="com.intellij.psi.PsiElement" withinHierarchy="true" within="" contains="" />
        <constraint name="FieldName" maxCount="2147483647" target="true" within="" contains="" />
        <constraint name="Init" minCount="0" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Potential memory leak: don't hold PsiElement inside quick fix, use SmartPsiElementPointer or instead of; also see LocalQuickFixOnPsiElement" text="class $Class$ { &#10;  val $FieldName$ = $Initializer$&#10;}" recursive="true" caseInsensitive="false" type="Kotlin" pattern_context="default">
        <constraint name="Class" regexp="com.intellij.codeInspection.LocalQuickFix" withinHierarchy="true" within="" contains="" />
        <constraint name="FieldName" nameOfExprType="PsiElement" exprTypeWithinHierarchy="true" maxCount="2147483647" target="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
        <constraint name="Initializer" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Potential non-desired escape from lambda expression" text="PsiTreeUtil.getParentOfType($Parameter$, PsiMethod.class, true, PsiClass.class)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" useStaticImport="true" replacement="PsiTreeUtil.getParentOfType($Parameter$, PsiMethod.class, true, PsiClass.class, PsiLambdaExpression.class)">
        <constraint name="Parameter" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Potential non-desired escape from lambda expression" text="PsiTreeUtil.getParentOfType($Parameter$, PsiMethod::class.java, true, PsiClass::class.java)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" useStaticImport="true" replacement="PsiTreeUtil.getParentOfType($Parameter$, PsiMethod::class.java, true, PsiClass::class.java, PsiLambdaExpression::class.java)">
        <constraint name="Parameter" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Presentation setEnabledAndVisible()" uuid="b8a50e24-ab96-3281-a6f3-ef3ee515af02" text="$Var1$.setEnabled($Var2$);&#10;$Var1$.setVisible($Var2$);&#10;" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var1$.setEnabledAndVisible($Var2$);">
        <constraint name="__context__" target="true" within="" contains="" />
        <constraint name="Var2" within="" contains="" />
        <constraint name="Var1" nameOfExprType="Presentation" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Presentation setEnabledAndVisible()" uuid="b8a50e24-ab96-3281-a6f3-ef3ee515af02" text="$Var1$.setVisible($Var2$);&#10;$Var1$.setEnabled($Var2$);&#10;" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var1$.setEnabledAndVisible($Var2$);">
        <constraint name="__context__" target="true" within="" contains="" />
        <constraint name="Var2" within="" contains="" />
        <constraint name="Var1" nameOfExprType="Presentation" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Presentation setEnabledAndVisible()" uuid="b8a50e24-ab96-3281-a6f3-ef3ee515af02" text="$Var1$.isEnabled = $Var2$&#10;$Var1$.isVisible = $Var2$" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var1$.isEnabledAndVisible = $Var2$">
        <constraint name="__context__" target="true" within="" contains="" />
        <constraint name="Var2" within="" contains="" />
        <constraint name="Var1" nameOfExprType="Presentation" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Presentation setEnabledAndVisible()" uuid="b8a50e24-ab96-3281-a6f3-ef3ee515af02" text="$Var1$.isVisible = $Var2$&#10;$Var1$.isEnabled = $Var2$&#10;" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$Var1$.isEnabledAndVisible = $Var2$">
        <constraint name="__context__" target="true" within="" contains="" />
        <constraint name="Var2" within="" contains="" />
        <constraint name="Var1" nameOfExprType="Presentation" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Presentation text copying will lose mnemonic" description="&lt;code&gt;Presentation.getText()&lt;/code&gt; omits assigned action mnemonic.&#10;Consider using &lt;code&gt;presentation.setTextWithMnemonic(getTemplatePresentation().getTextWithPossibleMnemonic())&lt;/code&gt; instead." suppressId="PresentationTextCopyMnemonic" text="$presentation1$.setText($presentation2$.getText())" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$presentation1$.setTextWithMnemonic($presentation2$.getTextWithPossibleMnemonic())">
        <constraint name="presentation1" nameOfExprType="com\.intellij\.openapi\.actionSystem\.Presentation" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="presentation2" nameOfExprType="com\.intellij\.openapi\.actionSystem\.Presentation" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Presentation text copying will lose mnemonic" description="&lt;code&gt;Presentation.getText()&lt;/code&gt; omits assigned action mnemonic.&#10;Consider using &lt;code&gt;presentation.setTextWithMnemonic(getTemplatePresentation().getTextWithPossibleMnemonic())&lt;/code&gt; instead." suppressId="PresentationTextCopyMnemonic" text="$presentation1$.setText($presentation2$.getText())" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$presentation1$.setTextWithMnemonic($presentation2$.getTextWithPossibleMnemonic())">
        <constraint name="presentation1" nameOfExprType="com\.intellij\.openapi\.actionSystem\.Presentation" within="" contains="" />
        <constraint name="presentation2" nameOfExprType="com\.intellij\.openapi\.actionSystem\.Presentation" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Presentation text copying will lose mnemonic" description="&lt;code&gt;Presentation.getText()&lt;/code&gt; omits assigned action mnemonic.&#10;Consider using &lt;code&gt;presentation.setTextWithMnemonic(getTemplatePresentation().getTextWithPossibleMnemonic())&lt;/code&gt; instead." suppressId="PresentationTextCopyMnemonic" text="$presentation1$.text = $presentation2$.text" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$presentation1$.setTextWithMnemonic($presentation2$.textWithPossibleMnemonic)">
        <constraint name="presentation1" nameOfExprType="com\.intellij\.openapi\.actionSystem\.Presentation" within="" contains="" />
        <constraint name="presentation2" nameOfExprType="com\.intellij\.openapi\.actionSystem\.Presentation" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="PsiManager.getInstance(psiElement.getProject())" text="com.intellij.psi.PsiManager.getInstance($psiElement$.getProject())" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="$psiElement$.getManager()">
        <constraint name="psiElement" nameOfExprType="com\.intellij\.psi\.PsiElement" exprTypeWithinHierarchy="true" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="PsiManager.getInstance(psiElement.getProject())" text="$QUALIFIER$.getInstance($psiElement$.project)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$psiElement$.manager">
        <constraint name="psiElement" nameOfExprType="com\.intellij\.psi\.PsiElement" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
        <constraint name="QUALIFIER" nameOfExprType="com\.intellij\.psi\.PsiManager" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Raw runBlocking" description="Standard library `runBlocking` may block indefinitely because does not take thread context `Job` or thread `ProgressIndicator` into account.&#10;Use `com.intellij.openapi.progress.runBlockingCancellable` instead. Read its doc if it fails with an error that there is no job or indicator in the current thread." suppressId="RAW_RUN_BLOCKING" problemDescriptor="Use `runBlockingCancellable` instead" text="runBlocking {&#10;  $statement$&#10;}&#10;" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.openapi.progress.runBlockingCancellable {&#10;  $statement$&#10;}&#10;">
        <constraint name="__context__" within="" contains="" />
        <constraint name="statement" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Raw runBlocking" text="runBlocking($context$, $block$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.openapi.progress.runBlockingCancellable {&#10;  withContext($context$, $block$)&#10;}">
        <constraint name="__context__" within="" contains="" />
        <constraint name="context" within="" contains="" />
        <constraint name="block" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Raw runBlocking" text="runBlocking($context$) {&#10;  $statement$&#10;}" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.openapi.progress.runBlockingCancellable {&#10;  withContext($context$) {&#10;    $statement$&#10;  }&#10;}">
        <constraint name="__context__" within="" contains="" />
        <constraint name="statement" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="context" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Raw runBlocking" text="runBlocking(block = $block$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.openapi.progress.runBlockingCancellable($block$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="block" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="reachabilityFence() shouldn't be called with complex expression" description="Only local variable references and &quot;this&quot; should be passed to reachabilityFence() method. &#10;Passing complex expression which calculate/create some object doesn't make sense &#10;because avoiding garbage-collecting this object is trivial when the object is just created. " problemDescriptor="Only locals/'this' should be passed to reachabilityFence()" text="reachabilityFence($k$);" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="k" regexp="\w+" negateName="true" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="remove test-only branch and use UIUtil.dispatchAllInvocationEvents() in tests" uuid="07f04ba3-90ed-3e4d-9f88-e45dfaa05771" text="if ($APP$.isUnitTestMode()) {&#10;  $DO$;&#10;} else {&#10;  $APP2$.$INV$($ARGS$);&#10;}" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="APP" within="" contains="" />
        <constraint name="APP2" within="" contains="" />
        <constraint name="INV" regexp="(invoke.*)|(.*Later.*)" within="" contains="" />
        <constraint name="ARGS" maxCount="2147483647" within="" contains="" />
        <constraint name="DO" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="remove test-only branch and use UIUtil.dispatchAllInvocationEvents() in tests" uuid="07f04ba3-90ed-3e4d-9f88-e45dfaa05771" text="if (!$APP$.isUnitTestMode()) {&#10;  $APP2$.$INV$($ARGS$);&#10;} else {&#10;  $DO$;&#10;}" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="if (!$APP$.isUnitTestMode()) {&#10;  $APP2$.$INV$($ARGS$);&#10;} else {&#10;  $DO$;&#10;}">
        <constraint name="__context__" within="" contains="" />
        <constraint name="APP" within="" contains="" />
        <constraint name="APP2" within="" contains="" />
        <constraint name="INV" regexp="(invoke.*)|(.*Later.*)" within="" contains="" />
        <constraint name="ARGS" maxCount="2147483647" within="" contains="" />
        <constraint name="DO" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="remove test-only branch and use UIUtil.dispatchAllInvocationEvents() in tests" uuid="07f04ba3-90ed-3e4d-9f88-e45dfaa05771" text="if ($APP$.isUnitTestMode()) {&#10;  $DO$&#10;} else {&#10;  $APP2$.$INV$($ARGS$)&#10;}" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="APP" within="" contains="" />
        <constraint name="APP2" within="" contains="" />
        <constraint name="INV" regexp="(invoke.*)|(.*Later.*)" within="" contains="" />
        <constraint name="ARGS" maxCount="2147483647" within="" contains="" />
        <constraint name="DO" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="remove test-only branch and use UIUtil.dispatchAllInvocationEvents() in tests" uuid="07f04ba3-90ed-3e4d-9f88-e45dfaa05771" text="if (!$APP$.isUnitTestMode()) {&#10;  $APP2$.$INV$($ARGS$)&#10;} else {&#10;  $DO$&#10;}" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="APP" within="" contains="" />
        <constraint name="APP2" within="" contains="" />
        <constraint name="INV" regexp="(invoke.*)|(.*Later.*)" within="" contains="" />
        <constraint name="ARGS" maxCount="2147483647" within="" contains="" />
        <constraint name="DO" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Replace explicit RExpression#getType() with RTypeUtil#getType()" uuid="260bf7ef-989c-3b5b-b926-edbfeb9271cc" text="((RExpression)$foo$).getType()" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="org.jetbrains.plugins.ruby.ruby.codeInsight.types.RTypeUtil.getType($foo$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="foo" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Replace explicit RExpression#getType() with RTypeUtil#getType()" uuid="260bf7ef-989c-3b5b-b926-edbfeb9271cc" text="($foo$ as RExpression).type" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="org.jetbrains.plugins.ruby.ruby.codeInsight.types.RTypeUtil.getType($foo$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="foo" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="searchable configurable should not contain JComponent fields" text="class $Class$ implements SearchableConfigurable{ &#10;  @Modifier(&quot;Instance&quot;) $FieldType$ $FieldName$ = $Init$;&#10;  public void disposeUIResources(){}&#10;}" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default">
        <constraint name="Class" target="true" within="" contains="" />
        <constraint name="FieldType" regexp="javax.swing.JComponent" withinHierarchy="true" formalTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="FieldName" maxCount="2147483647" within="" contains="" />
        <constraint name="Init" minCount="0" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="searchable configurable should not contain JComponent fields" text="class $Class$: SearchableConfigurable { &#10;  @Modifier(&quot;Instance&quot;) val $FieldName$ = $Init$&#10;  fun disposeUIResources() {}&#10;}" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default">
        <constraint name="Class" target="true" within="" contains="" />
        <constraint name="FieldName" within="" contains="" />
        <constraint name="Init" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Simplify array copy" uuid="659d106f-8fba-3493-bc68-22b1511378b7" description="replace System.arraycopy() and other manual array manipulations with more clear utility methods&#10;" text="$result$ = new $b$[$a$.length];&#10;System.arraycopy($a$, 0, $result$, 0, $a$.length);" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$result$ = $a$.clone();">
        <constraint name="__context__" within="" contains="" />
        <constraint name="result" within="" contains="" />
        <constraint name="a" within="" contains="" />
        <constraint name="b" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Simplify array copy" uuid="659d106f-8fba-3493-bc68-22b1511378b7" text="$b$[] $result$ = new $b$[$a$.length];&#10;System.arraycopy($a$, 0, $result$, 0, $a$.length);" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$b$[] $result$ = $a$.clone();">
        <constraint name="__context__" within="" contains="" />
        <constraint name="result" within="" contains="" />
        <constraint name="a" within="" contains="" />
        <constraint name="b" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Simplify array copy" uuid="659d106f-8fba-3493-bc68-22b1511378b7" text="java.util.Arrays.copyOf($original$, $original$.length)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$original$.clone()">
        <constraint name="__context__" within="" contains="" />
        <constraint name="original" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Simplify array copy" uuid="659d106f-8fba-3493-bc68-22b1511378b7" text="$result$ = new $b$[$a$.length];&#10;System.arraycopy($a$, 0, $result$, 0, $result$.length);" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$result$ = $a$.clone();">
        <constraint name="__context__" within="" contains="" />
        <constraint name="result" within="" contains="" />
        <constraint name="a" within="" contains="" />
        <constraint name="b" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Simplify array copy" uuid="659d106f-8fba-3493-bc68-22b1511378b7" text="$b$[] $result$ = new $b$[$a$.length];&#10;System.arraycopy($a$, 0, $result$, 0, $result$.length);" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$b$[] $result$ = $a$.clone();">
        <constraint name="__context__" within="" contains="" />
        <constraint name="result" within="" contains="" />
        <constraint name="a" within="" contains="" />
        <constraint name="b" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Storing localized strings in static fields prevents dynamic loading of language bundles" description="When references to localized strings are stored in static fields,&#10;it is impossible to dynamically unload the resources. This means a &#10;user will need to restart their IDE for the affected UI elements to &#10;get the updated text, after enabling or disabling a language pack.&#10;&lt;p&gt;&#10;To fix the problem use a &lt;code&gt;Bundle.message()&lt;/code&gt; call directly &#10;instead of storing its value in a &lt;code&gt;static&lt;/code&gt; field. Or use &#10;&lt;code&gt;Bundle.messagePointer()&lt;/code&gt; if that is not possible." text="$bundle$.$message$(&quot;$s$&quot;, $p$)" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="__context__" script="&quot;import com.intellij.psi.*;&#10;import com.intellij.psi.util.*;&#10;PsiElement member = PsiTreeUtil.getParentOfType(__context__, PsiMember.class, PsiLambdaExpression.class)&#10;if (member instanceof PsiClassInitializer) {&#10;  PsiElement parent = member.getParent()&#10;  if (parent instanceof PsiAnonymousClass) {&#10;    // yuk, double brace initialization&#10;    member = PsiTreeUtil.getParentOfType(parent, PsiMember.class, PsiLambdaExpression.class)&#10;  }&#10;}&#10;return member instanceof PsiField &amp;&amp; member.hasModifierProperty(PsiModifier.STATIC)&quot;" within="" contains="" />
        <constraint name="s" within="" contains="" />
        <constraint name="bundle" regexp="AbstractBundle" withinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="p" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="message" regexp="message" target="true" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" description="Reports stream statements that can be replaced &#10;with a call to a &lt;code&gt;ContainerUtil&lt;/code&gt; method.&#10;Stream statements create Stream instances, while&#10;equivalent ContainerUtil method calls don't." problemDescriptor="Can be replaced with ContainerUtil call" text="Arrays.stream($m$).allMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.and($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" nameOfExprType="Object\[\]" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="Arrays.stream($m$).anyMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.exists($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" nameOfExprType="Object\[\]" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="Arrays.stream($m$).noneMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="!com.intellij.util.containers.ContainerUtil.exists($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" nameOfExprType="Object\[\]" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="Stream.of($m$).allMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.and($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="Stream.of($m$).anyMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.or($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="Stream.of($m$).noneMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="!com.intellij.util.containers.ContainerUtil.exists($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="StreamEx.of($m$).allMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.and($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="StreamEx.of($m$).anyMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.or($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="StreamEx.of($m$).noneMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="!com.intellij.util.containers.ContainerUtil.exists($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="$f$.stream().map($m$).collect(Collectors.toList())" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.map($f$, $m$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="f" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="m" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="Arrays.stream($f$).map($m$).collect(Collectors.toList())" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.map($f$, $m$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="f" within="" contains="" />
        <constraint name="m" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="Stream.of($f$).map($m$).collect(Collectors.toList())" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.map($f$, $m$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="f" within="" contains="" />
        <constraint name="m" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="StreamEx.of($f$).map($m$).collect(Collectors.toList())" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.map($f$, $m$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="f" within="" contains="" />
        <constraint name="m" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="$l$.stream().filter($f$).collect(Collectors.toList())" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.filter($l$, $f$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="Arrays.stream($l$).filter($f$).collect(Collectors.toList())" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.filter($l$, $f$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="$l$.stream().filter($f$).findAny().orElse(null)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.find($l$, $f$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="$l$.stream().filter($f$).findFirst().orElse(null)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.find($l$, $f$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="Arrays.stream($l$).filter($f$).findAny().orElse(null)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.find($l$, $f$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="Arrays.stream($l$).filter($f$).findFirst().orElse(null)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.find($l$, $f$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="$m$.stream().noneMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="!com.intellij.util.containers.ContainerUtil.exists($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="$m$.stream().allMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.and($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="$m$.stream().anyMatch($p$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.exists($m$, $p$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="$l$.stream().map($dd$).toList()" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.map($l$, $dd$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="dd" within="" contains="" />
        <constraint name="l" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="StreamEx.of($states$).map($dd$).toList()" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.map($states$, $dd$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="states" within="" contains="" />
        <constraint name="dd" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="StreamEx.of($f$).select($c$).toList()" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.filterIsInstance($f$, $c$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="f" within="" contains="" />
        <constraint name="c" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Stream expression can be replaced with ContainerUtil call" uuid="1299c1fd-42c2-3e16-acef-db5a14c07955" text="StreamEx.of($f$).select($c$).collect(Collectors.toList())" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.util.containers.ContainerUtil.filterIsInstance($f$, $c$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="f" within="" contains="" />
        <constraint name="c" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="String.getBytes() is current locale-dependant, use String.getBytes(Charset) instead" text="$s$.getBytes()" recursive="false" caseInsensitive="true" type="JAVA">
        <constraint name="s" nameOfExprType="java.lang.String" exprTypeWithinHierarchy="true" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="String.getBytes() is current locale-dependant, use String.getBytes(Charset) instead" text="$s$.bytes" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="s" nameOfExprType="java.lang.String" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="StringUtil.indexOf(String, char) -&gt; String.indexOf(char)" text="com.intellij.openapi.util.text.StringUtil.indexOf($s$, $c$)" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="false" shortenFQN="false" replacement="$s$.indexOf($c$)">
        <constraint name="s" nameOfExprType="java.lang.String" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="c" nameOfExprType="char" exprTypeWithinHierarchy="true" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="StringUtil.indexOf(String, char) -&gt; String.indexOf(char)" text="$StringUtil$.indexOf($s$, $c$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="$s$.indexOf($c$)">
        <constraint name="s" nameOfExprType="java.lang.String" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="c" nameOfExprType="char" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
        <constraint name="StringUtil" nameOfExprType="com\.intellij\.openapi\.util\.text\.StringUtil" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="StringUtil.stripQuotesAroundValue()" uuid="c6a8c3bf-5d86-3fd2-875a-ddbd9c98648a" text="com.intellij.openapi.util.text.StringUtil.stripQuotesAroundValue($Parameter$)" recursive="false" caseInsensitive="false" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.text.StringUtil.unquoteString($Parameter$)">
        <constraint name="Parameter" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="StringUtil.stripQuotesAroundValue()" uuid="c6a8c3bf-5d86-3fd2-875a-ddbd9c98648a" text="$StringUtil$.stripQuotesAroundValue($Parameter$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.openapi.util.text.StringUtil.unquoteString($Parameter$)">
        <constraint name="Parameter" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
        <constraint name="StringUtil" nameOfExprType="com\.intellij\.openapi\.util\.text\.StringUtil" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="submit() creates unnecessary Future" text="$e$.submit($d$);" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$e$.execute($d$);">
        <constraint name="__context__" within="" contains="" />
        <constraint name="e" nameOfExprType="java\.util\.concurrent\.ExecutorService" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="d" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="submit() creates unnecessary Future" text="$e$.submit($d$);" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$e$.execute($d$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="e" nameOfExprType="java\.util\.concurrent\.ExecutorService" exprTypeWithinHierarchy="true" within="" contains="" />
        <constraint name="d" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="super.update() in AnAction subclass" text="$super$.update($e$);" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="">
        <constraint name="__context__" target="true" within="" contains="" />
        <constraint name="super" regexp="super" nameOfExprType="AnAction|DumbAwareAction" within="" contains="" />
        <constraint name="e" nameOfExprType="AnActionEvent" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="super.update() in AnAction subclass" text="$super$.update($e$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="false" replacement="">
        <constraint name="__context__" target="true" within="" contains="" />
        <constraint name="super" regexp="super" nameOfExprType="AnAction" within="" contains="" />
        <constraint name="e" nameOfExprType="AnActionEvent" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Suppressed exceptions are ignored" text="try {&#10;  $TryStatement$;&#10;} &#10;finally {&#10;  $s1$;&#10;  super.tearDown();&#10;  $s2$;&#10;}" recursive="true" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="try {&#10;  $TryStatement$;&#10;} &#10;catch (Throwable e) {&#10;  addSuppressedException(e);&#10;}&#10;finally {&#10;  $s1$; super.tearDown(); $s2$;&#10;}">
        <constraint name="__context__" script="com.intellij.psi.PsiTryStatement ts = com.intellij.psi.util.PsiTreeUtil.getParentOfType(__context__, com.intellij.psi.PsiTryStatement.class, false); return ts != null &amp;&amp; ts.getCatchSections().length == 0" within="" contains="" />
        <constraint name="TryStatement" maxCount="2147483647" within="" contains="" />
        <constraint name="s1" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="s2" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Suppressed exceptions are ignored" text="try {&#10;  $TryStatement$&#10;} &#10;finally {&#10;  $s1$&#10;  super.tearDown()&#10;  $s2$&#10;}" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="try {&#10;  $TryStatement$&#10;} &#10;catch (e: Throwable) {&#10;  addSuppressedException(e)&#10;}&#10;finally {&#10;  $s1$super.tearDown()$s2$&#10;}">
        <constraint name="__context__" script="&quot;org.jetbrains.kotlin.psi.KtTryExpression ts = com.intellij.psi.util.PsiTreeUtil.getParentOfType(__context__, org.jetbrains.kotlin.psi.KtTryExpression.class, false); return ts != null &amp;&amp; ts.catchClauses.size() == 0&quot;" within="" contains="" />
        <constraint name="TryStatement" maxCount="2147483647" within="" contains="" />
        <constraint name="s1" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="s2" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Suspicious usage of PsiUtilBase#findEditor inside quick fix, probably better idea to use LocalQuickFixAndIntentionActionOnPsiElement" text="$Instance$.$MethodCall$($Parameter$)" recursive="false" caseInsensitive="false" type="JAVA">
        <constraint name="Instance" regexp="com.intellij.psi.util.PsiUtilBase" minCount="0" within="" contains="" />
        <constraint name="MethodCall" script="&quot;import com.intellij.psi.PsiClass&#10;import com.intellij.psi.util.InheritanceUtil&#10;import com.intellij.psi.util.PsiTreeUtil&#10;&#10;PsiClass aClass = PsiTreeUtil.getParentOfType(__context__, PsiClass.class)&#10;aClass != null &amp;&amp; InheritanceUtil.isInheritor(aClass, &quot;com.intellij.codeInspection.LocalQuickFix&quot;)&quot;" regexp="findEditor" target="true" within="" contains="" />
        <constraint name="Parameter" minCount="0" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Suspicious usage of PsiUtilBase#findEditor inside quick fix, probably better idea to use LocalQuickFixAndIntentionActionOnPsiElement" text="$Instance$.$MethodCall$($Parameter$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default">
        <constraint name="Instance" regexp="com.intellij.psi.util.PsiUtilBase" minCount="0" within="" contains="" />
        <constraint name="MethodCall" script="&quot;import com.intellij.psi.PsiClass&#10;import com.intellij.psi.util.InheritanceUtil&#10;import com.intellij.psi.util.PsiTreeUtil&#10;&#10;PsiClass aClass = PsiTreeUtil.getParentOfType(__context__, PsiClass.class)&#10;aClass != null &amp;&amp; InheritanceUtil.isInheritor(aClass, &quot;com.intellij.codeInspection.LocalQuickFix&quot;)&quot;" regexp="findEditor" target="true" within="" contains="" />
        <constraint name="Parameter" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="SwingWorker generates too many threads; use Application.execute*() instead" text="javax.swing.SwingWorker" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="SwingWorker generates too many threads; use Application.execute*() instead" text="javax.swing.SwingWorker" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="TextRange can be simplified" text="com.intellij.openapi.util.TextRange.create($t$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$t$">
        <constraint name="__context__" script="&quot;__context__ instanceof com.intellij.psi.PsiExpression &#10;  &amp;&amp; ((com.intellij.psi.PsiExpression)__context__).getType() != null &#10;  &amp;&amp; ((com.intellij.psi.PsiExpression)__context__).getType().getCanonicalText().equals(&quot;com.intellij.openapi.util.TextRange&quot;)&quot;" within="" contains="" />
        <constraint name="t" nameOfExprType="com\.intellij\.openapi\.util\.TextRange" exprTypeWithinHierarchy="true" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="TextRange can be simplified" text="TextRange.create($t$)" recursive="false" caseInsensitive="true" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$t$.getTextRange()">
        <constraint name="__context__" within="" contains="" />
        <constraint name="t" nameOfExprType="com\.intellij\.openapi\.editor" exprTypeWithinHierarchy="true" within="" contains="" />
      </replaceConfiguration>
      <searchConfiguration name="Timer creates/leaks threads" description="java.util.Timer eagerly creates a Thread on its start, which is too expensive. Please use ApplicationExecutionUtil.getScheduledExecutorService() instead  &#10;&#10;" text="new java.util.Timer($p$)" recursive="true" caseInsensitive="true" type="JAVA" pattern_context="default" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" minCount="0" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Timer creates/leaks threads" text="Timer($p$)" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" minCount="0" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="TokenSet.create(TokenType.WHITE_SPACE) -&gt; TokenSet.WHITE_SPACE" text="com.intellij.psi.tree.TokenSet.create(com.intellij.psi.TokenType.WHITE_SPACE)" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.psi.tree.TokenSet.WHITE_SPACE" />
      <replaceConfiguration name="TokenSet.create(TokenType.WHITE_SPACE) -&gt; TokenSet.WHITE_SPACE" text="$TokenSet$.create(com.intellij.psi.TokenType.WHITE_SPACE)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="com.intellij.psi.tree.TokenSet.WHITE_SPACE">
        <constraint name="__context__" within="" contains="" />
        <constraint name="TokenSet" nameOfExprType="com\.intellij\.psi\.tree\.TokenSet" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Too concrete fastutil class" text="Object2IntOpenHashMap&lt;$e$&gt; $p$;" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="it.unimi.dsi.fastutil.objects.Object2IntMap&lt;$e$&gt; $p$;">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" within="" contains="" />
        <constraint name="e" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Too concrete fastutil class" text="it.unimi.dsi.fastutil.ints.IntArrayList $p$;" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="it.unimi.dsi.fastutil.ints.IntList $p$;">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Too concrete fastutil class" text="Int2ObjectOpenHashMap&lt;$e$&gt; $p$;" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="it.unimi.dsi.fastutil.ints.Int2ObjectMap&lt;$e$&gt; $p$;">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" within="" contains="" />
        <constraint name="e" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Too concrete fastutil class" text="Object2LongOpenHashMap&lt;$e$&gt; $p$;" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="it.unimi.dsi.fastutil.objects.Object2LongMap&lt;$e$&gt; $p$;">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" within="" contains="" />
        <constraint name="e" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Too concrete fastutil class" text="Long2ObjectOpenHashMap&lt;$e$&gt; $p$;" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="it.unimi.dsi.fastutil.longs.Long2ObjectMap&lt;$e$&gt; $p$;">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" within="" contains="" />
        <constraint name="e" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Too concrete fastutil class" text="Object2IntOpenCustomHashMap&lt;$e$&gt; $p$;" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="it.unimi.dsi.fastutil.objects.Object2IntMap&lt;$e$&gt; $p$;">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" within="" contains="" />
        <constraint name="e" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Too concrete fastutil class" text="Object2LongOpenCustomHashMap&lt;$e$&gt; $p$;" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="it.unimi.dsi.fastutil.objects.Object2LongMap&lt;$e$&gt; $p$;">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" within="" contains="" />
        <constraint name="e" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Too concrete fastutil class" text="it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap $p$;" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="it.unimi.dsi.fastutil.ints.Int2IntMap $p$;">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Too concrete fastutil class" text="it.unimi.dsi.fastutil.longs.Long2LongOpenHashMap $p$;" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="it.unimi.dsi.fastutil.longs.Long2LongMap $p$;">
        <constraint name="__context__" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Too convoluted &quot;register(()-&gt;dispose())&quot; (wastes memory)" text="Disposer.register($myRoot$, () -&gt; Disposer.dispose($myFolder2$));" recursive="true" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="true" shortenFQN="true" replacement="Disposer.register($myRoot$, $myFolder2$);">
        <constraint name="__context__" within="" contains="" />
        <constraint name="myRoot" within="" contains="" />
        <constraint name="myFolder2" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Too convoluted &quot;register(()-&gt;dispose())&quot; (wastes memory)" text="Disposer.register($myRoot$) { Disposer.dispose($myFolder2$) }" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="Disposer.register($myRoot$, $myFolder2$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="myRoot" within="" contains="" />
        <constraint name="myFolder2" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use !Strings.areSameInstance instead of '!='" uuid="c51501cf-f7af-3a6e-99f9-1f307c8d83a1" description="Comparing Strings by references usually indicate a mistake, if you really need to do this (for performance reeasons or to implement &quot;Sentinel&quot; pattern), use Strings.areSameInstance method to make the intention explicit and get rid of warning." suppressId="StringNegatedEqualitySSR" problemDescriptor="Use !Strings.areSameInstance instead of '!=' if you really need to compare strings by reference" text="$s1$ != $s2$" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="!com.intellij.openapi.util.text.Strings.areSameInstance($s1$, $s2$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="s1" nameOfExprType="java\.lang\.String" within="" contains="" />
        <constraint name="s2" nameOfExprType="java\.lang\.String" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="use explicit toArray() method" text="com.intellij.util.ArrayUtil.toObjectArray($collection$, $class$.class)" recursive="false" caseInsensitive="true" type="JAVA" reformatAccordingToStyle="false" shortenFQN="false" replacement="$collection$.toArray(new $class$[0])">
        <constraint name="__context__" within="" contains="" />
        <constraint name="class" within="" contains="" />
        <constraint name="collection" nameOfExprType="java\.util\.Collection" exprTypeWithinHierarchy="true" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="java.lang.Boolean.TRUE" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="true">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="java.lang.Boolean.FALSE" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="false">
        <constraint name="__context__" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="Arrays.stream($m$).allMatch { $p$ }" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$m$.all { $p$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="Arrays.stream($m$).anyMatch { $p$ }" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$m$.any { $p$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="Arrays.stream($m$).noneMatch { $p$ }" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$m$.none { $p$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="Arrays.stream($f$).map{$m$}.collect(Collectors.toList())" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$f$.map{$m$}">
        <constraint name="__context__" within="" contains="" />
        <constraint name="f" within="" contains="" />
        <constraint name="m" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="Arrays.stream($l$).filter { $f$ }.collect(Collectors.toList())" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$l$.filter { $f$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="Arrays.stream($l$).filter { $f$ }.findFirst().orElse(null)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$l$.find { $f$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="Arrays.stream($l$).filter { $f$ }.findAny().orElse(null)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$l$.find { $f$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="Stream.of($m$).allMatch { $p$ }" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$m$.all { $p$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="Stream.of($m$).anyMatch { $p$ }" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$m$.any { $p$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="Stream.of($m$).noneMatch { $p$ }" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="false" shortenFQN="true" replacement="$m$.none { $p$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="Stream.of($f$).map { $m$ }.collect(Collectors.toList())" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$f$.map { $m$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="f" within="" contains="" />
        <constraint name="m" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="StreamEx.of($m$).allMatch { $p$ }" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$m$.all { $p$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="StreamEx.of($m$).anyMatch { $p$ }" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$m$.any { $p$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="StreamEx.of($m$).noneMatch { $p$ }" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$m$.none { $p$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="m" within="" contains="" />
        <constraint name="p" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$f$.stream().map { $m$ }.collect(Collectors.toList())" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$f$.map { $m$ }.toList()">
        <constraint name="__context__" within="" contains="" />
        <constraint name="f" within="" contains="" />
        <constraint name="m" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$l$.stream().filter { $f$ }.collect(Collectors.toList())" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$l$.filter { $f$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$l$.stream().filter { $f$ }.findAny().orElse(null)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$l$.find { $f$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$l$.stream().filter { $f$ }.findFirst().orElse(null)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="$l$.find { $f$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="l" within="" contains="" />
        <constraint name="f" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$Optional$.ofNullable($nullable$).$map$($mapper$).orElse($orElse$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$nullable$?.let($mapper$) ?: $orElse$">
        <constraint name="__context__" within="" contains="" />
        <constraint name="map" regexp="map" within="" contains="" _kotlinMatchCallSemantics="enabled" />
        <constraint name="mapper" within="" contains="" />
        <constraint name="orElse" within="" contains="" />
        <constraint name="Optional" nameOfExprType="java\.util\.Optional" minCount="0" within="" contains="" />
        <constraint name="nullable" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$Objects$.requireNonNull($expression$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$expression$!!">
        <constraint name="__context__" within="" contains="" />
        <constraint name="expression" within="" contains="" />
        <constraint name="Objects" nameOfExprType="java\.util\.Objects" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$StringUtil$.notNullize($s$, &quot;&quot;)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="($s$ ?: &quot;&quot;)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="s" within="" contains="" />
        <constraint name="StringUtil" nameOfExprType="com\.intellij\.openapi\.util\.text\.StringUtil" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$StringUtil$.notNullize($s$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="($s$ ?: &quot;&quot;)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="s" within="" contains="" />
        <constraint name="StringUtil" nameOfExprType="com\.intellij\.openapi\.util\.text\.StringUtil" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$StringUtil$.endsWith($string1$, $string2$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$string1$.endsWith($string2$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="string1" within="" contains="" />
        <constraint name="string2" within="" contains="" />
        <constraint name="StringUtil" nameOfExprType="com\.intellij\.openapi\.util\.text\.StringUtil" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$StringUtil$.trimEnd($string$, $suffix$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$string$.removeSuffix($suffix$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="string" within="" contains="" />
        <constraint name="suffix" within="" contains="" />
        <constraint name="StringUtil" nameOfExprType="com\.intellij\.openapi\.util\.text\.StringUtil" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$StringUtil$.trimStart($string$, $prefix$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$string$.removePrefix($prefix$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="string" within="" contains="" />
        <constraint name="StringUtil" nameOfExprType="com\.intellij\.openapi\.util\.text\.StringUtil" minCount="0" within="" contains="" />
        <constraint name="prefix" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$StringUtil$.isEmptyOrSpaces($str$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$str$.isNullOrBlank()">
        <constraint name="__context__" within="" contains="" />
        <constraint name="str" within="" contains="" />
        <constraint name="StringUtil" nameOfExprType="com\.intellij\.openapi\.util\.text\.StringUtil" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ObjectUtils$.doIfNotNull($Parameter$){$param$ -&gt; $param$.$Action$}" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$Parameter$?.$Action$">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
        <constraint name="Action" within="" contains="" />
        <constraint name="param" within="" contains="" />
        <constraint name="ObjectUtils" nameOfExprType="com\.intellij\.util\.ObjectUtils" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ObjectUtils$.doIfNotNull($Parameter$){$param$ -&gt; $Action$}" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$Parameter$?.let{$param$ -&gt; $Action$}">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
        <constraint name="Action" within="" contains="" />
        <constraint name="ObjectUtils" nameOfExprType="com\.intellij\.util\.ObjectUtils" minCount="0" within="" contains="" />
        <constraint name="param" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ObjectUtils$.doIfNotNull($Parameter$, {$param$ -&gt; $param$.$Action$})" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$Parameter$?.$Action$">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
        <constraint name="Action" within="" contains="" />
        <constraint name="param" within="" contains="" />
        <constraint name="ObjectUtils" nameOfExprType="com\.intellij\.util\.ObjectUtils" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ObjectUtils$.doIfNotNull($Parameter$, {$param$ -&gt; $Action$})" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$Parameter$?.let{$param$ -&gt; $Action$}">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
        <constraint name="Action" within="" contains="" />
        <constraint name="ObjectUtils" nameOfExprType="com\.intellij\.util\.ObjectUtils" minCount="0" within="" contains="" />
        <constraint name="param" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ObjectUtils$.doIfNotNull($Parameter$, Function {$param$ -&gt; $param$.$Action$})" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$Parameter$?.$Action$">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
        <constraint name="Action" within="" contains="" />
        <constraint name="param" within="" contains="" />
        <constraint name="ObjectUtils" nameOfExprType="com\.intellij\.util\.ObjectUtils" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ObjectUtils$.doIfNotNull($Parameter$, Function {$param$ -&gt; $Action$})" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$Parameter$?.let{$param$ -&gt; $Action$}">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
        <constraint name="Action" within="" contains="" />
        <constraint name="ObjectUtils" nameOfExprType="com\.intellij\.util\.ObjectUtils" minCount="0" within="" contains="" />
        <constraint name="param" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ObjectUtils$.doIfNotNull($Parameter$, Function {$Action$})" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$Parameter$?.let{$Action$}">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Parameter" within="" contains="" />
        <constraint name="Action" within="" contains="" />
        <constraint name="ObjectUtils" nameOfExprType="com\.intellij\.util\.ObjectUtils" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ObjectUtils$.tryCast($Expression$, $clazz$::class.java)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="($Expression$ as? $clazz$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ObjectUtils" nameOfExprType="com.intellij.util.ObjectUtils" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="clazz" within="" contains="" />
        <constraint name="Expression" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ObjectUtils$.notNull($expr$, { $notNullExpr$ })" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="(($expr$) ?: $notNullExpr$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="expr" within="" contains="" />
        <constraint name="notNullExpr" within="" contains="" />
        <constraint name="ObjectUtils" nameOfExprType="com\.intellij\.util\.ObjectUtils" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ObjectUtils$.notNull($expr$, NotNullFactory { $notNullExpr$ })" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="(($expr$) ?: $notNullExpr$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="expr" within="" contains="" />
        <constraint name="notNullExpr" within="" contains="" />
        <constraint name="ObjectUtils" nameOfExprType="com\.intellij\.util\.ObjectUtils" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ObjectUtils$.notNull($expression$, $orElse$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="(($expression$) ?: $orElse$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ObjectUtils" nameOfExprType="com\.intellij\.util\.ObjectUtils" minCount="0" within="" contains="" />
        <constraint name="expression" within="" contains="" />
        <constraint name="orElse" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ArrayUtil$.indexOf($array$, $element$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$array$.indexOf($element$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ArrayUtil" nameOfExprType="com\.intellij\.util\.ArrayUtil" minCount="0" within="" contains="" />
        <constraint name="array" within="" contains="" />
        <constraint name="element" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ArrayUtil$.getFirstElement($array$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$array$.firstOrNull()">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ArrayUtil" nameOfExprType="com\.intellij\.util\.ArrayUtil" minCount="0" within="" contains="" />
        <constraint name="array" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ArrayUtil$.getLastElement($array$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$array$.lastOrNull()">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ArrayUtil" nameOfExprType="com\.intellij\.util\.ArrayUtil" minCount="0" within="" contains="" />
        <constraint name="array" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.$find$($container$, $expr$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$container$.find($expr$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="find" regexp="find" within="" contains="" _kotlinMatchCallSemantics="enabled" />
        <constraint name="container" within="" contains="" />
        <constraint name="expr" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.getFirstItem($container$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$container$.firstOrNull()">
        <constraint name="__context__" within="" contains="" />
        <constraint name="container" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.getLastItem($container$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$container$.lastOrNull()">
        <constraint name="__context__" within="" contains="" />
        <constraint name="container" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.$all$($container$, $condition$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$container$.all($condition$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="container" within="" contains="" />
        <constraint name="condition" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="all" regexp="all" within="" contains="" _kotlinMatchCallSemantics="enabled" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.$map2Array$($Expression$, $anArray$, $Mapper$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$Expression$.map($Mapper$).toTypedArray()">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Expression" within="" contains="" />
        <constraint name="Mapper" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="map2Array" regexp="map2Array" within="" contains="" _kotlinMatchCallSemantics="enabled" />
        <constraint name="anArray" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.$filter$($Collection$, $Filter$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$Collection$.filter($Filter$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="filter" regexp="filter" within="" contains="" _kotlinMatchCallSemantics="enabled" />
        <constraint name="Collection" within="" contains="" />
        <constraint name="Filter" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.packNullables($Nullable$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="listOfNotNull($Nullable$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="Nullable" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.$and$($container$, $expr$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$container$.all($expr$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="container" within="" contains="" />
        <constraint name="expr" within="" contains="" />
        <constraint name="and" regexp="and" within="" contains="" _kotlinMatchCallSemantics="enabled" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.$or$($container$, $expr$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$container$.any($expr$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="container" within="" contains="" />
        <constraint name="expr" within="" contains="" />
        <constraint name="or" regexp="or" within="" contains="" _kotlinMatchCallSemantics="enabled" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.$map$($container$, $expr$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$container$.map($expr$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="container" within="" contains="" />
        <constraint name="expr" within="" contains="" />
        <constraint name="map" regexp="map" within="" contains="" _kotlinMatchCallSemantics="enabled" />
      </replaceConfiguration>
      <searchConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.notNullize($container$)" recursive="true" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="container" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.$exists$($container$, $expr$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$container$.any($expr$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="container" within="" contains="" />
        <constraint name="expr" within="" contains="" />
        <constraint name="exists" regexp="exists" within="" contains="" _kotlinMatchCallSemantics="enabled" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.$mapNotNull$($container$, $expr$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$container$.mapNotNull($expr$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="container" within="" contains="" />
        <constraint name="expr" within="" contains="" />
        <constraint name="mapNotNull" regexp="mapNotNull" within="" contains="" _kotlinMatchCallSemantics="enabled" />
      </replaceConfiguration>
      <replaceConfiguration name="Use Kotlin syntax instead of Java utilities or Streams" uuid="e3d20d4e-3c07-3e8a-b860-9928a874f4ef" text="$ContainerUtil$.$findAll$($container$, $expr$)" recursive="false" caseInsensitive="true" type="Kotlin" pattern_context="default" search_injected="false" reformatAccordingToStyle="true" shortenFQN="true" replacement="$container$.filter($expr$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="ContainerUtil" nameOfExprType="com\.intellij\.util\.containers\.ContainerUtil" minCount="0" within="" contains="" />
        <constraint name="container" within="" contains="" />
        <constraint name="expr" within="" contains="" />
        <constraint name="findAll" regexp="findAll" within="" contains="" _kotlinMatchCallSemantics="enabled" />
      </replaceConfiguration>
      <searchConfiguration name="use NotificationGroup.toolWindowGroup().createNotification().notify() instead" text="$Instance$.notifyByBalloon($Parameter$)" recursive="false" caseInsensitive="false" type="JAVA">
        <constraint name="Instance" nameOfExprType="com.intellij.openapi.wm.ToolWindowManager" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="Parameter" minCount="0" maxCount="2147483647" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="use NotificationGroup.toolWindowGroup().createNotification().notify() instead" text="$Instance$.notifyByBalloon($Parameter$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default">
        <constraint name="Instance" nameOfExprType="com.intellij.openapi.wm.ToolWindowManager" exprTypeWithinHierarchy="true" minCount="0" within="" contains="" />
        <constraint name="Parameter" minCount="0" maxCount="2147483647" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Use RecursionManager?" text="class $Class$ { &#10;  ThreadLocal&lt;$FieldType$&gt; $FieldName$ = $Init$;&#10;}" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default">
        <constraint name="Class" within="" contains="" />
        <constraint name="FieldType" regexp="Collection" withinHierarchy="true" target="true" within="" contains="" />
        <constraint name="FieldName" maxCount="2147483647" within="" contains="" />
        <constraint name="Init" minCount="0" within="" contains="" />
        <constraint name="__context__" within="" contains="" />
      </searchConfiguration>
      <searchConfiguration name="Use RecursionManager?" text="class $Class$ {&#10;  val $FieldName$: ThreadLocal&lt;$FieldType$&gt;&#10;}" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default">
        <constraint name="__context__" within="" contains="" />
        <constraint name="Class" within="" contains="" />
        <constraint name="FieldName" within="" contains="" />
        <constraint name="FieldType" regexp="Collection" within="" contains="" />
      </searchConfiguration>
      <replaceConfiguration name="Use Strings.areSameInstance instead of ==" description="Comparing Strings by references usually indicate a mistake, if you really need to do this (for performance reeasons or to implement &quot;Sentinel&quot; pattern), use Strings.areSameInstance method to make the intention explicit and get rid of warning." suppressId="StringEqualitySSR" problemDescriptor="Use !Strings.areSameInstance instead of '!=' if you really need to compare strings by reference" text="$s1$ == $s2$" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" search_injected="false" reformatAccordingToStyle="false" shortenFQN="true" replacement="com.intellij.openapi.util.text.Strings.areSameInstance($s1$, $s2$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="s1" nameOfExprType="java\.lang\.String" within="" contains="" />
        <constraint name="s2" nameOfExprType="java\.lang\.String" within="" contains="" />
      </replaceConfiguration>
    </inspection_tool>
    <inspection_tool class="SafeVarargsDetector" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="SeamAnnotationIncorrectSignatureInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="SeamAnnotationsInconsistencyInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="SeamBijectionIllegalScopeParameterInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="SeamBijectionTypeMismatchInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="SeamBijectionUndefinedContextVariableInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="SeamDomModelInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="SeamDuplicateComponentsInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="SeamIllegalComponentScopeInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="SeamJamComponentInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="SessionScopedInjectsRequestScoped" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="SetReplaceableByEnumSet" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="SetupCallsSuperSetup" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="SetupIsPublicVoidNoArg" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ShiftOutOfRangeJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="SillyAssignmentJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="SimplifiableIfStatement" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="SingletonInjectsScoped" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="SocketResource" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="insideTryAllowed" value="false" />
    </inspection_tool>
    <inspection_tool class="SpringFacetCodeInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="SpringFacetInspection" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="checkTestFiles" value="false" />
    </inspection_tool>
    <inspection_tool class="SpringFacetProgrammaticInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="StaticCallOnSubclass" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="StaticFieldReferenceOnSubclass" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="StaticNonFinalField" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="StaticPseudoFunctionalStyleMethod" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="StringConstructor" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="ignoreSubstringArguments" value="false" />
    </inspection_tool>
    <inspection_tool class="StringEquality" enabled="true" level="Strong Warning" enabled_by_default="true" editorAttributes="Strong Warning" />
    <inspection_tool class="StringEqualsEmptyString" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="SUPPRESS_FOR_VALUES_WHICH_COULD_BE_NULL" value="true" />
    </inspection_tool>
    <inspection_tool class="StringOperationCanBeSimplified" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreStringConstructor" value="true" />
    </inspection_tool>
    <inspection_tool class="StringToUpperWithoutLocale" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="Struts2ModelInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="StrutsInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="StrutsTilesInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="StrutsValidatorFormInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="StrutsValidatorInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="SuperTearDownInFinally" enabled="true" level="Strong Warning" enabled_by_default="true" />
    <inspection_tool class="SuspiciousLiteralUnderscore" enabled="true" level="Strong Warning" enabled_by_default="true" />
    <inspection_tool class="SwitchStatementWithConfusingDeclaration" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="SystemOutErr" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false" />
    </inspection_tool>
    <inspection_tool class="TeardownCallsSuperTeardown" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="TeardownIsPublicVoidNoArg" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="TelReferencesInspection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="TestCaseWithConstructor" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="TestCaseWithNoTestMethods" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreSupers" value="true" />
    </inspection_tool>
    <inspection_tool class="TestOnlyProblems" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="test-framework" level="WARNING" enabled="false" />
    </inspection_tool>
    <inspection_tool class="ThisExpressionReferencesGlobalObjectJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ThreadDumpStack" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false" />
    </inspection_tool>
    <inspection_tool class="ThreadStartInConstruction" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ThrowFromFinallyBlock" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ThrowFromFinallyBlockJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="ThrowablePrintStackTrace" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false" />
    </inspection_tool>
    <inspection_tool class="TrivialConditionalJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="TrivialIf" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="TrivialIfJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="TrivialStringConcatenation" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="TryWithIdenticalCatches" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="TypeParameterExtendsFinalClass" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="UNCHECKED_WARNING" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="IGNORE_UNCHECKED_ASSIGNMENT" value="false" />
      <option name="IGNORE_UNCHECKED_GENERICS_ARRAY_CREATION" value="true" />
      <option name="IGNORE_UNCHECKED_CALL" value="false" />
      <option name="IGNORE_UNCHECKED_CAST" value="false" />
      <option name="IGNORE_UNCHECKED_OVERRIDING" value="false" />
    </inspection_tool>
    <inspection_tool class="UndeclaredTests" enabled="true" level="WARNING" enabled_by_default="false">
      <scope name="Tests" level="WARNING" enabled="true" />
    </inspection_tool>
    <inspection_tool class="UninstantiableBinding" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UninstantiableImplementedByClass" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UninstantiableProvidedByClass" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessarilyQualifiedStaticUsage" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false">
        <option name="m_ignoreStaticFieldAccesses" value="false" />
        <option name="m_ignoreStaticMethodCalls" value="false" />
        <option name="m_ignoreStaticAccessFromStaticContext" value="false" />
      </scope>
      <option name="m_ignoreStaticFieldAccesses" value="false" />
      <option name="m_ignoreStaticMethodCalls" value="false" />
      <option name="m_ignoreStaticAccessFromStaticContext" value="false" />
    </inspection_tool>
    <inspection_tool class="UnnecessarilyQualifiedStaticallyImportedElement" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="UnnecessaryBoxing" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessaryContinueJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessaryFullyQualifiedName" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false">
        <option name="m_ignoreJavadoc" value="true" />
        <option name="ignoreInModuleStatements" value="true" />
      </scope>
      <option name="m_ignoreJavadoc" value="true" />
      <option name="ignoreInModuleStatements" value="true" />
    </inspection_tool>
    <inspection_tool class="UnnecessaryLabelJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessaryLabelOnBreakStatement" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessaryLabelOnBreakStatementJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessaryLabelOnContinueStatement" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessaryLabelOnContinueStatementJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessaryLocalVariable" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_ignoreImmediatelyReturnedVariables" value="false" />
      <option name="m_ignoreAnnotatedVariables" value="true" />
    </inspection_tool>
    <inspection_tool class="UnnecessaryLocalVariableJS" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="m_ignoreImmediatelyReturnedVariables" value="false" />
      <option name="m_ignoreAnnotatedVariables" value="false" />
    </inspection_tool>
    <inspection_tool class="UnnecessaryQualifierForThis" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="UnnecessaryReturnJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessaryStaticInjection" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnnecessaryUnboxing" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnreachableCodeJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnresolvedReference" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="UnsortedPropertiesFile" enabled="false" level="INFO" enabled_by_default="false" />
    <inspection_tool class="UnstableApiUsage" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="UnterminatedStatementJS" enabled="false" level="WARNING" enabled_by_default="false">
      <option name="ignoreSemicolonAtEndOfBlock" value="true" />
    </inspection_tool>
    <inspection_tool class="UnusedProperty" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="fileNameMask" value=".*Bundle\.properties" />
    </inspection_tool>
    <inspection_tool class="UseJBColor" enabled="true" level="WARNING" enabled_by_default="true">
      <scope name="Tests" level="WARNING" enabled="false" />
    </inspection_tool>
    <inspection_tool class="UseOfPropertiesAsHashtable" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="UtilityClassWithPublicConstructor" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="ValidatorConfigModelInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="ValidatorModelInspection" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="WaitNotInLoop" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="WaitNotInSynchronizedContext" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="WeakerAccess" enabled="false" level="WARNING" enabled_by_default="true">
      <option name="SUGGEST_PACKAGE_LOCAL_FOR_MEMBERS" value="false" />
      <option name="SUGGEST_PACKAGE_LOCAL_FOR_TOP_CLASSES" value="false" />
      <option name="SUGGEST_PRIVATE_FOR_INNERS" value="false" />
    </inspection_tool>
    <inspection_tool class="Weblogic" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="WhileLoopSpinsOnField" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="ignoreNonEmtpyLoops" value="false" />
    </inspection_tool>
    <inspection_tool class="WithStatementJS" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="XsltDeclarations" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="XsltTemplateInvocation" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="XsltUnusedDeclaration" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="XsltVariableShadowing" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="osmorcClassInDefaultPackage" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="osmorcNonOsgiMavenDependency" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="osmorcUnknownManifestPackage" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="osmorcUnregisteredActivator" enabled="false" level="ERROR" enabled_by_default="false" />
    <inspection_tool class="osmorcWrongImportPackage" enabled="false" level="ERROR" enabled_by_default="false" />
  </profile>
</component>