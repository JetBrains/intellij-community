UFile (package = ) [  ]
    UImportStatement (isOnDemand = false) [  ]
    UImportStatement (isOnDemand = false) [  ]
    UClass (name = Pizza) [ /**
 * Common Pizza Interface
 *
 * @see Margherita
 */ ]
        UMethod (name = getSize) [ /** The size of {@link Pizza} */ ]
        UMethod (name = getName) [ /**
     * Human-readable name of type {@link java.lang.String stringLabel}
     *
     * @throws IllegalStateException
     * @throws ClassCastException
     */ ]
        UMethod (name = contains) [ /**
     * Checks whether pizza contains the specified {@link Pizza.Ingredient}
     *
     * @param ingredient the ingredient to check
     * @exception java.lang.UnsupportedOperationException
     * @see Margherita#contains
     */ ]
            UParameter (name = ingredient) [  ]
        UClass (name = Ingredient) [ /** Ingredient of {@link Pizza} */ ]
        UClass (name = Builder) [ /**
     * Abstract {@link Pizza} builder
     *
     * @param <P> well-known hack to solve abstract builder chain problem, see {@link Builder#self}
     */ ]
            UField (name = ingredients) [  ]
                UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [  ]
                    USimpleNameReferenceExpression (identifier = HashSet) [  ]
            UMethod (name = addIngredient) [ /**
         * Adds <code>ingredient</code> to the {@link Builder#ingredients}
         *
         * @return value of type {@link P}
         */ ]
                UParameter (name = ingredient) [  ]
            UMethod (name = build) [  ]
            UMethod (name = self) [  ]
    UClass (name = Margherita) [ /**
 * Pizza Margherita
 *
 * @see Pizza
 */ ]
        UMethod (name = getSize) [ /**
     * {@link Margherita#getSize} ideal size of {@link Margherita} is of course 42
     */ ]
            UAnnotation (fqName = java.lang.Override) [  ]
            UBlockExpression [  ]
                UReturnExpression [  ]
                    ULiteralExpression (value = 42) [  ]
        UMethod (name = getName) [  ]
            UAnnotation (fqName = java.lang.Override) [  ]
            UBlockExpression [  ]
                UReturnExpression [  ]
                    UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 1)) [  ]
                        USimpleNameReferenceExpression (identifier = String) [  ]
                        ULiteralExpression (value = "Margherita") [  ]
        UMethod (name = contains) [ /**
     * Checks whether pizza contains the specified {@link Pizza.Ingredient}
     *
     * @param ingredient see {@link Pizza.Ingredient}
     */ ]
            UAnnotation (fqName = java.lang.Override) [  ]
            UParameter (name = ingredient) [  ]
            UBlockExpression [  ]
                UReturnExpression [  ]
                    ULiteralExpression (value = false) [  ]
