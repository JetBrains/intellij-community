UFile (package = ) [import java.util.LinkedList...]
    UImportStatement (isOnDemand = false) [import java.util.LinkedList]
    UClass (name = External) [public class External {...}]
        UMethod (name = foo) [public static fun foo() : boolean {...}]
            UBlockExpression [{...}] = Nothing
                UReturnExpression [return LinkedList() === LinkedList()] = Nothing
                    UBinaryExpression (operator = ===) [LinkedList() === LinkedList()] = Undetermined
                        UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [LinkedList()] = external LinkedList()()
                            USimpleNameReferenceExpression (identifier = LinkedList) [LinkedList] = external LinkedList()
                        UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [LinkedList()] = external LinkedList()()
                            USimpleNameReferenceExpression (identifier = LinkedList) [LinkedList] = external LinkedList()
        UMethod (name = bar) [public static fun bar() : boolean {...}]
            UBlockExpression [{...}] = Nothing
                UDeclarationsExpression [var list: List<Integer> = LinkedList()] = Undetermined
                    ULocalVariable (name = list) [var list: List<Integer> = LinkedList()]
                        UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [LinkedList()] = external LinkedList()()
                            USimpleNameReferenceExpression (identifier = LinkedList) [LinkedList] = external LinkedList()
                UReturnExpression [return list === list] = Nothing
                    UBinaryExpression (operator = ===) [list === list] = Undetermined (depending on: (var list = external LinkedList()()))
                        USimpleNameReferenceExpression (identifier = list) [list] = (var list = external LinkedList()())
                        USimpleNameReferenceExpression (identifier = list) [list] = (var list = external LinkedList()())
