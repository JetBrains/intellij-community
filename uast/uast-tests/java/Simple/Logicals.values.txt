UFile (package = ) [public class Logicals {...]
    UClass (name = Logicals) [public class Logicals {...}]
        UMethod (name = foo) [public static fun foo() : boolean {...}]
            UBlockExpression [{...}] = Nothing
                UDeclarationsExpression [var one: int = 1] = Undetermined
                    ULocalVariable (name = one) [var one: int = 1]
                        ULiteralExpression (value = 1) [1] = 1
                UDeclarationsExpression [var two: int = 2] = Undetermined
                    ULocalVariable (name = two) [var two: int = 2]
                        ULiteralExpression (value = 2) [2] = 2
                UDeclarationsExpression [var three: int = 3] = Undetermined
                    ULocalVariable (name = three) [var three: int = 3]
                        ULiteralExpression (value = 3) [3] = 3
                UDeclarationsExpression [var four: int = 4] = Undetermined
                    ULocalVariable (name = four) [var four: int = 4]
                        ULiteralExpression (value = 4) [4] = 4
                UDeclarationsExpression [var b1: boolean = two > one && four > three] = Undetermined
                    ULocalVariable (name = b1) [var b1: boolean = two > one && four > three]
                        UBinaryExpression (operator = &&) [two > one && four > three] = true (depending on: (var two = 2), (var one = 1), (var four = 4), (var three = 3))
                            UBinaryExpression (operator = >) [two > one] = true (depending on: (var two = 2), (var one = 1))
                                USimpleNameReferenceExpression (identifier = two) [two] = (var two = 2)
                                USimpleNameReferenceExpression (identifier = one) [one] = (var one = 1)
                            UBinaryExpression (operator = >) [four > three] = true (depending on: (var four = 4), (var three = 3))
                                USimpleNameReferenceExpression (identifier = four) [four] = (var four = 4)
                                USimpleNameReferenceExpression (identifier = three) [three] = (var three = 3)
                UDeclarationsExpression [var b2: boolean = one > two && four > three] = Undetermined
                    ULocalVariable (name = b2) [var b2: boolean = one > two && four > three]
                        UBinaryExpression (operator = &&) [one > two && four > three] = false (depending on: (var one = 1), (var two = 2), (var four = 4), (var three = 3))
                            UBinaryExpression (operator = >) [one > two] = false (depending on: (var one = 1), (var two = 2))
                                USimpleNameReferenceExpression (identifier = one) [one] = (var one = 1)
                                USimpleNameReferenceExpression (identifier = two) [two] = (var two = 2)
                            UBinaryExpression (operator = >) [four > three] = true (depending on: (var four = 4), (var three = 3))
                                USimpleNameReferenceExpression (identifier = four) [four] = (var four = 4)
                                USimpleNameReferenceExpression (identifier = three) [three] = (var three = 3)
                UDeclarationsExpression [var b3: boolean = b1 || b2] = Undetermined
                    ULocalVariable (name = b3) [var b3: boolean = b1 || b2]
                        UBinaryExpression (operator = ||) [b1 || b2] = true (depending on: (var b1 = true (depending on: (var two = 2), (var one = 1), (var four = 4), (var three = 3))), (var b2 = false (depending on: (var one = 1), (var two = 2), (var four = 4), (var three = 3))))
                            USimpleNameReferenceExpression (identifier = b1) [b1] = (var b1 = true (depending on: (var two = 2), (var one = 1), (var four = 4), (var three = 3)))
                            USimpleNameReferenceExpression (identifier = b2) [b2] = (var b2 = false (depending on: (var one = 1), (var two = 2), (var four = 4), (var three = 3)))
                UDeclarationsExpression [var b4: boolean = two > one || three > four] = Undetermined
                    ULocalVariable (name = b4) [var b4: boolean = two > one || three > four]
                        UBinaryExpression (operator = ||) [two > one || three > four] = true (depending on: (var two = 2), (var one = 1), (var three = 3), (var four = 4))
                            UBinaryExpression (operator = >) [two > one] = true (depending on: (var two = 2), (var one = 1))
                                USimpleNameReferenceExpression (identifier = two) [two] = (var two = 2)
                                USimpleNameReferenceExpression (identifier = one) [one] = (var one = 1)
                            UBinaryExpression (operator = >) [three > four] = false (depending on: (var three = 3), (var four = 4))
                                USimpleNameReferenceExpression (identifier = three) [three] = (var three = 3)
                                USimpleNameReferenceExpression (identifier = four) [four] = (var four = 4)
                UReturnExpression [return b1 && !b2 && b3 && b4] = Nothing
                    UPolyadicExpression (operator = &&) [b1 && !b2 && b3 && b4] = true (depending on: (var b1 = true (depending on: (var two = 2), (var one = 1), (var four = 4), (var three = 3))), (var b2 = false (depending on: (var one = 1), (var two = 2), (var four = 4), (var three = 3))), (var b3 = true (depending on: (var b1 = true (depending on: (var two = 2), (var one = 1), (var four = 4), (var three = 3))), (var b2 = false (depending on: (var one = 1), (var two = 2), (var four = 4), (var three = 3))))), (var b4 = true (depending on: (var two = 2), (var one = 1), (var three = 3), (var four = 4))))
                        USimpleNameReferenceExpression (identifier = b1) [b1] = (var b1 = true (depending on: (var two = 2), (var one = 1), (var four = 4), (var three = 3)))
                        UPrefixExpression (operator = !) [!b2] = true (depending on: (var b2 = false (depending on: (var one = 1), (var two = 2), (var four = 4), (var three = 3))))
                            USimpleNameReferenceExpression (identifier = b2) [b2] = (var b2 = false (depending on: (var one = 1), (var two = 2), (var four = 4), (var three = 3)))
                        USimpleNameReferenceExpression (identifier = b3) [b3] = (var b3 = true (depending on: (var b1 = true (depending on: (var two = 2), (var one = 1), (var four = 4), (var three = 3))), (var b2 = false (depending on: (var one = 1), (var two = 2), (var four = 4), (var three = 3)))))
                        USimpleNameReferenceExpression (identifier = b4) [b4] = (var b4 = true (depending on: (var two = 2), (var one = 1), (var three = 3), (var four = 4)))
