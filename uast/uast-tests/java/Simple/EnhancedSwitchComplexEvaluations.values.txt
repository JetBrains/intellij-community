UFile (package = ) [public class Main {...]
    UClass (name = Main) [public class Main {...}]
        UMethod (name = getOneOrTwoString) [private static fun getOneOrTwoString(unknown: java.lang.String) : java.lang.String {...}]
            UParameter (name = unknown) [var unknown: java.lang.String]
            UBlockExpression [{...}] = Nothing
                UDeclarationsExpression [final var switchResult: java.lang.String = switch (unknown) ...] = Undetermined
                    ULocalVariable (name = switchResult) [final var switchResult: java.lang.String = switch (unknown) ...]
                        USwitchExpression [switch (unknown) ...] = Phi("foobar", "default")
                            USimpleNameReferenceExpression (identifier = unknown) [unknown] = Undetermined
                            UExpressionList (switch) [    "foo", "bar" -> {...    ] = Undetermined
                                USwitchClauseExpressionWithBody ["foo", "bar" -> {...] = Undetermined
                                    ULiteralExpression (value = "foo") ["foo"] = "foo"
                                    ULiteralExpression (value = "bar") ["bar"] = "bar"
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UYieldExpression [yield "foobar"] = UYieldResult("foobar")
                                            ULiteralExpression (value = "foobar") ["foobar"] = "foobar"
                                USwitchClauseExpressionWithBody [else -> {...] = Undetermined
                                    UDefaultCaseExpression [else] = Undetermined
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UYieldExpression [yield "default"] = UYieldResult("default")
                                            ULiteralExpression (value = "default") ["default"] = "default"
                UReturnExpression [return switchResult] = Nothing
                    USimpleNameReferenceExpression (identifier = switchResult) [switchResult] = (var switchResult = Phi("foobar", "default"))
        UMethod (name = getOneOrThrow) [private static fun getOneOrThrow(unknown: java.lang.String) : java.lang.String {...}]
            UParameter (name = unknown) [var unknown: java.lang.String]
            UBlockExpression [{...}] = Nothing
                UDeclarationsExpression [final var switchResult: java.lang.String = switch (unknown) ...] = Undetermined
                    ULocalVariable (name = switchResult) [final var switchResult: java.lang.String = switch (unknown) ...]
                        USwitchExpression [switch (unknown) ...] = "foobar"
                            USimpleNameReferenceExpression (identifier = unknown) [unknown] = Undetermined
                            UExpressionList (switch) [    "foo", "bar" -> {...    ] = Undetermined
                                USwitchClauseExpressionWithBody ["foo", "bar" -> {...] = Undetermined
                                    ULiteralExpression (value = "foo") ["foo"] = "foo"
                                    ULiteralExpression (value = "bar") ["bar"] = "bar"
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UYieldExpression [yield "foobar"] = UYieldResult("foobar")
                                            ULiteralExpression (value = "foobar") ["foobar"] = "foobar"
                                USwitchClauseExpressionWithBody [else -> {...] = Undetermined
                                    UDefaultCaseExpression [else] = Undetermined
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UThrowExpression [throw IllegalArgumentException()] = Nothing
                                            UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [IllegalArgumentException()] = external IllegalArgumentException()()
                                                USimpleNameReferenceExpression (identifier = IllegalArgumentException) [IllegalArgumentException] = external IllegalArgumentException()
                UReturnExpression [return switchResult] = Nothing
                    USimpleNameReferenceExpression (identifier = switchResult) [switchResult] = (var switchResult = "foobar")
        UMethod (name = getThrowOrOne) [private static fun getThrowOrOne(unknown: java.lang.String) : java.lang.String {...}]
            UParameter (name = unknown) [var unknown: java.lang.String]
            UBlockExpression [{...}] = Nothing
                UDeclarationsExpression [final var switchResult: java.lang.String = switch (unknown) ...] = Undetermined
                    ULocalVariable (name = switchResult) [final var switchResult: java.lang.String = switch (unknown) ...]
                        USwitchExpression [switch (unknown) ...] = "foobar"
                            USimpleNameReferenceExpression (identifier = unknown) [unknown] = Undetermined
                            UExpressionList (switch) [    "foo", "bar" -> {...    ] = Undetermined
                                USwitchClauseExpressionWithBody ["foo", "bar" -> {...] = Undetermined
                                    ULiteralExpression (value = "foo") ["foo"] = "foo"
                                    ULiteralExpression (value = "bar") ["bar"] = "bar"
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UThrowExpression [throw IllegalArgumentException()] = Nothing
                                            UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [IllegalArgumentException()] = external IllegalArgumentException()()
                                                USimpleNameReferenceExpression (identifier = IllegalArgumentException) [IllegalArgumentException] = external IllegalArgumentException()
                                USwitchClauseExpressionWithBody [else -> {...] = Undetermined
                                    UDefaultCaseExpression [else] = Undetermined
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UYieldExpression [yield "foobar"] = UYieldResult("foobar")
                                            ULiteralExpression (value = "foobar") ["foobar"] = "foobar"
                UReturnExpression [return switchResult] = Nothing
                    USimpleNameReferenceExpression (identifier = switchResult) [switchResult] = (var switchResult = "foobar")
        UMethod (name = getUnknownString) [private static fun getUnknownString(unknown: java.lang.String) : java.lang.String {...}]
            UParameter (name = unknown) [var unknown: java.lang.String]
            UBlockExpression [{...}] = Nothing
                UDeclarationsExpression [final var switchResult: java.lang.String = switch (unknown) ...] = Undetermined
                    ULocalVariable (name = switchResult) [final var switchResult: java.lang.String = switch (unknown) ...]
                        USwitchExpression [switch (unknown) ...] = Undetermined
                            USimpleNameReferenceExpression (identifier = unknown) [unknown] = Undetermined
                            UExpressionList (switch) [    "foo", "bar" -> {...    ] = Undetermined
                                USwitchClauseExpressionWithBody ["foo", "bar" -> {...] = Undetermined
                                    ULiteralExpression (value = "foo") ["foo"] = "foo"
                                    ULiteralExpression (value = "bar") ["bar"] = "bar"
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UYieldExpression [yield "foobar" + unknown] = UYieldResult(Undetermined)
                                            UBinaryExpression (operator = +) ["foobar" + unknown] = Undetermined
                                                ULiteralExpression (value = "foobar") ["foobar"] = "foobar"
                                                USimpleNameReferenceExpression (identifier = unknown) [unknown] = Undetermined
                                USwitchClauseExpressionWithBody [else -> {...] = Undetermined
                                    UDefaultCaseExpression [else] = Undetermined
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UYieldExpression [yield "default" + unknown] = UYieldResult(Undetermined)
                                            UBinaryExpression (operator = +) ["default" + unknown] = Undetermined
                                                ULiteralExpression (value = "default") ["default"] = "default"
                                                USimpleNameReferenceExpression (identifier = unknown) [unknown] = Undetermined
                UReturnExpression [return switchResult] = Nothing
                    USimpleNameReferenceExpression (identifier = switchResult) [switchResult] = (var switchResult = Undetermined)
        UMethod (name = getOneInsideOrThrow) [private static fun getOneInsideOrThrow(unknown: java.lang.String) : int {...}]
            UParameter (name = unknown) [var unknown: java.lang.String]
            UBlockExpression [{...}] = Nothing
                UDeclarationsExpression [var known: java.lang.String = "abc"] = Undetermined
                    ULocalVariable (name = known) [var known: java.lang.String = "abc"]
                        ULiteralExpression (value = "abc") ["abc"] = "abc"
                UDeclarationsExpression [final var switchResult: int = switch (known) ...] = Undetermined
                    ULocalVariable (name = switchResult) [final var switchResult: int = switch (known) ...]
                        USwitchExpression [switch (known) ...] = 12
                            USimpleNameReferenceExpression (identifier = known) [known] = (var known = "abc")
                            UExpressionList (switch) [    "foo", "bar" -> {...    ] = Undetermined
                                USwitchClauseExpressionWithBody ["foo", "bar" -> {...] = Undetermined
                                    ULiteralExpression (value = "foo") ["foo"] = "foo"
                                    ULiteralExpression (value = "bar") ["bar"] = "bar"
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UYieldExpression [yield 0] = UYieldResult(0)
                                            ULiteralExpression (value = 0) [0] = 0
                                USwitchClauseExpressionWithBody [else -> {...] = Undetermined
                                    UDefaultCaseExpression [else] = Undetermined
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UIfExpression [if (unknown.length() > 0) {...}else throw IllegalArgumentException()] = UYieldResult(12)
                                            UBinaryExpression (operator = >) [unknown.length() > 0] = Undetermined
                                                UQualifiedReferenceExpression [unknown.length()] = external length()()
                                                    USimpleNameReferenceExpression (identifier = unknown) [unknown] = Undetermined
                                                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [length()] = external length()()
                                                        UIdentifier (Identifier (length)) [UIdentifier (Identifier (length))]
                                                ULiteralExpression (value = 0) [0] = 0
                                            UBlockExpression [{...}] = UYieldResult(12)
                                                UYieldExpression [yield 12] = UYieldResult(12)
                                                    ULiteralExpression (value = 12) [12] = 12
                                            UThrowExpression [throw IllegalArgumentException()] = Nothing
                                                UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [IllegalArgumentException()] = external IllegalArgumentException()()
                                                    USimpleNameReferenceExpression (identifier = IllegalArgumentException) [IllegalArgumentException] = external IllegalArgumentException()
                UReturnExpression [return switchResult] = Nothing
                    USimpleNameReferenceExpression (identifier = switchResult) [switchResult] = (var switchResult = 12)
        UMethod (name = getThrowOrOneInside) [private static fun getThrowOrOneInside(unknown: java.lang.String) : int {...}]
            UParameter (name = unknown) [var unknown: java.lang.String]
            UBlockExpression [{...}] = Nothing
                UDeclarationsExpression [var known: java.lang.String = "abc"] = Undetermined
                    ULocalVariable (name = known) [var known: java.lang.String = "abc"]
                        ULiteralExpression (value = "abc") ["abc"] = "abc"
                UDeclarationsExpression [final var switchResult: int = switch (known) ...] = Undetermined
                    ULocalVariable (name = switchResult) [final var switchResult: int = switch (known) ...]
                        USwitchExpression [switch (known) ...] = Phi(12, 18)
                            USimpleNameReferenceExpression (identifier = known) [known] = (var known = "abc")
                            UExpressionList (switch) [    "foo", "bar" -> {...    ] = Undetermined
                                USwitchClauseExpressionWithBody ["foo", "bar" -> {...] = Undetermined
                                    ULiteralExpression (value = "foo") ["foo"] = "foo"
                                    ULiteralExpression (value = "bar") ["bar"] = "bar"
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UYieldExpression [yield 0] = UYieldResult(0)
                                            ULiteralExpression (value = 0) [0] = 0
                                USwitchClauseExpressionWithBody [else -> {...] = Undetermined
                                    UDefaultCaseExpression [else] = Undetermined
                                    UExpressionList (switch_entry) [{...] = Undetermined
                                        UIfExpression [if (unknown.length() <= 0) {...}] = Phi(UYieldResult(12), UYieldResult(18))
                                            UBinaryExpression (operator = <=) [unknown.length() <= 0] = Undetermined
                                                UQualifiedReferenceExpression [unknown.length()] = external length()()
                                                    USimpleNameReferenceExpression (identifier = unknown) [unknown] = Undetermined
                                                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 0)) [length()] = external length()()
                                                        UIdentifier (Identifier (length)) [UIdentifier (Identifier (length))]
                                                ULiteralExpression (value = 0) [0] = 0
                                            UBlockExpression [{...}] = Nothing
                                                UThrowExpression [throw IllegalArgumentException()] = Nothing
                                                    UCallExpression (kind = UastCallKind(name='constructor_call'), argCount = 0)) [IllegalArgumentException()] = external IllegalArgumentException()()
                                                        USimpleNameReferenceExpression (identifier = IllegalArgumentException) [IllegalArgumentException] = external IllegalArgumentException()
                                            UIfExpression [if (unknown.equals("true")) {...}] = Phi(UYieldResult(12), UYieldResult(18))
                                                UQualifiedReferenceExpression [unknown.equals("true")] = external equals("true")("true")
                                                    USimpleNameReferenceExpression (identifier = unknown) [unknown] = Undetermined
                                                    UCallExpression (kind = UastCallKind(name='method_call'), argCount = 1)) [equals("true")] = external equals("true")("true")
                                                        UIdentifier (Identifier (equals)) [UIdentifier (Identifier (equals))]
                                                        ULiteralExpression (value = "true") ["true"] = "true"
                                                UBlockExpression [{...}] = UYieldResult(12)
                                                    UYieldExpression [yield 12] = UYieldResult(12)
                                                        ULiteralExpression (value = 12) [12] = 12
                                                UBlockExpression [{...}] = UYieldResult(18)
                                                    UYieldExpression [yield 18] = UYieldResult(18)
                                                        ULiteralExpression (value = 18) [18] = 18
                UReturnExpression [return switchResult] = Nothing
                    USimpleNameReferenceExpression (identifier = switchResult) [switchResult] = (var switchResult = Phi(12, 18))
