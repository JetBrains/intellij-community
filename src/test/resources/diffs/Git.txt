Diff / Patch File
  DiffGitHeaderImpl(GIT_HEADER)
    PsiElement(DiffTokenType.GIT_FIRST_LINE)('From dc32f3823bd6f530708a08de4611a1d058337fda Mon Sep 17 00:00:00 2001')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('From: ThomasR <thomasr@fantasymail.de>')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('Date: Mon, 18 Feb 2019 21:47:43 +0100')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('Subject: [PATCH] Improved lexer and parser')
    PsiWhiteSpace('\n')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.GIT_SEPARATOR)('---')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .idea/gradle.xml                              |   1 -')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .idea/runConfigurations/build_plugin.xml      |   6 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .idea/runConfigurations/generateSources.xml   |  22 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .idea/runConfigurations/run_in_IDE.xml        |   6 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' build.gradle                                  |  18 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../thomasrosenau/diffplugin/DiffLexer.java   | 534 ++++++++++------')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/parser/DiffParser.java         | 570 ++++++++++++++++--')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/{DiffPlain.java => DiffAnyLine.java}  |   2 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffConsoleCommand.java    |  10 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffContextDiff.java       |  13 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/DiffContextFromFileLine.java          |  10 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffContextHunk.java       |  16 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffContextHunkFrom.java   |  13 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffContextHunkTo.java     |  13 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffContextToFileLine.java |  10 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffLeadingText.java       |  16 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffNormalDiff.java        |  13 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffNormalHunk.java        |  19 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../{DiffInfo.java => DiffNormalHunkAdd.java} |   2 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffNormalHunkChange.java  |  10 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffNormalHunkDelete.java  |  10 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffTrailingText.java      |  13 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffTypes.java             | 107 +++-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffUnifiedDiff.java       |  13 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffUnifiedHunk.java       |  13 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' ...{DiffChanged.java => DiffUnifiedLine.java} |   2 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/psi/DiffVisitor.java           |  66 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' ...fChangedImpl.java => DiffAnyLineImpl.java} |   6 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffConsoleCommandImpl.java      |  29 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffContextDiffImpl.java         |  35 ++')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffContextFromFileLineImpl.java |  29 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffContextHunkFromImpl.java     |  35 ++')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffContextHunkImpl.java         |  41 ++')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffContextHunkToImpl.java       |  35 ++')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffContextToFileLineImpl.java   |  29 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffLeadingTextImpl.java         |  41 ++')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffNormalDiffImpl.java          |  35 ++')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' ...inImpl.java => DiffNormalHunkAddImpl.java} |   6 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffNormalHunkChangeImpl.java    |  29 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffNormalHunkDeleteImpl.java    |  29 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffNormalHunkImpl.java          |  47 ++')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffTrailingTextImpl.java        |  35 ++')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffUnifiedDiffImpl.java         |  35 ++')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../psi/impl/DiffUnifiedHunkImpl.java         |  35 ++')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' ...InfoImpl.java => DiffUnifiedLineImpl.java} |   6 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../highlighter/DiffColorSettingsPage.java    |  72 +--')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../highlighter/DiffSyntaxHighlighter.java    |  66 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../thomasrosenau/diffplugin/lexer/Diff.flex  |  62 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../diffplugin/lexer/DiffLexerAdapter.java    |   4 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' .../thomasrosenau/diffplugin/parser/Diff.bnf  |  36 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' src/test/resources/dir-context.diff           |  20 +-')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' src/test/resources/dir-normal.diff            |   2 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' src/test/resources/dir-unified.diff           |   3 +')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' 53 files changed, 1958 insertions(+), 372 deletions(-)')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 .idea/runConfigurations/generateSources.xml')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' rename src/main/generated-java/de/thomasrosenau/diffplugin/psi/{DiffPlain.java => DiffAnyLine.java} (80%)')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffConsoleCommand.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextDiff.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextFromFileLine.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunk.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunkFrom.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunkTo.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextToFileLine.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffLeadingText.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalDiff.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunk.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' rename src/main/generated-java/de/thomasrosenau/diffplugin/psi/{DiffInfo.java => DiffNormalHunkAdd.java} (78%)')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunkChange.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunkDelete.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffTrailingText.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffUnifiedDiff.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffUnifiedHunk.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' rename src/main/generated-java/de/thomasrosenau/diffplugin/psi/{DiffChanged.java => DiffUnifiedLine.java} (78%)')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' rename src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/{DiffChangedImpl.java => DiffAnyLineImpl.java} (81%)')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffConsoleCommandImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextDiffImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextFromFileLineImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkFromImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkToImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextToFileLineImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffLeadingTextImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalDiffImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' rename src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/{DiffPlainImpl.java => DiffNormalHunkAddImpl.java} (79%)')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkChangeImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkDeleteImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffTrailingTextImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffUnifiedDiffImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' create mode 100644 src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffUnifiedHunkImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)(' rename src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/{DiffInfoImpl.java => DiffUnifiedLineImpl.java} (80%)')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/.idea/gradle.xml b/.idea/gradle.xml')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 6545c4e..92e6e63 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/.idea/gradle.xml')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/.idea/gradle.xml')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -12,7 +12,6 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('           </set>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         </option>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         <option name="resolveModulePerSourceSet" value="false" />\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        <option name="useAutoImport" value="true" />\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         <option name="useQualifiedModuleNames" value="true" />\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       </GradleProjectSettings>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     </option>\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/.idea/runConfigurations/build_plugin.xml b/.idea/runConfigurations/build_plugin.xml')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 1895d65..cf3c606 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/.idea/runConfigurations/build_plugin.xml')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/.idea/runConfigurations/build_plugin.xml')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -10,8 +10,6 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       </option>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       <option name="taskNames">\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         <list>\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          <option value="generateDiffParser" />\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          <option value="generateDiffLexer" />\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('           <option value="buildPlugin" />\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('           <option value="verifyPlugin" />\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         </list>\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -19,6 +17,8 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       <option name="vmOptions" value="" />\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     </ExternalSystemSettings>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     <GradleScriptDebugEnabled>true</GradleScriptDebugEnabled>\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    <method v="2" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    <method v="2">\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      <option name="RunConfigurationTask" enabled="true" run_configuration_name="generateSources" run_configuration_type="GradleRunConfiguration" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    </method>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   </configuration>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' </component>\n')
      PsiElement(DiffTokenType.EOL_HINT)('\ No newline at end of file')
  PsiWhiteSpace('\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/.idea/runConfigurations/generateSources.xml b/.idea/runConfigurations/generateSources.xml')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..6460337')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/.idea/runConfigurations/generateSources.xml')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,22 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+<component name="ProjectRunConfigurationManager">\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  <configuration default="false" name="generateSources" type="GradleRunConfiguration" factoryName="Gradle">\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    <ExternalSystemSettings>\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      <option name="executionName" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      <option name="externalProjectPath" value="$PROJECT_DIR$" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      <option name="externalSystemIdString" value="GRADLE" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      <option name="scriptParameters" value="" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      <option name="taskDescriptions">\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        <list />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      </option>\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      <option name="taskNames">\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        <list>\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          <option value="generateDiffParser" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          <option value="generateDiffLexer" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        </list>\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      </option>\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      <option name="vmOptions" value="" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    </ExternalSystemSettings>\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    <GradleScriptDebugEnabled>true</GradleScriptDebugEnabled>\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    <method v="2" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  </configuration>\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+</component>\n')
      PsiElement(DiffTokenType.EOL_HINT)('\ No newline at end of file')
  PsiWhiteSpace('\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/.idea/runConfigurations/run_in_IDE.xml b/.idea/runConfigurations/run_in_IDE.xml')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 3822425..a4fd315 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/.idea/runConfigurations/run_in_IDE.xml')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/.idea/runConfigurations/run_in_IDE.xml')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -10,14 +10,14 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       </option>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       <option name="taskNames">\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         <list>\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          <option value="generateDiffParser" />\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          <option value="generateDiffLexer" />\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('           <option value="runIde" />\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         </list>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       </option>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       <option name="vmOptions" value="" />\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     </ExternalSystemSettings>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     <GradleScriptDebugEnabled>true</GradleScriptDebugEnabled>\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    <method v="2" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    <method v="2">\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      <option name="RunConfigurationTask" enabled="true" run_configuration_name="generateSources" run_configuration_type="GradleRunConfiguration" />\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    </method>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   </configuration>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' </component>\n')
      PsiElement(DiffTokenType.EOL_HINT)('\ No newline at end of file')
  PsiWhiteSpace('\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/build.gradle b/build.gradle')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 336ddb9..d7c5ec3 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/build.gradle')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/build.gradle')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -45,7 +45,8 @@ intellij {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     version = 'LATEST-EAP-SNAPSHOT'\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-File genSrc = file('src/main/generated-java')\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+def genSrcPath = 'src/main/generated-java'\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+File genSrc = file(genSrcPath)\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' sourceSets.main.java.srcDir genSrc\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' idea.module.generatedSourceDirs += genSrc\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -61,7 +62,8 @@ patchPluginXml {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     pluginDescription '''\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     <h1>Syntax highlighting for .diff files and .patch files</h1>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     <p>Supports the common formats: normal, contextual, unified (git patch).</p>\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    <p>Does not support the formats: side-by-side, diff3, ed, if-else, RCS.</p>\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    <p>Does not support the formats: side-by-side, diff3, ed, if-else, RCS.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+       Currently does not support git binary patches.</p>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     <br/>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     <hr/>\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     <p>Copyright 2019 Thomas Rosenau</p>\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -92,17 +94,19 @@ patchPluginXml {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     '''\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+def namespacePath = 'de/thomasrosenau/diffplugin'\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' task generateDiffLexer(type: GenerateLexer) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    source 'src/main/java/de/thomasrosenau/diffplugin/lexer/Diff.flex'\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    targetDir 'src/main/generated-java/de/thomasrosenau/diffplugin'\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    source 'src/main/java/' + namespacePath + '/lexer/Diff.flex'\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    targetDir genSrcPath + '/' + namespacePath\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     targetClass 'DiffLexer'\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     purgeOldFiles true\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' task generateDiffParser(type: GenerateParser) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    source 'src/main/java/de/thomasrosenau/diffplugin/parser/Diff.bnf'\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    targetRoot 'src/main/generated-java'\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    source 'src/main/java/' + namespacePath + '/parser/Diff.bnf'\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    targetRoot genSrcPath\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     pathToParser 'DiffParser.java'\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    pathToPsiRoot 'psi'\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    pathToPsiRoot namespacePath + '/psi'\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     purgeOldFiles true\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' }\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/DiffLexer.java b/src/main/generated-java/de/thomasrosenau/diffplugin/DiffLexer.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 1902c89..9265357 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/generated-java/de/thomasrosenau/diffplugin/DiffLexer.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/DiffLexer.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -41,8 +41,9 @@ public class DiffLexer implements FlexLexer {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   /** lexical states */\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   public static final int YYINITIAL = 0;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  public static final int GitHead = 2;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  public static final int DEFAULT = 4;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static final int CONTEXT = 2;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static final int UNIFIED = 4;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static final int NORMAL = 6;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   /**\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('    * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -51,7 +52,7 @@ public class DiffLexer implements FlexLexer {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('    * l is of the form l = 2*k, k a non negative integer\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('    */\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static final int ZZ_LEXSTATE[] = { \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-     0,  1,  0,  2,  0, 3\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+     0,  1,  0,  2,  0,  3,  0, 4\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   };\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   /** \n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -73,9 +74,9 @@ public class DiffLexer implements FlexLexer {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   /* The ZZ_CMAP_A table has 320 entries */\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   static final char ZZ_CMAP_A[] = zzUnpackCMap(\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\12\0\1\4\2\5\1\1\22\0\1\12\1\24\10\0\1\17\1\21\1\3\1\16\2\0\12\2\2\0\1\23"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\0\1\22\1\0\1\20\5\0\1\6\25\0\1\25\7\0\1\13\1\0\1\15\2\0\1\14\3\0\1\11\1"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\1\10\2\0\1\7\22\0\1\5\242\0\2\5\26\0");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\12\0\1\4\2\5\1\1\22\0\1\7\1\11\10\0\1\6\1\12\1\3\1\10\2\0\12\2\2\0\1\20\1"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\1\17\1\0\1\13\33\0\1\23\4\0\1\14\1\0\1\15\1\16\1\0\1\22\2\0\1\21\33\0\1"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\5\242\0\2\5\26\0");\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   /** \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('    * Translates DFA states to action switch labels.\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -83,16 +84,22 @@ public class DiffLexer implements FlexLexer {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static final int [] ZZ_ACTION = zzUnpackAction();\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static final String ZZ_ACTION_PACKED_0 =\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\4\0\1\1\1\2\17\1\1\0\3\3\5\0\2\4"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\3\4\0\2\5\1\3\2\0\1\3\1\0\1\3"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\0\3\6\2\0\1\7\3\0\2\10\4\0\1\3"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\0\2\11\3\12\1\13\2\0\3\14\5\0\1\14"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\0\1\15\1\0\2\16\1\17\4\0\1\3\4\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\3\1\0\1\3\3\20\3\0\1\6\3\21\3\22"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\23\3\0\1\24\1\25\16\0\1\14\3\0";\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\5\0\1\1\1\2\22\1\1\0\3\3\11\0\1\3"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\0\2\4\2\0\2\5\1\0\2\6\2\0\2\7"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\3\1\0\2\10\1\3\2\0\2\11\1\3\4\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\12\1\3\1\0\2\13\1\3\1\14\7\0\3\15"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\0\1\3\1\0\1\3\2\0\1\3\1\0\1\3"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\4\0\1\16\1\0\2\16\1\17\1\0\2\17\3\20"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\3\0\1\21\2\0\2\22\4\0\1\3\3\23\1\24"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\0\1\25\1\0\1\26\1\0\1\3\1\0\1\3"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\5\0\1\3\1\0\1\3\1\0\3\27\3\30\1\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\3\3\0\3\31\2\0\3\32\1\0\1\33\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\3\35\3\0\1\36\2\0\1\37\1\0\1\40\3\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\3\41\4\0\1\42\5\0\3\43\3\44\1\0\1\45"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\46\3\0\3\47";\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static int [] zzUnpackAction() {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    int [] result = new int[135];\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    int [] result = new int[210];\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     int offset = 0;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     return result;\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -117,26 +124,36 @@ public class DiffLexer implements FlexLexer {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static final int [] ZZ_ROWMAP = zzUnpackRowMap();\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static final String ZZ_ROWMAP_PACKED_0 =\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\0\0\26\0\54\0\102\0\130\0\130\0\156\0\204"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\232\0\260\0\306\0\334\0\362\0\u0108\0\u011e\0\u0134"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\u014a\0\u0160\0\u0176\0\u018c\0\u01a2\0\156\0\u01b8\0\130"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\156\0\204\0\u01ce\0\u01e4\0\u01fa\0\u0134\0\u01b8\0\130"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\u0134\0\u0210\0\u0226\0\u023c\0\u011e\0\u01b8\0\130\0\u011e"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\u0252\0\u0268\0\u0268\0\u027e\0\u027e\0\u0176\0\u0294\0\130"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\u0176\0\u02aa\0\u02c0\0\130\0\u02d6\0\u02ec\0\u0302\0\u01b8"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\130\0\u0318\0\u032e\0\u0344\0\u035a\0\u035a\0\u0370\0\u01b8"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\130\0\u0386\0\130\0\u027e\0\130\0\u039c\0\u03b2\0\u03c8"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\130\0\156\0\u03de\0\u03f4\0\u040a\0\u0420\0\u0436\0\u035a"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\u044c\0\130\0\u0462\0\u0294\0\130\0\130\0\u0478\0\u048e"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\u04a4\0\u04ba\0\u04a4\0\u04d0\0\u04e6\0\u04fc\0\u0512\0\u0512"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\u0528\0\u0528\0\u053e\0\130\0\u04a4\0\u0554\0\u056a\0\u0580"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\u0528\0\u0596\0\130\0\u0512\0\u05ac\0\130\0\u0528\0\130"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\u05c2\0\u05d8\0\u05ee\0\130\0\130\0\u0604\0\u061a\0\u0630"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\u0646\0\u065c\0\u0672\0\u0688\0\u069e\0\u06b4\0\u06ca\0\u06e0"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\0\u06f6\0\u070c\0\u0722\0\u04a4\0\u0738\0\u074e\0\u0764";\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\0\0\24\0\50\0\74\0\120\0\144\0\144\0\170"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\214\0\240\0\264\0\310\0\334\0\360\0\u0104\0\u0118"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u012c\0\u0140\0\u0154\0\u0168\0\u017c\0\u0190\0\u01a4\0\u01b8"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u01cc\0\170\0\u01e0\0\144\0\170\0\214\0\u01f4\0\u0208"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u021c\0\u0230\0\u0244\0\u0258\0\u026c\0\u0280\0\u0280\0\u0294"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u02a8\0\u01e0\0\144\0\u02bc\0\u02d0\0\u01e0\0\144\0\u02e4"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u01e0\0\144\0\u02f8\0\u0154\0\u01e0\0\144\0\u0154\0\u030c"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u01e0\0\144\0\u030c\0\u0320\0\u0334\0\u01e0\0\144\0\u0334"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u0348\0\u035c\0\u0370\0\u01b8\0\u01e0\0\144\0\u01b8\0\u01cc"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u01e0\0\144\0\u01cc\0\144\0\u0384\0\u0398\0\u03ac\0\u03c0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u03d4\0\u03e8\0\u03fc\0\u0410\0\144\0\u0280\0\u0424\0\u0438"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u0438\0\u044c\0\u044c\0\u0460\0\u0474\0\u0474\0\u0488\0\u0488"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u049c\0\u04b0\0\u04c4\0\u04d8\0\u04ec\0\u0500\0\144\0\170"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u0514\0\u0528\0\144\0\170\0\u053c\0\144\0\170\0\u0550"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u0564\0\u0578\0\144\0\u058c\0\u05a0\0\u01e0\0\144\0\u05b4"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u05c8\0\u05dc\0\u05f0\0\u05f0\0\u0604\0\144\0\170\0\144"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u0618\0\144\0\u062c\0\144\0\u0640\0\u0640\0\u0654\0\u0654"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u0668\0\u067c\0\u0690\0\u06a4\0\u06b8\0\u06a4\0\u06cc\0\u06cc"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u06e0\0\u06f4\0\144\0\u0640\0\u0708\0\144\0\u0654\0\u071c"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u071c\0\u0730\0\u0744\0\u0758\0\u076c\0\144\0\u06a4\0\u0780"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u0794\0\u07a8\0\144\0\u06cc\0\u07bc\0\144\0\144\0\u07d0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\144\0\u071c\0\u07e4\0\u07f8\0\u080c\0\144\0\u0820\0\u0834"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\144\0\u0848\0\144\0\u085c\0\u0870\0\u0884\0\u0898\0\144"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u05f0\0\u08ac\0\u08c0\0\u08d4\0\u08e8\0\144\0\u08fc\0\u0910"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u0924\0\u0938\0\u094c\0\u0960\0\144\0\170\0\u0974\0\144"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\u06a4\0\u0988\0\144\0\144\0\u099c\0\u09b0\0\u09c4\0\u09d8"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\0\144\0\170";\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static int [] zzUnpackRowMap() {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    int [] result = new int[135];\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    int [] result = new int[210];\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     int offset = 0;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     return result;\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -159,84 +176,112 @@ public class DiffLexer implements FlexLexer {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static final int [] ZZ_TRANS = zzUnpackTrans();\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static final String ZZ_TRANS_PACKED_0 =\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\5\1\6\2\5\1\6\21\5\1\7\1\6\1\10"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\7\1\6\1\7\1\11\4\7\1\12\2\7\1\13"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\6\2\23\1\6\6\23\1\24\2\23\1\25\7\23"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\7\1\6\1\10\1\7\1\6\6\7\1\12\2\7"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\26\0\1\26\1\27\2\26\1\30\1\31\21\26\1\27"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\32\1\33\1\30\1\31\21\26\1\27\2\26\1\30"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\31\1\26\1\34\17\26\1\27\2\26\1\30\1\31"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\6\26\1\35\11\26\1\36\1\37\2\36\1\40\1\41"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\10\36\1\42\7\36\1\26\1\27\2\26\1\30\1\31"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\11\26\1\43\7\26\1\27\2\26\1\30\1\31\12\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\44\5\26\1\45\1\46\2\45\1\47\1\50\13\45"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\51\5\45\1\46\2\45\1\47\1\50\20\45\1\36"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\37\2\36\1\40\1\41\20\36\1\52\1\27\2\52"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\30\1\53\20\52\1\54\1\27\2\54\1\30\1\55"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\20\54\1\56\1\57\2\56\1\60\1\61\21\56\1\57"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\2\56\1\60\1\61\6\56\1\62\12\56\1\57\2\56"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\60\1\61\10\56\1\63\7\56\4\0\1\64\21\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\26\1\27\1\65\1\26\1\30\1\31\21\26\1\27"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\2\26\1\30\1\31\2\26\1\66\16\26\1\27\2\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\30\1\31\7\26\1\67\10\26\1\36\1\70\2\36"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\71\1\41\4\36\1\72\3\36\1\73\7\36\1\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\27\2\26\1\30\1\31\11\26\1\74\6\26\1\75"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\27\2\75\1\30\1\76\20\75\1\45\1\46\2\45"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\47\1\50\13\45\1\77\4\45\1\52\1\100\2\52"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\101\1\53\20\52\1\54\1\102\2\54\1\103\1\104"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\20\54\4\0\1\105\21\0\1\56\1\57\2\56\1\60"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\61\7\56\1\106\11\56\1\57\2\56\1\60\1\61"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\10\56\1\107\7\56\1\26\1\110\1\65\1\26\1\111"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\112\21\26\1\27\2\26\1\30\1\31\3\26\1\113"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\15\26\1\27\2\26\1\30\1\31\7\26\1\114\10\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\36\1\70\2\36\1\71\1\41\21\36\1\70\2\36"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\71\1\41\4\36\1\115\13\36\1\26\1\27\2\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\30\1\31\4\26\1\116\4\26\1\117\6\26\1\75"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\110\2\75\1\111\1\120\20\75\1\45\1\46\2\45"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\47\1\50\4\45\1\121\13\45\4\0\1\122\21\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\56\1\57\2\56\1\60\1\61\7\56\1\123\11\56"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\124\2\56\1\125\1\61\20\56\4\0\1\126\21\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\26\1\27\2\26\1\30\1\31\4\26\1\127\14\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\27\2\26\1\30\1\31\4\26\1\130\13\26\1\131"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\37\1\132\1\131\1\40\1\133\21\131\1\27\1\134"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\131\1\30\1\133\20\131\1\26\1\27\2\26\1\30"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\31\11\26\1\135\6\26\1\131\1\46\2\131\1\47"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\133\20\131\1\56\1\57\2\56\1\60\1\61\4\56"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\136\13\56\1\137\1\27\2\137\1\30\1\140\20\137"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\141\1\27\2\141\1\30\1\142\20\141\1\131\1\143"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\2\131\1\144\1\145\21\131\1\143\1\132\1\146\1\144"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\145\21\131\1\143\1\134\1\147\1\144\1\145\20\131"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\26\1\27\2\26\1\30\1\31\11\26\1\150\6\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\141\1\57\2\141\1\60\1\151\20\141\1\137\1\152"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\2\137\1\153\1\154\20\137\1\141\1\155\2\141\1\156"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\157\20\141\4\0\1\160\21\0\1\131\1\143\1\161"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\131\1\144\1\145\21\131\1\143\1\162\1\131\1\144"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\145\20\131\1\26\1\27\2\26\1\30\1\31\11\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\163\6\26\4\0\1\164\25\0\1\165\21\0\1\131"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\143\1\161\1\131\1\144\1\145\4\131\1\166\14\131"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\143\1\162\1\131\1\144\1\145\4\131\1\167\13\131"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\26\1\27\2\26\1\30\1\31\11\26\1\170\6\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\131\1\143\2\131\1\144\1\145\10\131\1\171\10\131"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\143\2\131\1\144\1\145\11\131\1\172\6\131\1\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\27\2\26\1\30\1\31\11\26\1\173\6\26\1\131"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\143\2\131\1\144\1\145\10\131\1\174\10\131\1\143"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\2\131\1\144\1\145\11\131\1\175\6\131\1\26\1\27"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\2\26\1\30\1\31\11\26\1\176\6\26\1\131\1\143"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\2\131\1\144\1\145\10\131\1\177\10\131\1\143\2\131"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\144\1\145\11\131\1\200\6\131\1\26\1\27\2\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\30\1\31\11\26\1\201\6\26\1\131\1\143\2\131"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\144\1\145\10\131\1\202\10\131\1\143\2\131\1\144"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\145\11\131\1\202\6\131\1\26\1\27\2\26\1\30"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\31\11\26\1\203\6\26\1\131\1\110\2\131\1\111"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\204\20\131\1\26\1\27\2\26\1\30\1\31\11\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\205\7\26\1\27\2\26\1\30\1\31\11\26\1\206"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\7\26\1\27\2\26\1\30\1\31\11\26\1\207\7\26"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\70\2\26\1\71\1\31\20\26";\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\6\1\7\2\6\1\7\17\6\1\10\1\7\1\11"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\10\1\7\1\10\1\12\1\10\1\13\5\10\1\14"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\4\10\1\15\1\10\1\7\2\10\1\7\1\10\1\16"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\17\1\20\1\21\1\22\3\10\1\14\4\10\1\15"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\10\1\7\2\10\1\7\2\10\1\23\1\24\1\10"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\25\1\26\2\10\1\14\4\10\1\15\1\10\1\7"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\11\1\10\1\7\3\10\1\27\5\10\1\14\1\30"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\31\2\10\1\15\24\0\1\32\1\33\2\32\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\35\17\32\1\33\1\36\1\37\1\34\1\35\6\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\40\1\41\1\42\6\32\1\33\2\32\1\34\1\35"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\43\16\32\1\33\2\32\1\34\1\35\2\32\1\44"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\14\32\1\33\2\32\1\34\1\35\13\32\1\45\2\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\46\1\33\2\46\1\34\1\47\16\46\1\32\1\33"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\32\1\34\1\35\1\50\16\32\1\33\2\32\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\35\1\32\1\51\15\32\1\52\2\32\1\53\1\35"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\54\1\55\14\32\1\56\2\32\1\57\1\35"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\60\15\32\1\61\2\32\1\62\1\35\1\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\63\14\32\1\64\1\65\2\64\1\66\1\67\16\64"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\70\1\71\2\70\1\72\1\73\2\70\1\74\13\70"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\75\1\76\2\75\1\77\1\100\4\75\1\101\11\75"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\33\2\32\1\34\1\35\5\32\1\102\11\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\33\2\32\1\34\1\35\2\32\1\103\13\32\1\104"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\105\2\104\1\106\1\107\16\104\1\110\1\111\2\110"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\112\1\113\16\110\4\0\1\114\17\0\1\32\1\33"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\115\1\32\1\34\1\35\17\32\1\33\1\116\1\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\34\1\35\17\32\1\33\1\117\1\32\1\34\1\35"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\17\32\1\33\1\120\1\32\1\34\1\35\17\32\1\33"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\32\1\34\1\35\1\121\16\32\1\33\2\32\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\35\2\32\1\122\14\32\1\33\2\32\1\34\1\35"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\14\32\1\123\1\32\1\46\1\124\2\46\1\125\1\126"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\16\46\1\32\1\33\2\32\1\34\1\35\1\127\15\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\130\1\33\2\130\1\34\1\131\16\130\1\132\1\33"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\132\1\34\1\133\16\132\1\32\1\33\2\32\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\35\2\32\1\134\13\32\1\135\1\33\2\135\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\136\16\135\1\137\1\33\2\137\1\34\1\140\16\137"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\70\1\71\2\70\1\72\1\73\17\70\1\71\2\70"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\72\1\73\2\70\1\141\13\70\1\75\1\76\2\75"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\77\1\100\17\75\1\76\2\75\1\77\1\100\4\75"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\142\11\75\1\32\1\33\2\32\1\34\1\35\1\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\143\15\32\1\33\2\32\1\34\1\35\2\32\1\144"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\14\32\1\33\1\115\1\32\1\34\1\35\7\32\1\41"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\42\6\32\1\145\1\116\1\146\1\147\1\150\17\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\151\1\117\1\152\1\153\1\154\17\32\1\155\1\120"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\156\1\157\17\32\1\33\2\32\1\34\1\35"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\160\15\32\1\33\2\32\1\34\1\35\1\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\161\15\32\1\33\2\32\1\34\1\35\14\32\1\162"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\4\0\1\163\17\0\1\32\1\33\2\32\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\35\1\164\1\165\14\32\1\130\1\166\2\130\1\167"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\131\16\130\1\132\1\52\2\132\1\53\1\133\16\132"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\33\2\32\1\34\1\35\1\32\1\170\14\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\135\1\56\2\135\1\57\1\136\16\135\1\137\1\61"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\137\1\62\1\140\16\137\1\70\1\71\2\70\1\72"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\73\1\70\1\171\14\70\1\75\1\76\2\75\1\77"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\100\1\75\1\172\14\75\1\173\1\33\2\173\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\174\16\173\1\32\1\175\2\32\1\176\1\177\16\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\4\0\1\200\17\0\1\32\1\33\1\201\1\32\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\35\16\32\4\0\1\202\17\0\1\32\1\33\1\203"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\34\1\35\16\32\4\0\1\204\17\0\1\205"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\33\2\205\1\34\1\206\16\205\1\207\1\33\2\207"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\34\1\210\16\207\1\32\1\33\2\32\1\34\1\35"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\211\15\32\1\33\2\32\1\34\1\35\1\212"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\16\32\1\33\1\213\1\32\1\34\1\35\16\32\1\214"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\33\1\215\1\214\1\34\1\216\16\214\1\207\1\71"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\207\1\72\1\210\16\207\1\217\1\76\2\217\1\77"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\220\16\217\1\173\1\33\2\173\1\34\1\174\1\173"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\221\14\173\4\0\1\176\17\0\1\32\1\145\1\201"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\147\1\150\17\32\1\151\1\203\1\32\1\153"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\154\16\32\1\205\1\222\2\205\1\223\1\224\16\205"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\207\1\225\2\207\1\226\1\227\16\207\1\230\1\33"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\230\1\34\1\231\16\230\1\32\1\33\2\32\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\35\1\232\16\32\1\33\1\213\1\233\1\34\1\35"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\234\14\32\1\214\1\235\2\214\1\236\1\237"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\17\214\1\235\1\215\1\240\1\236\1\237\1\214\1\241"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\14\214\1\217\1\242\2\217\1\243\1\244\16\217\1\173"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\33\2\173\1\34\1\174\1\173\1\221\3\173\1\245"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\10\173\4\0\1\246\23\0\1\247\17\0\1\230\1\250"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\230\1\251\1\252\16\230\1\32\1\33\2\32\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\35\1\253\16\32\1\33\1\254\1\32\1\34\1\35"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\17\32\1\33\2\32\1\34\1\35\1\255\15\32\4\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\256\17\0\1\214\1\235\1\257\1\214\1\236\1\237"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\17\214\1\235\2\214\1\236\1\237\2\214\1\260\13\214"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\4\0\1\261\17\0\1\173\1\33\2\173\1\34\1\174"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\173\1\221\3\173\1\262\10\173\4\0\1\263\17\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\33\2\32\1\34\1\35\1\264\16\32\1\33"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\254\1\32\1\34\1\35\1\32\1\234\15\32\1\33"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\32\1\34\1\35\1\265\15\32\1\214\1\235\1\257"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\214\1\236\1\237\1\214\1\241\15\214\1\235\2\214"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\236\1\237\2\214\1\266\13\214\1\173\1\267\2\173"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\270\1\271\1\173\1\272\14\173\1\32\1\33\2\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\34\1\35\1\273\16\32\1\33\2\32\1\34\1\35"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\274\15\32\1\214\1\235\2\214\1\236\1\237\2\214"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\275\13\214\4\0\1\276\17\0\1\277\1\33\2\277"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\34\1\174\16\277\1\32\1\33\2\32\1\34\1\35"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\300\16\32\1\33\2\32\1\34\1\35\1\301\15\32"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\214\1\235\2\214\1\236\1\237\2\214\1\302\13\214"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\277\1\267\2\277\1\270\1\271\16\277\1\32\1\33"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\32\1\34\1\35\1\303\16\32\1\304\2\32\1\305"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\306\16\32\1\214\1\307\2\214\1\310\1\311\16\214"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\32\1\33\2\32\1\34\1\35\1\312\15\32\4\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\313\23\0\1\314\17\0\1\32\1\33\2\32\1\34"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\35\1\315\16\32\1\33\2\32\1\34\1\35\1\316"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\16\32\1\33\2\32\1\34\1\35\1\317\16\32\1\320"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\2\32\1\321\1\322\16\32\4\0\1\321\17\0";\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static int [] zzUnpackTrans() {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    int [] result = new int[1914];\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    int [] result = new int[2540];\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     int offset = 0;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     return result;\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -274,18 +319,25 @@ public class DiffLexer implements FlexLexer {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static final String ZZ_ATTRIBUTE_PACKED_0 =\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\4\0\2\11\17\1\1\0\1\1\1\11\1\1\5\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\1\1\11\1\1\4\0\1\1\1\11\1\1\2\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\1\1\0\1\1\1\0\1\1\1\11\1\1\2\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\11\3\0\1\1\1\11\4\0\1\1\1\0\1\1"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\11\1\1\1\11\1\1\1\11\2\0\1\1\1\11"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\1\1\5\0\1\1\1\0\1\11\1\0\1\1\2\11"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\4\0\1\1\4\0\1\1\1\0\2\1\1\11\1\1"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\3\0\2\1\1\11\2\1\1\11\1\1\1\11\3\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    "\2\11\16\0\1\1\3\0";\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\5\0\2\11\22\1\1\0\1\1\1\11\1\1\11\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\1\2\0\1\1\1\11\2\0\1\1\1\11\1\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\1\1\11\2\0\1\1\1\11\1\1\1\0\1\1"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\11\1\1\2\0\1\1\1\11\1\1\4\0\1\1"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\11\1\1\1\0\1\1\1\11\1\1\1\11\7\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\1\1\11\1\1\2\0\1\1\1\0\1\1\2\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\1\1\0\1\1\4\0\1\1\1\0\1\11\2\1"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\0\1\11\2\1\1\11\1\1\3\0\1\11\2\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\1\1\11\4\0\2\1\1\11\1\1\1\11\1\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\11\1\0\1\11\1\0\1\1\1\0\1\1\5\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\1\1\0\1\1\1\0\1\1\1\11\2\1\1\11"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\1\1\0\1\1\3\0\1\1\1\11\1\1\2\0"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\1\1\11\1\1\1\0\2\11\1\1\1\11\1\1"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\3\0\1\11\2\0\1\11\1\0\1\11\3\0\1\1"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\11\1\1\4\0\1\11\5\0\1\1\1\11\2\1"+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    "\1\11\1\1\1\0\2\11\3\0\1\1\1\11\1\1";\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static int [] zzUnpackAttribute() {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    int [] result = new int[135];\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    int [] result = new int[210];\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     int offset = 0;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     return result;\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -622,149 +674,281 @@ public class DiffLexer implements FlexLexer {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             { return BAD_CHARACTER;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 22: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 40: break;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('           case 2: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             { return WHITE_SPACE;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 23: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 41: break;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('           case 3: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return OTHER;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return OTHER;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 24: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 42: break;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('           case 4: \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return DELETED;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return CONTEXT_DELETED_LINE;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 25: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 43: break;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('           case 5: \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return ADDED;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return CONTEXT_CHANGED_LINE;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 26: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 44: break;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('           case 6: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return CONTEXT_INSERTED_LINE;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 45: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 7: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return UNIFIED_COMMON_LINE;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 46: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 8: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return UNIFIED_DELETED_LINE;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 47: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 9: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return UNIFIED_INSERTED_LINE;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 48: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 10: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return NORMAL_TO_LINE;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 49: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 11: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return NORMAL_FROM_LINE;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 50: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 12: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return OTHER;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 51: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 13: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { return GIT_HEAD;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return EOLHINT;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 27: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 7: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 52: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 14: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(NORMAL); return NORMAL_ADD_COMMAND;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 53: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 15: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(NORMAL); return NORMAL_CHANGE_COMMAND;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 54: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 16: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(NORMAL); return NORMAL_DELETE_COMMAND;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 55: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 17: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return OTHER;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return EOLHINT;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 28: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 8: \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return SEPARATOR;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 56: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 18: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return CONTEXT_COMMON_LINE;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 29: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 9: \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return MODIFIED;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 57: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 19: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed base length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzStartRead, 3);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return NORMAL_SEPARATOR;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 30: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 10: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 58: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 20: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(NORMAL); return NORMAL_ADD_COMMAND;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 59: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 21: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(NORMAL); return NORMAL_CHANGE_COMMAND;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 60: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 22: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(NORMAL); return NORMAL_DELETE_COMMAND;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 61: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 23: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return EOLHINT;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(CONTEXT); return CONTEXT_FROM_LABEL;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 31: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 11: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 62: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 24: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(UNIFIED); return UNIFIED_FROM_LABEL;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 63: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 25: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return CONTEXT_TO_LABEL;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 64: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 26: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return UNIFIED_TO_LABEL;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 65: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 27: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { return GIT_HEAD;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(CONTEXT); return CONTEXT_FROM_LABEL;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 32: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 12: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 66: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 28: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(UNIFIED); return UNIFIED_FROM_LABEL;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 67: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 29: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return HUNK_HEAD;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(YYINITIAL); return COMMAND;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 33: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 13: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 68: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 30: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return EOLHINT;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return CONTEXT_TO_LABEL;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 34: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 14: \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { return SEPARATOR;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 69: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 31: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return UNIFIED_TO_LABEL;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 35: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 15: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 70: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 32: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return HUNK_HEAD;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { yybegin(YYINITIAL); return COMMAND;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 36: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 16: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 71: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 33: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return FILE;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return UNIFIED_LINE_NUMBERS;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 37: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 17: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 72: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 34: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(GitHead); return GIT_HEAD;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return UNIFIED_LINE_NUMBERS;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 38: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 18: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 73: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 35: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return COMMAND;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return CONTEXT_FROM_LINE_NUMBERS;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 39: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 19: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 74: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 36: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return FILE;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return CONTEXT_TO_LINE_NUMBERS;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 40: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 20: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 75: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 37: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(GitHead); return GIT_HEAD;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return CONTEXT_FROM_LINE_NUMBERS;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 41: break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 21: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 76: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 38: \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // lookahead expression with fixed lookahead length\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('                 (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzMarkedPos, -2);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            { yybegin(DEFAULT); return COMMAND;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return CONTEXT_TO_LINE_NUMBERS;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             } \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-          case 42: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 77: break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 39: \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // lookahead expression with fixed base length\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            zzMarkedPos = Character.offsetByCodePoints\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                (zzBufferL/*, zzStartRead, zzEndRead - zzStartRead*/, zzStartRead, 15);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            { return CONTEXT_HUNK_SEPERATOR;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            } \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            // fall through\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+          case 78: break;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('           default:\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             zzScanError(ZZ_NO_MATCH);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('           }\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/parser/DiffParser.java b/src/main/generated-java/de/thomasrosenau/diffplugin/parser/DiffParser.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 94ccfe2..8a6b80d 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/generated-java/de/thomasrosenau/diffplugin/parser/DiffParser.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/parser/DiffParser.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -23,14 +23,59 @@ public class DiffParser implements PsiParser, LightPsiParser {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     builder_ = adapt_builder_(root_, builder_, this, null);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     Marker marker_ = enter_section_(builder_, 0, _COLLAPSE_, null);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (root_ == CHANGED) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-      result_ = changed(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (root_ == ANY_LINE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = anyLine(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    else if (root_ == INFO) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-      result_ = info(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == CONSOLE_COMMAND) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = consoleCommand(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    else if (root_ == PLAIN) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-      result_ = plain(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == CONTEXT_DIFF) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = contextDiff(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == CONTEXT_FROM_FILE_LINE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = contextFromFileLine(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == CONTEXT_HUNK) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = contextHunk(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == CONTEXT_HUNK_FROM) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = contextHunkFrom(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == CONTEXT_HUNK_TO) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = contextHunkTo(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == CONTEXT_TO_FILE_LINE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = contextToFileLine(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == LEADING_TEXT) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = leadingText(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == NORMAL_DIFF) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = normalDiff(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == NORMAL_HUNK) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = normalHunk(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == NORMAL_HUNK_ADD) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = normalHunkAdd(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == NORMAL_HUNK_CHANGE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = normalHunkChange(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == NORMAL_HUNK_DELETE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = normalHunkDelete(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == TRAILING_TEXT) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = trailingText(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == UNIFIED_DIFF) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = unifiedDiff(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == UNIFIED_HUNK) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = unifiedHunk(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else if (root_ == UNIFIED_LINE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      result_ = unifiedLine(builder_, 0);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     else {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       result_ = parse_root_(root_, builder_, 0);\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -43,65 +88,514 @@ public class DiffParser implements PsiParser, LightPsiParser {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  // ADDED | DELETED | MODIFIED\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  public static boolean changed(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!recursion_guard_(builder_, level_, "changed")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // WHITE_SPACE | OTHER\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean anyLine(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "anyLine")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!nextTokenIs(builder_, "<any line>", OTHER, WHITE_SPACE)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    Marker marker_ = enter_section_(builder_, level_, _NONE_, CHANGED, "<changed>");\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    result_ = consumeToken(builder_, ADDED);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!result_) result_ = consumeToken(builder_, DELETED);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!result_) result_ = consumeToken(builder_, MODIFIED);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_, level_, _NONE_, ANY_LINE, "<any line>");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, WHITE_SPACE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = consumeToken(builder_, OTHER);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     exit_section_(builder_, level_, marker_, result_, false, null);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  // (info | changed | plain)*\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  static boolean diffFile(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!recursion_guard_(builder_, level_, "diffFile")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // COMMAND\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean consoleCommand(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "consoleCommand")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!nextTokenIs(builder_, COMMAND)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, COMMAND);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, CONSOLE_COMMAND, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // CONTEXT_FROM_LABEL CONTEXT_TO_LABEL contextHunk+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean contextDiff(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "contextDiff")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!nextTokenIs(builder_, CONTEXT_FROM_LABEL)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeTokens(builder_, 0, CONTEXT_FROM_LABEL, CONTEXT_TO_LABEL);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && contextDiff_2(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, CONTEXT_DIFF, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // contextHunk+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean contextDiff_2(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "contextDiff_2")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = contextHunk(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (result_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!contextHunk(builder_, level_ + 1)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "contextDiff_2", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, null, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // CONTEXT_COMMON_LINE | CONTEXT_CHANGED_LINE | CONTEXT_DELETED_LINE\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean contextFromFileLine(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "contextFromFileLine")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_, level_, _NONE_, CONTEXT_FROM_FILE_LINE, "<context from file line>");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, CONTEXT_COMMON_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = consumeToken(builder_, CONTEXT_CHANGED_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = consumeToken(builder_, CONTEXT_DELETED_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, level_, marker_, result_, false, null);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // CONTEXT_HUNK_SEPERATOR contextHunkFrom contextHunkTo\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean contextHunk(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "contextHunk")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!nextTokenIs(builder_, CONTEXT_HUNK_SEPERATOR)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, CONTEXT_HUNK_SEPERATOR);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && contextHunkFrom(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && contextHunkTo(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, CONTEXT_HUNK, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // CONTEXT_FROM_LINE_NUMBERS contextFromFileLine* (EOLHINT)?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean contextHunkFrom(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "contextHunkFrom")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!nextTokenIs(builder_, CONTEXT_FROM_LINE_NUMBERS)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, CONTEXT_FROM_LINE_NUMBERS);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && contextHunkFrom_1(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && contextHunkFrom_2(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, CONTEXT_HUNK_FROM, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // contextFromFileLine*\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean contextHunkFrom_1(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "contextHunkFrom_1")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     while (true) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-      if (!diffFile_0(builder_, level_ + 1)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-      if (!empty_element_parsed_guard_(builder_, "diffFile", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!contextFromFileLine(builder_, level_ + 1)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "contextHunkFrom_1", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     return true;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  // info | changed | plain\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // (EOLHINT)?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean contextHunkFrom_2(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "contextHunkFrom_2")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    consumeToken(builder_, EOLHINT);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return true;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // CONTEXT_TO_LINE_NUMBERS contextToFileLine* (EOLHINT)?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean contextHunkTo(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "contextHunkTo")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!nextTokenIs(builder_, CONTEXT_TO_LINE_NUMBERS)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, CONTEXT_TO_LINE_NUMBERS);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && contextHunkTo_1(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && contextHunkTo_2(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, CONTEXT_HUNK_TO, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // contextToFileLine*\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean contextHunkTo_1(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "contextHunkTo_1")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (true) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!contextToFileLine(builder_, level_ + 1)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "contextHunkTo_1", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return true;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // (EOLHINT)?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean contextHunkTo_2(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "contextHunkTo_2")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    consumeToken(builder_, EOLHINT);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return true;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // CONTEXT_COMMON_LINE | CONTEXT_CHANGED_LINE | CONTEXT_INSERTED_LINE\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean contextToFileLine(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "contextToFileLine")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_, level_, _NONE_, CONTEXT_TO_FILE_LINE, "<context to file line>");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, CONTEXT_COMMON_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = consumeToken(builder_, CONTEXT_CHANGED_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = consumeToken(builder_, CONTEXT_INSERTED_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, level_, marker_, result_, false, null);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // (leadingText (normalDiff | contextDiff | unifiedDiff))+ trailingText\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  static boolean diffFile(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "diffFile")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = diffFile_0(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && trailingText(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, null, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // (leadingText (normalDiff | contextDiff | unifiedDiff))+\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   private static boolean diffFile_0(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     if (!recursion_guard_(builder_, level_, "diffFile_0")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    result_ = info(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!result_) result_ = changed(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!result_) result_ = plain(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = diffFile_0_0(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (result_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!diffFile_0_0(builder_, level_ + 1)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "diffFile_0", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, null, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // leadingText (normalDiff | contextDiff | unifiedDiff)\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean diffFile_0_0(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "diffFile_0_0")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = leadingText(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && diffFile_0_0_1(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, null, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // normalDiff | contextDiff | unifiedDiff\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean diffFile_0_0_1(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "diffFile_0_0_1")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = normalDiff(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = contextDiff(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = unifiedDiff(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  // COMMAND | FILE | SEPARATOR | HUNK_HEAD | EOLHINT | GIT_HEAD\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  public static boolean info(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!recursion_guard_(builder_, level_, "info")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // anyLine* (consoleCommand anyLine*)?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean leadingText(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "leadingText")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    Marker marker_ = enter_section_(builder_, level_, _NONE_, INFO, "<info>");\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    result_ = consumeToken(builder_, COMMAND);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!result_) result_ = consumeToken(builder_, FILE);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!result_) result_ = consumeToken(builder_, SEPARATOR);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!result_) result_ = consumeToken(builder_, HUNK_HEAD);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!result_) result_ = consumeToken(builder_, EOLHINT);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!result_) result_ = consumeToken(builder_, GIT_HEAD);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_, level_, _NONE_, LEADING_TEXT, "<leading text>");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = leadingText_0(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && leadingText_1(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, level_, marker_, result_, false, null);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // anyLine*\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean leadingText_0(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "leadingText_0")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (true) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!anyLine(builder_, level_ + 1)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "leadingText_0", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return true;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // (consoleCommand anyLine*)?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean leadingText_1(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "leadingText_1")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    leadingText_1_0(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return true;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // consoleCommand anyLine*\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean leadingText_1_0(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "leadingText_1_0")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consoleCommand(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && leadingText_1_0_1(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, null, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // anyLine*\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean leadingText_1_0_1(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "leadingText_1_0_1")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (true) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!anyLine(builder_, level_ + 1)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "leadingText_1_0_1", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return true;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // normalHunk+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean normalDiff(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalDiff")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_, level_, _NONE_, NORMAL_DIFF, "<normal diff>");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = normalHunk(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (result_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!normalHunk(builder_, level_ + 1)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "normalDiff", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     exit_section_(builder_, level_, marker_, result_, false, null);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  // OTHER\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  public static boolean plain(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!recursion_guard_(builder_, level_, "plain")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    if (!nextTokenIs(builder_, OTHER)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // normalHunkAdd | normalHunkChange | normalHunkDelete\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean normalHunk(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunk")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_, level_, _NONE_, NORMAL_HUNK, "<normal hunk>");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = normalHunkAdd(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = normalHunkChange(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = normalHunkDelete(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, level_, marker_, result_, false, null);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // NORMAL_ADD_COMMAND NORMAL_TO_LINE+ EOLHINT?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean normalHunkAdd(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunkAdd")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!nextTokenIs(builder_, NORMAL_ADD_COMMAND)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, NORMAL_ADD_COMMAND);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && normalHunkAdd_1(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && normalHunkAdd_2(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, NORMAL_HUNK_ADD, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // NORMAL_TO_LINE+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean normalHunkAdd_1(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunkAdd_1")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, NORMAL_TO_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (result_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!consumeToken(builder_, NORMAL_TO_LINE)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "normalHunkAdd_1", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, null, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // EOLHINT?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean normalHunkAdd_2(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunkAdd_2")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    consumeToken(builder_, EOLHINT);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return true;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // NORMAL_CHANGE_COMMAND NORMAL_FROM_LINE+ EOLHINT? NORMAL_SEPARATOR NORMAL_TO_LINE+ EOLHINT?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean normalHunkChange(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunkChange")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!nextTokenIs(builder_, NORMAL_CHANGE_COMMAND)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    result_ = consumeToken(builder_, OTHER);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    exit_section_(builder_, marker_, PLAIN, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, NORMAL_CHANGE_COMMAND);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && normalHunkChange_1(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && normalHunkChange_2(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && consumeToken(builder_, NORMAL_SEPARATOR);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && normalHunkChange_4(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && normalHunkChange_5(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, NORMAL_HUNK_CHANGE, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // NORMAL_FROM_LINE+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean normalHunkChange_1(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunkChange_1")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, NORMAL_FROM_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (result_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!consumeToken(builder_, NORMAL_FROM_LINE)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "normalHunkChange_1", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, null, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // EOLHINT?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean normalHunkChange_2(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunkChange_2")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    consumeToken(builder_, EOLHINT);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return true;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // NORMAL_TO_LINE+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean normalHunkChange_4(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunkChange_4")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, NORMAL_TO_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (result_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!consumeToken(builder_, NORMAL_TO_LINE)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "normalHunkChange_4", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, null, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // EOLHINT?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean normalHunkChange_5(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunkChange_5")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    consumeToken(builder_, EOLHINT);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return true;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // NORMAL_DELETE_COMMAND NORMAL_FROM_LINE+ EOLHINT?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean normalHunkDelete(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunkDelete")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!nextTokenIs(builder_, NORMAL_DELETE_COMMAND)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, NORMAL_DELETE_COMMAND);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && normalHunkDelete_1(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && normalHunkDelete_2(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, NORMAL_HUNK_DELETE, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // NORMAL_FROM_LINE+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean normalHunkDelete_1(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunkDelete_1")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, NORMAL_FROM_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (result_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!consumeToken(builder_, NORMAL_FROM_LINE)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "normalHunkDelete_1", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, null, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // EOLHINT?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean normalHunkDelete_2(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "normalHunkDelete_2")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    consumeToken(builder_, EOLHINT);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return true;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // anyLine*\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean trailingText(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "trailingText")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_, level_, _NONE_, TRAILING_TEXT, "<trailing text>");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (true) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!anyLine(builder_, level_ + 1)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "trailingText", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, level_, marker_, true, false, null);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return true;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // UNIFIED_FROM_LABEL UNIFIED_TO_LABEL unifiedHunk+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean unifiedDiff(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "unifiedDiff")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!nextTokenIs(builder_, UNIFIED_FROM_LABEL)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeTokens(builder_, 0, UNIFIED_FROM_LABEL, UNIFIED_TO_LABEL);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && unifiedDiff_2(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, UNIFIED_DIFF, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // unifiedHunk+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean unifiedDiff_2(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "unifiedDiff_2")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = unifiedHunk(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (result_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!unifiedHunk(builder_, level_ + 1)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "unifiedDiff_2", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, null, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // UNIFIED_LINE_NUMBERS (unifiedLine | WHITE_SPACE)+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean unifiedHunk(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "unifiedHunk")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!nextTokenIs(builder_, UNIFIED_LINE_NUMBERS)) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, UNIFIED_LINE_NUMBERS);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = result_ && unifiedHunk_1(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, UNIFIED_HUNK, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // (unifiedLine | WHITE_SPACE)+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean unifiedHunk_1(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "unifiedHunk_1")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = unifiedHunk_1_0(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    while (result_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      int pos_ = current_position_(builder_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!unifiedHunk_1_0(builder_, level_ + 1)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (!empty_element_parsed_guard_(builder_, "unifiedHunk_1", pos_)) break;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, marker_, null, result_);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // unifiedLine | WHITE_SPACE\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  private static boolean unifiedHunk_1_0(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "unifiedHunk_1_0")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = unifiedLine(builder_, level_ + 1);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = consumeToken(builder_, WHITE_SPACE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  /* ********************************************************** */\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  // UNIFIED_INSERTED_LINE | UNIFIED_DELETED_LINE | UNIFIED_COMMON_LINE | EOLHINT\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public static boolean unifiedLine(PsiBuilder builder_, int level_) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!recursion_guard_(builder_, level_, "unifiedLine")) return false;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    boolean result_;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    Marker marker_ = enter_section_(builder_, level_, _NONE_, UNIFIED_LINE, "<unified line>");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    result_ = consumeToken(builder_, UNIFIED_INSERTED_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = consumeToken(builder_, UNIFIED_DELETED_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = consumeToken(builder_, UNIFIED_COMMON_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (!result_) result_ = consumeToken(builder_, EOLHINT);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    exit_section_(builder_, level_, marker_, result_, false, null);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     return result_;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffPlain.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffAnyLine.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('similarity index 80%')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename from src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffPlain.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename to src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffAnyLine.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 36c872b..a4bc0fb 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffPlain.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffAnyLine.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -5,6 +5,6 @@ import java.util.List;')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-public interface DiffPlain extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffAnyLine extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' }\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffConsoleCommand.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffConsoleCommand.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..640d920')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffConsoleCommand.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,10 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffConsoleCommand extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextDiff.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextDiff.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..dda6a44')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextDiff.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,13 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffContextDiff extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  List<DiffContextHunk> getContextHunkList();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextFromFileLine.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextFromFileLine.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..4d226a7')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextFromFileLine.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,10 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffContextFromFileLine extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunk.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunk.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..d621e93')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunk.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,16 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffContextHunk extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  DiffContextHunkFrom getContextHunkFrom();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  DiffContextHunkTo getContextHunkTo();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunkFrom.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunkFrom.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..848eb08')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunkFrom.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,13 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffContextHunkFrom extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  List<DiffContextFromFileLine> getContextFromFileLineList();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunkTo.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunkTo.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..42fe567')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextHunkTo.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,13 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffContextHunkTo extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  List<DiffContextToFileLine> getContextToFileLineList();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextToFileLine.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextToFileLine.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..1af8db5')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffContextToFileLine.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,10 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffContextToFileLine extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffLeadingText.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffLeadingText.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..79103e4')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffLeadingText.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,16 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffLeadingText extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  List<DiffAnyLine> getAnyLineList();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Nullable\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  DiffConsoleCommand getConsoleCommand();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalDiff.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalDiff.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..3fe3b40')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalDiff.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,13 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffNormalDiff extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  List<DiffNormalHunk> getNormalHunkList();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunk.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunk.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..1726eae')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunk.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,19 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffNormalHunk extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Nullable\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  DiffNormalHunkAdd getNormalHunkAdd();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Nullable\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  DiffNormalHunkChange getNormalHunkChange();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Nullable\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  DiffNormalHunkDelete getNormalHunkDelete();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffInfo.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunkAdd.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('similarity index 78%')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename from src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffInfo.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename to src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunkAdd.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 68b6360..94cd46e 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffInfo.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunkAdd.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -5,6 +5,6 @@ import java.util.List;')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-public interface DiffInfo extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffNormalHunkAdd extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' }\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunkChange.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunkChange.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..f8b9b6b')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunkChange.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,10 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffNormalHunkChange extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunkDelete.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunkDelete.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..0a438f3')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffNormalHunkDelete.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,10 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffNormalHunkDelete extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffTrailingText.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffTrailingText.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..4b9cdba')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffTrailingText.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,13 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffTrailingText extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  List<DiffAnyLine> getAnyLineList();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffTypes.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffTypes.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index f894200..116b053 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffTypes.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffTypes.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -8,32 +8,107 @@ import de.thomasrosenau.diffplugin.psi.impl.*;')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' public interface DiffTypes {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  IElementType CHANGED = new DiffElementType("CHANGED");\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  IElementType INFO = new DiffElementType("INFO");\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  IElementType PLAIN = new DiffElementType("PLAIN");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType ANY_LINE = new DiffElementType("ANY_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONSOLE_COMMAND = new DiffElementType("CONSOLE_COMMAND");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_DIFF = new DiffElementType("CONTEXT_DIFF");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_FROM_FILE_LINE = new DiffElementType("CONTEXT_FROM_FILE_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_HUNK = new DiffElementType("CONTEXT_HUNK");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_HUNK_FROM = new DiffElementType("CONTEXT_HUNK_FROM");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_HUNK_TO = new DiffElementType("CONTEXT_HUNK_TO");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_TO_FILE_LINE = new DiffElementType("CONTEXT_TO_FILE_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType LEADING_TEXT = new DiffElementType("LEADING_TEXT");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType NORMAL_DIFF = new DiffElementType("NORMAL_DIFF");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType NORMAL_HUNK = new DiffElementType("NORMAL_HUNK");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType NORMAL_HUNK_ADD = new DiffElementType("NORMAL_HUNK_ADD");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType NORMAL_HUNK_CHANGE = new DiffElementType("NORMAL_HUNK_CHANGE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType NORMAL_HUNK_DELETE = new DiffElementType("NORMAL_HUNK_DELETE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType TRAILING_TEXT = new DiffElementType("TRAILING_TEXT");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType UNIFIED_DIFF = new DiffElementType("UNIFIED_DIFF");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType UNIFIED_HUNK = new DiffElementType("UNIFIED_HUNK");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType UNIFIED_LINE = new DiffElementType("UNIFIED_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  IElementType ADDED = new DiffTokenType("ADDED");\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   IElementType COMMAND = new DiffTokenType("COMMAND");\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  IElementType DELETED = new DiffTokenType("DELETED");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_CHANGED_LINE = new DiffTokenType("CONTEXT_CHANGED_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_COMMON_LINE = new DiffTokenType("CONTEXT_COMMON_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_DELETED_LINE = new DiffTokenType("CONTEXT_DELETED_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_FROM_LABEL = new DiffTokenType("CONTEXT_FROM_LABEL");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_FROM_LINE_NUMBERS = new DiffTokenType("CONTEXT_FROM_LINE_NUMBERS");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_HUNK_SEPERATOR = new DiffTokenType("CONTEXT_HUNK_SEPERATOR");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_INSERTED_LINE = new DiffTokenType("CONTEXT_INSERTED_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_TO_LABEL = new DiffTokenType("CONTEXT_TO_LABEL");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType CONTEXT_TO_LINE_NUMBERS = new DiffTokenType("CONTEXT_TO_LINE_NUMBERS");\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   IElementType EOLHINT = new DiffTokenType("EOLHINT");\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  IElementType FILE = new DiffTokenType("FILE");\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  IElementType GIT_HEAD = new DiffTokenType("GIT_HEAD");\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  IElementType HUNK_HEAD = new DiffTokenType("HUNK_HEAD");\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  IElementType MODIFIED = new DiffTokenType("MODIFIED");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType NORMAL_ADD_COMMAND = new DiffTokenType("NORMAL_ADD_COMMAND");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType NORMAL_CHANGE_COMMAND = new DiffTokenType("NORMAL_CHANGE_COMMAND");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType NORMAL_DELETE_COMMAND = new DiffTokenType("NORMAL_DELETE_COMMAND");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType NORMAL_FROM_LINE = new DiffTokenType("NORMAL_FROM_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType NORMAL_SEPARATOR = new DiffTokenType("NORMAL_SEPARATOR");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType NORMAL_TO_LINE = new DiffTokenType("NORMAL_TO_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   IElementType OTHER = new DiffTokenType("OTHER");\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  IElementType SEPARATOR = new DiffTokenType("SEPARATOR");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType UNIFIED_COMMON_LINE = new DiffTokenType("UNIFIED_COMMON_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType UNIFIED_DELETED_LINE = new DiffTokenType("UNIFIED_DELETED_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType UNIFIED_FROM_LABEL = new DiffTokenType("UNIFIED_FROM_LABEL");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType UNIFIED_INSERTED_LINE = new DiffTokenType("UNIFIED_INSERTED_LINE");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType UNIFIED_LINE_NUMBERS = new DiffTokenType("UNIFIED_LINE_NUMBERS");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType UNIFIED_TO_LABEL = new DiffTokenType("UNIFIED_TO_LABEL");\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  IElementType WHITE_SPACE = new DiffTokenType("WHITE_SPACE");\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   class Factory {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     public static PsiElement createElement(ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       IElementType type = node.getElementType();\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-      if (type == CHANGED) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        return new DiffChangedImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      if (type == ANY_LINE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffAnyLineImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-      else if (type == INFO) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        return new DiffInfoImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == CONSOLE_COMMAND) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffConsoleCommandImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-      else if (type == PLAIN) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        return new DiffPlainImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == CONTEXT_DIFF) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffContextDiffImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == CONTEXT_FROM_FILE_LINE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffContextFromFileLineImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == CONTEXT_HUNK) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffContextHunkImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == CONTEXT_HUNK_FROM) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffContextHunkFromImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == CONTEXT_HUNK_TO) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffContextHunkToImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == CONTEXT_TO_FILE_LINE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffContextToFileLineImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == LEADING_TEXT) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffLeadingTextImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == NORMAL_DIFF) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffNormalDiffImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == NORMAL_HUNK) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffNormalHunkImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == NORMAL_HUNK_ADD) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffNormalHunkAddImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == NORMAL_HUNK_CHANGE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffNormalHunkChangeImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == NORMAL_HUNK_DELETE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffNormalHunkDeleteImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == TRAILING_TEXT) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffTrailingTextImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == UNIFIED_DIFF) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffUnifiedDiffImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == UNIFIED_HUNK) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffUnifiedHunkImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+      else if (type == UNIFIED_LINE) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return new DiffUnifiedLineImpl(node);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('       throw new AssertionError("Unknown element type: " + type);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     }\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffUnifiedDiff.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffUnifiedDiff.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..5ae0d53')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffUnifiedDiff.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,13 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffUnifiedDiff extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  List<DiffUnifiedHunk> getUnifiedHunkList();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffUnifiedHunk.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffUnifiedHunk.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..dc25ddc')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffUnifiedHunk.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,13 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffUnifiedHunk extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  List<DiffUnifiedLine> getUnifiedLineList();\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffChanged.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffUnifiedLine.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('similarity index 78%')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename from src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffChanged.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename to src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffUnifiedLine.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 337d120..6c498d8 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffChanged.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffUnifiedLine.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -5,6 +5,6 @@ import java.util.List;')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-public interface DiffChanged extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public interface DiffUnifiedLine extends PsiElement {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' }\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffVisitor.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffVisitor.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index ab7720e..d1b1475 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffVisitor.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/DiffVisitor.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -7,15 +7,75 @@ import com.intellij.psi.PsiElement;')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' public class DiffVisitor extends PsiElementVisitor {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  public void visitChanged(@NotNull DiffChanged o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitAnyLine(@NotNull DiffAnyLine o) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  public void visitInfo(@NotNull DiffInfo o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitConsoleCommand(@NotNull DiffConsoleCommand o) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  public void visitPlain(@NotNull DiffPlain o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitContextDiff(@NotNull DiffContextDiff o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitContextFromFileLine(@NotNull DiffContextFromFileLine o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitContextHunk(@NotNull DiffContextHunk o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitContextHunkFrom(@NotNull DiffContextHunkFrom o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitContextHunkTo(@NotNull DiffContextHunkTo o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitContextToFileLine(@NotNull DiffContextToFileLine o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitLeadingText(@NotNull DiffLeadingText o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitNormalDiff(@NotNull DiffNormalDiff o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitNormalHunk(@NotNull DiffNormalHunk o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitNormalHunkAdd(@NotNull DiffNormalHunkAdd o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitNormalHunkChange(@NotNull DiffNormalHunkChange o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitNormalHunkDelete(@NotNull DiffNormalHunkDelete o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitTrailingText(@NotNull DiffTrailingText o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitUnifiedDiff(@NotNull DiffUnifiedDiff o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitUnifiedHunk(@NotNull DiffUnifiedHunk o) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void visitUnifiedLine(@NotNull DiffUnifiedLine o) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     visitPsiElement(o);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffChangedImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffAnyLineImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('similarity index 81%')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename from src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffChangedImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename to src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffAnyLineImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index fd51904..d3f11ce 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffChangedImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffAnyLineImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -11,14 +11,14 @@ import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-public class DiffChangedImpl extends ASTWrapperPsiElement implements DiffChanged {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffAnyLineImpl extends ASTWrapperPsiElement implements DiffAnyLine {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  public DiffChangedImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffAnyLineImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    visitor.visitChanged(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitAnyLine(this);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   public void accept(@NotNull PsiElementVisitor visitor) {\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffConsoleCommandImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffConsoleCommandImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..a848724')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffConsoleCommandImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,29 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffConsoleCommandImpl extends ASTWrapperPsiElement implements DiffConsoleCommand {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffConsoleCommandImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitConsoleCommand(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextDiffImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextDiffImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..a51ed0f')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextDiffImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,35 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffContextDiffImpl extends ASTWrapperPsiElement implements DiffContextDiff {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffContextDiffImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitContextDiff(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public List<DiffContextHunk> getContextHunkList() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return PsiTreeUtil.getChildrenOfTypeAsList(this, DiffContextHunk.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextFromFileLineImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextFromFileLineImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..9ae256b')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextFromFileLineImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,29 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffContextFromFileLineImpl extends ASTWrapperPsiElement implements DiffContextFromFileLine {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffContextFromFileLineImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitContextFromFileLine(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkFromImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkFromImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..eddf129')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkFromImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,35 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffContextHunkFromImpl extends ASTWrapperPsiElement implements DiffContextHunkFrom {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffContextHunkFromImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitContextHunkFrom(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public List<DiffContextFromFileLine> getContextFromFileLineList() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return PsiTreeUtil.getChildrenOfTypeAsList(this, DiffContextFromFileLine.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..a122713')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,41 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffContextHunkImpl extends ASTWrapperPsiElement implements DiffContextHunk {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffContextHunkImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitContextHunk(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffContextHunkFrom getContextHunkFrom() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return findNotNullChildByClass(DiffContextHunkFrom.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffContextHunkTo getContextHunkTo() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return findNotNullChildByClass(DiffContextHunkTo.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkToImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkToImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..dbf0974')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextHunkToImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,35 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffContextHunkToImpl extends ASTWrapperPsiElement implements DiffContextHunkTo {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffContextHunkToImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitContextHunkTo(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public List<DiffContextToFileLine> getContextToFileLineList() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return PsiTreeUtil.getChildrenOfTypeAsList(this, DiffContextToFileLine.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextToFileLineImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextToFileLineImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..a4c0122')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffContextToFileLineImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,29 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffContextToFileLineImpl extends ASTWrapperPsiElement implements DiffContextToFileLine {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffContextToFileLineImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitContextToFileLine(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffLeadingTextImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffLeadingTextImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..1aa1f42')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffLeadingTextImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,41 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffLeadingTextImpl extends ASTWrapperPsiElement implements DiffLeadingText {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffLeadingTextImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitLeadingText(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public List<DiffAnyLine> getAnyLineList() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return PsiTreeUtil.getChildrenOfTypeAsList(this, DiffAnyLine.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Nullable\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffConsoleCommand getConsoleCommand() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return findChildByClass(DiffConsoleCommand.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalDiffImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalDiffImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..8003fbb')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalDiffImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,35 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffNormalDiffImpl extends ASTWrapperPsiElement implements DiffNormalDiff {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffNormalDiffImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitNormalDiff(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public List<DiffNormalHunk> getNormalHunkList() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return PsiTreeUtil.getChildrenOfTypeAsList(this, DiffNormalHunk.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffPlainImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkAddImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('similarity index 79%')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename from src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffPlainImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename to src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkAddImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 4489095..5a4af96 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffPlainImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkAddImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -11,14 +11,14 @@ import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-public class DiffPlainImpl extends ASTWrapperPsiElement implements DiffPlain {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffNormalHunkAddImpl extends ASTWrapperPsiElement implements DiffNormalHunkAdd {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  public DiffPlainImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffNormalHunkAddImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    visitor.visitPlain(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitNormalHunkAdd(this);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   public void accept(@NotNull PsiElementVisitor visitor) {\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkChangeImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkChangeImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..86d6650')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkChangeImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,29 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffNormalHunkChangeImpl extends ASTWrapperPsiElement implements DiffNormalHunkChange {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffNormalHunkChangeImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitNormalHunkChange(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkDeleteImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkDeleteImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..9674d1e')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkDeleteImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,29 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffNormalHunkDeleteImpl extends ASTWrapperPsiElement implements DiffNormalHunkDelete {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffNormalHunkDeleteImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitNormalHunkDelete(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..1621141')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffNormalHunkImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,47 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffNormalHunkImpl extends ASTWrapperPsiElement implements DiffNormalHunk {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffNormalHunkImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitNormalHunk(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Nullable\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffNormalHunkAdd getNormalHunkAdd() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return findChildByClass(DiffNormalHunkAdd.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Nullable\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffNormalHunkChange getNormalHunkChange() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return findChildByClass(DiffNormalHunkChange.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Nullable\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffNormalHunkDelete getNormalHunkDelete() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return findChildByClass(DiffNormalHunkDelete.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffTrailingTextImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffTrailingTextImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..635ede2')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffTrailingTextImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,35 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffTrailingTextImpl extends ASTWrapperPsiElement implements DiffTrailingText {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffTrailingTextImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitTrailingText(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public List<DiffAnyLine> getAnyLineList() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return PsiTreeUtil.getChildrenOfTypeAsList(this, DiffAnyLine.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffUnifiedDiffImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffUnifiedDiffImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..e0b64de')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffUnifiedDiffImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,35 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffUnifiedDiffImpl extends ASTWrapperPsiElement implements DiffUnifiedDiff {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffUnifiedDiffImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitUnifiedDiff(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public List<DiffUnifiedHunk> getUnifiedHunkList() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return PsiTreeUtil.getChildrenOfTypeAsList(this, DiffUnifiedHunk.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffUnifiedHunkImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffUnifiedHunkImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('new file mode 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0000000..f3f10bd')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- /dev/null')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffUnifiedHunkImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -0,0 +1,35 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// This is a generated file. Not intended for manual editing.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+package de.thomasrosenau.diffplugin.psi.impl;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import java.util.List;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import org.jetbrains.annotations.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.lang.ASTNode;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.PsiElementVisitor;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.psi.util.PsiTreeUtil;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffUnifiedHunkImpl extends ASTWrapperPsiElement implements DiffUnifiedHunk {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffUnifiedHunkImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitUnifiedHunk(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public void accept(@NotNull PsiElementVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    if (visitor instanceof DiffVisitor) accept((DiffVisitor)visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    else super.accept(visitor);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @Override\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public List<DiffUnifiedLine> getUnifiedLineList() {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    return PsiTreeUtil.getChildrenOfTypeAsList(this, DiffUnifiedLine.class);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffInfoImpl.java b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffUnifiedLineImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('similarity index 80%')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename from src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffInfoImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('rename to src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffUnifiedLineImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 074dfe3..1f20759 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffInfoImpl.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/generated-java/de/thomasrosenau/diffplugin/psi/impl/DiffUnifiedLineImpl.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -11,14 +11,14 @@ import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import com.intellij.extapi.psi.ASTWrapperPsiElement;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import de.thomasrosenau.diffplugin.psi.*;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-public class DiffInfoImpl extends ASTWrapperPsiElement implements DiffInfo {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+public class DiffUnifiedLineImpl extends ASTWrapperPsiElement implements DiffUnifiedLine {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  public DiffInfoImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  public DiffUnifiedLineImpl(@NotNull ASTNode node) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     super(node);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   public void accept(@NotNull DiffVisitor visitor) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    visitor.visitInfo(this);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    visitor.visitUnifiedLine(this);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   public void accept(@NotNull PsiElementVisitor visitor) {\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/java/de/thomasrosenau/diffplugin/highlighter/DiffColorSettingsPage.java b/src/main/java/de/thomasrosenau/diffplugin/highlighter/DiffColorSettingsPage.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index a1a93db..981698b 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/java/de/thomasrosenau/diffplugin/highlighter/DiffColorSettingsPage.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/java/de/thomasrosenau/diffplugin/highlighter/DiffColorSettingsPage.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -30,16 +30,15 @@ import org.jetbrains.annotations.Nullable;')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' public class DiffColorSettingsPage implements ColorSettingsPage {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     private static final AttributesDescriptor[] DESCRIPTORS = new AttributesDescriptor[] {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            new AttributesDescriptor("Changed lines//Inserted line", DiffSyntaxHighlighter.ADDED),\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            new AttributesDescriptor("Changed lines//Inserted line", DiffSyntaxHighlighter.INSERTED),\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             new AttributesDescriptor("Changed lines//Deleted line", DiffSyntaxHighlighter.DELETED),\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            new AttributesDescriptor("Changed lines//Changed line", DiffSyntaxHighlighter.MODIFIED),\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            new AttributesDescriptor("Changed lines//Changed line", DiffSyntaxHighlighter.CHANGED),\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             new AttributesDescriptor("Meta info//Console command", DiffSyntaxHighlighter.COMMAND),\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             new AttributesDescriptor("Meta info//File names", DiffSyntaxHighlighter.FILE),\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             new AttributesDescriptor("Meta info//Newline hint", DiffSyntaxHighlighter.EOLHINT),\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            new AttributesDescriptor("Meta info//git patch header", DiffSyntaxHighlighter.GIT_HEAD),\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             new AttributesDescriptor("Hunk header", DiffSyntaxHighlighter.HUNK_HEAD),\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             new AttributesDescriptor("Separator", DiffSyntaxHighlighter.SEPARATOR),\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            new AttributesDescriptor("Text", DiffSyntaxHighlighter.TEXT)\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            new AttributesDescriptor("Text (default)", DiffSyntaxHighlighter.TEXT)\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     };\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     @Nullable\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -58,55 +57,22 @@ public class DiffColorSettingsPage implements ColorSettingsPage {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     @Override\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     public String getDemoText() {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         // TODO: provide better example for multiple formats\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        return "From 4c763966942c5a7376c6cd299d2ef7e617a0957b Mon Sep 17 00:00:00 2001\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "From: John Doe <john.doe@example.com>\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "Date: Wed, 21 Mar 2018 10:49:11 +0000\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "Subject: [PATCH 28/35] Fixed broken links\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "---\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " .gitignore                    |   3 +-\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " .travis.yml                   |   6 +-\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " commanderConfig.js            |  17 +++--\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " package.json                  |   2 +-\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " test/Cli.js                   | 139 ++++++++++++++++++++++++++++++++++\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " test/{index.js => Factory.js} |   4 +-\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " test/ProvidersCLI.js          |  41 ++++++++++\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " test/helpers.js               |  31 ++++++++\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " test/mocha.opts               |   1 +\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " 9 files changed, 231 insertions(+), 13 deletions(-)\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " create mode 100644 test/Cli.js\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " rename test/{index.js => Factory.js} (94%)\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " create mode 100644 test/ProvidersCLI.js\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " create mode 100644 test/helpers.js\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " create mode 100644 test/mocha.opts\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "diff --git a/test/index.js b/test/Factory.js\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "similarity index 94%\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "rename from test/index.js\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "rename to test/Factory.js\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "index e77e4b8..6a3c7f5 100644\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "--- a/test/index.js\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "+++ b/test/Factory.js\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "@@ -1,6 +1,6 @@\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " var chai = require('chai');\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " var expect = require('chai').expect;\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "-var Image = require('../image/Image.js');\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "+var Image = require('../image/Image');\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " \n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " describe('Image Factory', function () {\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "   'use strict';\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "@@ -61,7 +61,7 @@ describe('Image Providers', function () {\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "     Image.setProvider('UnsplashIt');\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " \n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "     expect(Image.getImageUrl(size))\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "-        .to.equal('https://unsplash.it/400/400');\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "+      .to.equal('https://unsplash.it/400/400');\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "   });\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                " \n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "   it('returns FakeImg URL', function () {\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "\\ No newline at end of file\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "-- \n" +\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-                "2.20.1\n";\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return "Only in lao: preamble\n" + "diff -c lao/quote tzu/quote\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "*** lao/quote\t2019-02-18 08:26:38.000000000 +0100\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "--- tzu/quote\t2019-02-18 08:23:58.000000000 +0100\n" + "***************\n" + "*** 1,7 ****\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "- The Way that can be told of is not the eternal Way;\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "- The name that can be named is not the eternal name.\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "  The Nameless is the origin of Heaven and Earth;\n" + "! The Named is the mother of all things.\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "  Therefore let there always be non-being,\n" + "    so we may see their subtlety,\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "  And let there always be being,\n" + "--- 1,6 ----\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "  The Nameless is the origin of Heaven and Earth;\n" + "! The named is the mother of all things.\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "!\n" + "  Therefore let there always be non-being,\n" + "    so we may see their subtlety,\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "  And let there always be being,\n" + "***************\n" + "*** 9,11 ****\n" + "--- 8,13 ----\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "  The two are the same,\n" + "  But after they are produced,\n" + "    they have different names.\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "+ They both may be called deep and profound.\n" + "+ Deeper and more profound,\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "+ The door of all subtleties!\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "Only in tzu: unquote\n" +\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                "\\ No newline at end of file\n";\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     @Nullable\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/java/de/thomasrosenau/diffplugin/highlighter/DiffSyntaxHighlighter.java b/src/main/java/de/thomasrosenau/diffplugin/highlighter/DiffSyntaxHighlighter.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 15fa5bf..6ff1d41 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/java/de/thomasrosenau/diffplugin/highlighter/DiffSyntaxHighlighter.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/java/de/thomasrosenau/diffplugin/highlighter/DiffSyntaxHighlighter.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -30,16 +30,17 @@ import de.thomasrosenau.diffplugin.lexer.DiffLexerAdapter;')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import de.thomasrosenau.diffplugin.psi.DiffTypes;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import org.jetbrains.annotations.NotNull;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// TODO: add tests\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' public class DiffSyntaxHighlighter extends SyntaxHighlighterBase {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     public static final TextAttributesKey COMMAND = createTextAttributesKey("PATCH_COMMAND",\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             ConsoleViewContentType.USER_INPUT_KEY);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     public static final TextAttributesKey FILE = createTextAttributesKey("PATCH_FILEINFO",\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            DefaultLanguageHighlighterColors.LINE_COMMENT);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    public static final TextAttributesKey ADDED = createTextAttributesKey("PATCH_ADDED",\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            DefaultLanguageHighlighterColors.BLOCK_COMMENT);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    public static final TextAttributesKey INSERTED = createTextAttributesKey("PATCH_INSERTED",\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             DiffColors.DIFF_INSERTED);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     public static final TextAttributesKey DELETED = createTextAttributesKey("PATCH_DELETED",\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             DiffColors.DIFF_DELETED);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    public static final TextAttributesKey MODIFIED = createTextAttributesKey("PATCH_MODIFIED",\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    public static final TextAttributesKey CHANGED = createTextAttributesKey("PATCH_CHANGED",\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             DiffColors.DIFF_MODIFIED);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     public static final TextAttributesKey HUNK_HEAD = createTextAttributesKey("PATCH_HUNK_HEAD",\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             DefaultLanguageHighlighterColors.LABEL);\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -49,7 +50,7 @@ public class DiffSyntaxHighlighter extends SyntaxHighlighterBase {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             DefaultLanguageHighlighterColors.DOC_COMMENT);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     public static final TextAttributesKey TEXT = createTextAttributesKey("PATCH_TEXT",\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             HighlighterColors.TEXT);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    public static final TextAttributesKey GIT_HEAD = createTextAttributesKey("PATCH_GIT_HEAD",\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    public static final TextAttributesKey LEADING_TEXT = createTextAttributesKey("PATCH_LEADING_TEXT",\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             DefaultLanguageHighlighterColors.BLOCK_COMMENT);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     @NotNull\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -58,27 +59,62 @@ public class DiffSyntaxHighlighter extends SyntaxHighlighterBase {')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         return new DiffLexerAdapter();\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    private boolean isChangedLine(IElementType tokenType) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return tokenType.equals(DiffTypes.CONTEXT_CHANGED_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    private boolean isInsertedLine(IElementType tokenType) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return tokenType.equals(DiffTypes.CONTEXT_INSERTED_LINE) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                tokenType.equals(DiffTypes.UNIFIED_INSERTED_LINE) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                tokenType.equals(DiffTypes.NORMAL_TO_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    private boolean isDeletedLine(IElementType tokenType) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return tokenType.equals(DiffTypes.CONTEXT_DELETED_LINE) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                tokenType.equals(DiffTypes.UNIFIED_DELETED_LINE) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                tokenType.equals(DiffTypes.NORMAL_FROM_LINE);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    private boolean isHunkHead(IElementType tokenType) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return tokenType.equals(DiffTypes.CONTEXT_FROM_LINE_NUMBERS) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                tokenType.equals(DiffTypes.CONTEXT_TO_LINE_NUMBERS) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                tokenType.equals(DiffTypes.UNIFIED_LINE_NUMBERS) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                tokenType.equals(DiffTypes.NORMAL_ADD_COMMAND) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                tokenType.equals(DiffTypes.NORMAL_DELETE_COMMAND) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                tokenType.equals(DiffTypes.NORMAL_CHANGE_COMMAND);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    private boolean isSeparator(IElementType tokenType) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return tokenType.equals(DiffTypes.CONTEXT_HUNK_SEPERATOR) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                tokenType.equals(DiffTypes.NORMAL_SEPARATOR);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    private boolean isFileName(IElementType tokenType) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        return tokenType.equals(DiffTypes.CONTEXT_FROM_LABEL) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                 tokenType.equals(DiffTypes.CONTEXT_TO_LABEL) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                 tokenType.equals(DiffTypes.UNIFIED_FROM_LABEL) ||\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+                 tokenType.equals(DiffTypes.UNIFIED_TO_LABEL);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     @NotNull\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     @Override\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     public TextAttributesKey[] getTokenHighlights(IElementType tokenType) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         if (tokenType.equals(DiffTypes.COMMAND)) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             return pack(COMMAND);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        } else if (tokenType.equals(DiffTypes.FILE)) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            return pack(FILE);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        } else if (tokenType.equals(DiffTypes.ADDED)) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            return pack(ADDED);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        } else if (tokenType.equals(DiffTypes.DELETED)) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        } else if (isChangedLine(tokenType)) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            return pack(CHANGED);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        } else if (isInsertedLine(tokenType)) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            return pack(INSERTED);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        } else if (isDeletedLine(tokenType)) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             return pack(DELETED);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        } else if (tokenType.equals(DiffTypes.MODIFIED)) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            return pack(MODIFIED);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        } else if (tokenType.equals(DiffTypes.HUNK_HEAD)) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        } else if (isHunkHead(tokenType)) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             return pack(HUNK_HEAD);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        } else if (tokenType.equals(DiffTypes.SEPARATOR)) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        } else if (isSeparator(tokenType)) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             return pack(SEPARATOR);\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+        } else if (isFileName(tokenType)) {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+            return pack(FILE);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         } else if (tokenType.equals(DiffTypes.EOLHINT)) {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             return pack(EOLHINT);\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-        } else if (tokenType.equals(DiffTypes.GIT_HEAD)) {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-            return pack(GIT_HEAD);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         } else {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('             return pack(TEXT);\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('         }\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/java/de/thomasrosenau/diffplugin/lexer/Diff.flex b/src/main/java/de/thomasrosenau/diffplugin/lexer/Diff.flex')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 890a958..6204460 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/java/de/thomasrosenau/diffplugin/lexer/Diff.flex')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/java/de/thomasrosenau/diffplugin/lexer/Diff.flex')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -31,48 +31,54 @@ import static de.thomasrosenau.diffplugin.psi.DiffTypes.*;')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' %function advance\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' %type IElementType\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' %unicode\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-%state GitHead, DEFAULT\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+%state CONTEXT, UNIFIED, NORMAL\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' Newline = [\r\n]\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' InputCharacter = [^\r\n]\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' InputCharacters = {InputCharacter}+\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' Digits = [0-9]+\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-Range = {Digits} "," {Digits}\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+Range = {Digits} ("," {Digits})?\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' %%\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-<YYINITIAL> ^ "From "  {InputCharacters} $ { yybegin(GitHead); return GIT_HEAD; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-<GitHead> {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  ^ "diff " {InputCharacters} $ { yybegin(DEFAULT); return COMMAND; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  ^ "---" {Newline} { return SEPARATOR; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  // TODO detect email address etc\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  ^ {InputCharacters} $ { return GIT_HEAD; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-}\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' {Newline} { return WHITE_SPACE; }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ "diff " {InputCharacters} $ { yybegin(DEFAULT); return COMMAND; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ {Range} $ { yybegin(DEFAULT); return HUNK_HEAD; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ "--- " {Range} " ----" $ { yybegin(DEFAULT); return HUNK_HEAD; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ "*** " {Range} " ****" $ { yybegin(DEFAULT); return HUNK_HEAD; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ "@@" {InputCharacters} $ { yybegin(DEFAULT); return HUNK_HEAD; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+<YYINITIAL> ^ "*** " {InputCharacters} $ { yybegin(CONTEXT); return CONTEXT_FROM_LABEL; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+<CONTEXT> {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "***************" $ { return CONTEXT_HUNK_SEPERATOR; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "*** " {Range} " ****" $ { return CONTEXT_FROM_LINE_NUMBERS; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "--- " {Range} " ----" $ { return CONTEXT_TO_LINE_NUMBERS; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "--- " {InputCharacters} $ { return CONTEXT_TO_LABEL; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "!" (" " {InputCharacters})? {Newline} { return CONTEXT_CHANGED_LINE; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "+" (" " {InputCharacters})? {Newline} { return CONTEXT_INSERTED_LINE; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "-" (" " {InputCharacters})? {Newline} { return CONTEXT_DELETED_LINE; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "  " {InputCharacters} {Newline} { return CONTEXT_COMMON_LINE; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ "*** " {InputCharacters} $ { yybegin(DEFAULT); return FILE; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ "--- " {InputCharacters} $ { yybegin(DEFAULT); return FILE; } // TODO: find out if first or second file (-u vs. -c)\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ "+++ " {InputCharacters} $ { yybegin(DEFAULT); return FILE; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+<YYINITIAL,UNIFIED> ^ "--- " {InputCharacters} $ { yybegin(UNIFIED); return UNIFIED_FROM_LABEL; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+<UNIFIED> {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "+++ " {InputCharacters} $ { return UNIFIED_TO_LABEL; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "@@ " {InputCharacters} " @@" (" " .+)? $ { return UNIFIED_LINE_NUMBERS; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "+" {InputCharacters}? {Newline} { return UNIFIED_INSERTED_LINE; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "-" {InputCharacters}? {Newline} { return UNIFIED_DELETED_LINE; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ " " {InputCharacters}? {Newline} { return UNIFIED_COMMON_LINE; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ "--" ("-" | " ")? {Newline} { yybegin(DEFAULT); return SEPARATOR; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ "***************" {Newline} { yybegin(DEFAULT); return SEPARATOR; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+<YYINITIAL,NORMAL> {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ {Digits} "a" {Range} $ { yybegin(NORMAL); return NORMAL_ADD_COMMAND; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ {Range} "c" {Range} $ { yybegin(NORMAL); return NORMAL_CHANGE_COMMAND; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ {Range} "d" {Digits} $ { yybegin(NORMAL); return NORMAL_DELETE_COMMAND; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+<NORMAL> {\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ ">" {InputCharacters}? {Newline} { return NORMAL_TO_LINE; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "<" {InputCharacters}? {Newline} { return NORMAL_FROM_LINE; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+  ^ "---" $ { return NORMAL_SEPARATOR; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+}\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-// TODO: handle EOF\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ [+>] {InputCharacters}? {Newline} { yybegin(DEFAULT); return ADDED; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ [-<] {InputCharacters}? {Newline} { yybegin(DEFAULT); return DELETED; }\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ "!" {InputCharacters} {Newline} { yybegin(DEFAULT); return MODIFIED; } // TODO: find out if added or deleted\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+^ "diff " {InputCharacters} $ { yybegin(YYINITIAL); return COMMAND; }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ "\\" {InputCharacters} $ { yybegin(DEFAULT); return EOLHINT; } // TODO: find out if added or deleted\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+^ "\\" {InputCharacters} $ { return EOLHINT; }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-^ {InputCharacters} $ { yybegin(DEFAULT); return OTHER; }\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+^ {InputCharacters} $ { return OTHER; }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' [^] { return BAD_CHARACTER; } // this should never happen; debugging only\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/java/de/thomasrosenau/diffplugin/lexer/DiffLexerAdapter.java b/src/main/java/de/thomasrosenau/diffplugin/lexer/DiffLexerAdapter.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 3f11300..06d4efa 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/java/de/thomasrosenau/diffplugin/lexer/DiffLexerAdapter.java')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/java/de/thomasrosenau/diffplugin/lexer/DiffLexerAdapter.java')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -16,13 +16,11 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' package de.thomasrosenau.diffplugin.lexer;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-import java.io.Reader;\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import com.intellij.lexer.FlexAdapter;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' import de.thomasrosenau.diffplugin.DiffLexer;\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' public class DiffLexerAdapter extends FlexAdapter {\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   public DiffLexerAdapter() {\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    super(new DiffLexer((Reader) null));\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+    super(new DiffLexer(null));\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' }\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/main/java/de/thomasrosenau/diffplugin/parser/Diff.bnf b/src/main/java/de/thomasrosenau/diffplugin/parser/Diff.bnf')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 69f7c82..03cc353 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/main/java/de/thomasrosenau/diffplugin/parser/Diff.bnf')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/main/java/de/thomasrosenau/diffplugin/parser/Diff.bnf')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -29,8 +29,36 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   tokenTypeClass="de.thomasrosenau.diffplugin.psi.DiffTokenType"\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' }\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-diffFile ::= (info | changed | plain)*\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// TODO: make stuff private if possible\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' \n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-info ::= COMMAND | FILE | SEPARATOR | HUNK_HEAD | EOLHINT | GIT_HEAD\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-changed ::=  ADDED | DELETED | MODIFIED\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-plain ::= OTHER\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// https://www.gnu.org/software/diffutils/manual/diffutils.html#Imperfect\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+diffFile ::= (leadingText (normalDiff | contextDiff | unifiedDiff))+ trailingText // TODO: handle indentation\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// TODO: Handle Prereq: and Index:\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// TODO: Handle git header\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+leadingText ::= anyLine* (consoleCommand anyLine*)?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+consoleCommand ::= COMMAND\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// TODO: Handle git footer\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+trailingText ::= anyLine*\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+anyLine ::= WHITE_SPACE | OTHER\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// https://www.gnu.org/software/diffutils/manual/diffutils.html#Detailed-Context\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+contextDiff ::= CONTEXT_FROM_LABEL CONTEXT_TO_LABEL contextHunk+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+contextHunk ::= CONTEXT_HUNK_SEPERATOR contextHunkFrom contextHunkTo\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+contextHunkFrom ::= CONTEXT_FROM_LINE_NUMBERS contextFromFileLine* (EOLHINT)?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+contextHunkTo ::= CONTEXT_TO_LINE_NUMBERS contextToFileLine* (EOLHINT)?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+contextFromFileLine ::= CONTEXT_COMMON_LINE | CONTEXT_CHANGED_LINE | CONTEXT_DELETED_LINE\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+contextToFileLine ::= CONTEXT_COMMON_LINE | CONTEXT_CHANGED_LINE | CONTEXT_INSERTED_LINE\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// https://www.gnu.org/software/diffutils/manual/diffutils.html#Detailed-Unified\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+unifiedDiff ::= UNIFIED_FROM_LABEL UNIFIED_TO_LABEL unifiedHunk+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// TODO: Handle git binaries\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+unifiedHunk ::= UNIFIED_LINE_NUMBERS (unifiedLine | WHITE_SPACE)+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+unifiedLine ::= UNIFIED_INSERTED_LINE | UNIFIED_DELETED_LINE | UNIFIED_COMMON_LINE | EOLHINT\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+// https://www.gnu.org/software/diffutils/manual/diffutils.html#Detailed-Normal\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+normalDiff ::= normalHunk+\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+normalHunk ::= normalHunkAdd | normalHunkChange | normalHunkDelete\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+normalHunkAdd ::= NORMAL_ADD_COMMAND NORMAL_TO_LINE+ EOLHINT?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+normalHunkChange ::= NORMAL_CHANGE_COMMAND NORMAL_FROM_LINE+ EOLHINT? NORMAL_SEPARATOR NORMAL_TO_LINE+ EOLHINT?\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+normalHunkDelete ::= NORMAL_DELETE_COMMAND NORMAL_FROM_LINE+ EOLHINT?\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/test/resources/dir-context.diff b/src/test/resources/dir-context.diff')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 0769810..20f14d2 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/test/resources/dir-context.diff')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/test/resources/dir-context.diff')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -1,6 +1,7 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-diff -r -c lao/quote tzu/quote\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-*** lao/quote\t2019-02-14 07:11:32.000000000 +0100\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('---- tzu/quote\t2019-02-14 07:10:13.000000000 +0100\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+Only in lao: preamble\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+diff -c lao/quote tzu/quote\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+*** lao/quote\t2019-02-18 08:26:38.000000000 +0100\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+--- tzu/quote\t2019-02-18 08:23:58.000000000 +0100\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' ***************\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' *** 1,7 ****\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' - The Way that can be told of is not the eternal Way;\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -18,15 +19,12 @@ diff -r -c lao/quote tzu/quote')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     so we may see their subtlety,\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   And let there always be being,\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' ***************\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-*** 9,12 ****\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  The two are the same,\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-  But after they are produced,\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-    they have different names.\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-!\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+*** 9,11 ****\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' --- 8,13 ----\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   The two are the same,\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('   But after they are produced,\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)('     they have different names.\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-! They both may be called deep and profound.\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-! Deeper and more profound,\n')
      PsiElement(DiffTokenType.UNIFIED_DELETED_LINE)('-! The door of all subtleties!\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('++ They both may be called deep and profound.\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('++ Deeper and more profound,\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('++ The door of all subtleties!\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+Only in tzu: unquote\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/test/resources/dir-normal.diff b/src/test/resources/dir-normal.diff')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index c691cd0..f8818b4 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/test/resources/dir-normal.diff')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/test/resources/dir-normal.diff')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -1,3 +1,4 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+Only in lao: preamble\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' diff -r lao/quote tzu/quote\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' 1,2d0\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' < The Way that can be told of is not the eternal Way;\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -13,3 +14,4 @@ diff -r lao/quote tzu/quote')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' > They both may be called deep and profound.\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' > Deeper and more profound,\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' > The door of all subtleties!\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+Only in tzu: unquote\n')
  DiffGitDiffImpl(GIT_DIFF)
    DiffConsoleCommandImpl(CONSOLE_COMMAND)
      PsiElement(DiffTokenType.COMMAND)('diff --git a/src/test/resources/dir-unified.diff b/src/test/resources/dir-unified.diff')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.OTHER)('index 6303678..6341918 100644')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_FROM_LABEL)('--- a/src/test/resources/dir-unified.diff')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.UNIFIED_TO_LABEL)('+++ b/src/test/resources/dir-unified.diff')
    PsiWhiteSpace('\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -1,3 +1,4 @@')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+Only in lao: preamble\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' diff -r -u lao/quote tzu/quote\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' --- lao/quote\t2019-02-14 07:11:32.000000000 +0100\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' +++ tzu/quote\t2019-02-14 07:10:13.000000000 +0100\n')
    DiffUnifiedHunkImpl(UNIFIED_HUNK)
      PsiElement(DiffTokenType.UNIFIED_LINE_NUMBERS)('@@ -19,3 +20,5 @@ diff -r -u lao/quote tzu/quote')
      PsiWhiteSpace('\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' +They both may be called deep and profound.\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' +Deeper and more profound,\n')
      PsiElement(DiffTokenType.UNIFIED_COMMON_LINE)(' +The door of all subtleties!\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+Only in tzu: unquote\n')
      PsiElement(DiffTokenType.UNIFIED_INSERTED_LINE)('+\n')
  DiffGitFooterImpl(GIT_FOOTER)
    PsiElement(DiffTokenType.GIT_SEPARATOR)('-- ')
    PsiWhiteSpace('\n')
    PsiElement(DiffTokenType.GIT_VERSION_NUMBER)('2.20.1')
  PsiWhiteSpace('\n')
  PsiWhiteSpace('\n')