json.array=array
json.object=object
json.property=property

syntax.error.missing.closing.quote=Missing closing quote
syntax.error.illegal.escape.sequence=Illegal escape sequence
syntax.error.illegal.unicode.escape.sequence=Illegal unicode escape sequence
syntax.error.illegal.floating.point.literal=Illegal floating point literal
syntax.error.control.char.in.string=Control character ''{0}'' is not allowed in string literals

# Inspections
json.inspection.group=JSON and JSON5

inspection.compliance.name=Compliance with JSON standard
inspection.compliance5.name=Compliance with JSON5 standard
inspection.compliance.msg.comments=JSON standard does not allow comments. Use JSMin or similar tool to remove comments before parsing.
inspection.compliance.msg.single.quoted.strings=JSON standard does not allow single quoted strings
inspection.compliance.msg.bad.token=JSON standard does not allow such tokens
inspection.compliance.msg.illegal.property.key=JSON standard allows only double quoted string as property key
inspection.compliance.msg.trailing.comma=JSON standard does not allow trailing comma
inspection.compliance.msg.multiple.top.level.values=JSON standard allows only one top-level value

inspection.compliance.option.comments=Warn about comments
inspection.compliance.option.multiple.top.level.values=Warn about multiple top-level values
inspection.compliance.option.trailing.comma=Warn about trailing commas
inspection.compliance.option.nan.infinity=Warn about NaN and Infinity/-Infinity numeric values

inspection.duplicate.keys.name=Duplicate keys in object literals
inspection.duplicate.keys.msg.duplicate.keys=Object contains duplicate keys ''{0}''

# Formatter
formatter.align.properties.caption=Align

formatter.align.properties.none=Do not align
formatter.align.properties.on.colon=On colon
formatter.align.properties.on.value=On value

# Quickfixes and editor actions
quickfix.add.double.quotes.desc=Wrap with double quotes

surround.with.object.literal.desc=object literal
surround.with.array.literal.desc=array literal
surround.with.quotes.desc=quotes
json.template.context.type=JSON

json.copy.to.clipboard=Copy {0} to clipboard

#json schema
json.schema.add.schema.chooser.title=Select JSON Schema File
json.schema.annotation.not.allowed.property=Property ''{0}'' is not allowed
json.schema.conflicting.mappings=Warning: conflicting mappings. <a href="#">Show details</a>
json.schema.file.selector.title=Schema file or URL:
json.schema.version.selector.title=Schema version:
json.schema.file.not.found=File not found
json.schema.inspection.compliance.name=Compliance with JSON schema
json.schema.inspection.deprecation.name=Deprecated JSON property
json.schema.inspection.case.insensitive.enum=Case insensitive matching for enum values

json.schema.ref.refs.inspection.name=Unresolved '$ref' and '$schema' references
json.schema.ref.file.not.found=File ''{0}'' not found
json.schema.ref.cannot.resolve.path=Cannot resolve path ''{0}''
json.schema.ref.cannot.resolve.id=Cannot resolve id ''{0}''
json.schema.ref.no.array.element=Array doesn''t contain element with index '{0}'
json.schema.ref.no.property=Property ''{0}'' not found

settings.json.schema.add.mapping=Add mapping
settings.json.schema.edit.mapping=Edit mapping
settings.json.schema.remove.mapping=Remove mapping

json.intention.sort.properties=Sort properties alphabetically
configurable.JsonSmartKeysConfigurable.display.name=JSON
configurable.JsonSchemaMappingsConfigurable.display.name=JSON Schema Mappings
configurable.JsonSchemaCatalogConfigurable.display.name=Remote JSON Schemas
settings.smart.keys.insert.missing.comma.on.enter=Insert missing comma on Enter
settings.smart.keys.insert.missing.comma.after.matching.braces.and.quotes=Insert missing comma after matching braces and quotes
settings.smart.keys.automatically.manage.commas.when.pasting.json.fragments=Automatically manage commas when pasting JSON fragments
settings.smart.keys.escape.text.on.paste.in.string.literals=Escape text on paste in string literals
settings.smart.keys.automatically.add.quotes.to.property.names.when.typing.comma=Automatically add quotes to property names when typing ':'
settings.smart.keys.automatically.add.whitespace.when.typing.comma.after.property.names=Automatically add whitespace when typing ':' after property names
settings.smart.keys.automatically.move.comma.after.the.property.name.if.typed.inside.quotes=Automatically move ':' after the property name if typed inside quotes
settings.smart.keys.automatically.move.comma.after.the.property.value.or.array.element.if.inside.quotes=Automatically move comma after the property value or array element if inside quotes
checkbox.use.schemastore.org.json.schema.catalog=Use schemastore.org JSON Schema catalog
checkbox.allow.downloading.json.schemas.from.remote.sources=Allow downloading JSON Schemas from remote sources
checkbox.always.download.the.most.recent.version.of.schemas=Always download the most recent version of schemas
action.DumbAware.JsonSchemaMappingsConfigurable.text.add=Add
action.DumbAware.JsonSchemaMappingsConfigurable.description.add=Add
file.type.description.json=JSON
settings.display.name.json=JSON
copy.json.pointer=Copy JSON Pointer
cannot.sort.properties=Cannot sort properties
file.is.readonly=File is readonly
not.applicable.in.batch.mode=Not Applicable in Batch Mode
sorry.this.fix.is.not.available.in.batch.mode=Sorry, this fix is not available in batch mode
replace.with.allowed.value=Replace with allowed value
json.schema=JSON Schema
json.schema.desc=JSON schema
remove.prohibited.property=Remove prohibited property
add.missing.0=Add missing {0}
add.missing.properties=Add missing properties

path.to.file.or.directory.relative.to.project.root.or.file.name=Path to file or directory relative to project root, or file name pattern like *.config.json
json.property.keys=JSON Property Keys
json.string.values=JSON String Values
json.vfs.updater.executor=JsonVfsUpdaterExecutor
property.0.is.deprecated.1=Property ''{0}'' is deprecated: {1}
add.mapping.for.a=Add mapping for a 
no.schema.mappings.defined=No schema mappings defined
file.type.description.json5=JSON5
unnamed.desc=<unnamed>
navigate.to.duplicates=Navigate to duplicates
navigate.to.duplicates.header=Duplicates of ''{0}''
navigate.to.duplicates.desc=''{0}'' at line #{1}
annotation.property.key=Property key
color.page.attribute.keyword=Keyword
color.page.attribute.string=String
color.page.attribute.number=Number
color.page.attribute.colon=Colon
color.page.attribute.comma=Comma
color.page.attribute.brackets=Brackets
color.page.attribute.braces=Braces
color.page.attribute.block.comment=Block Comment
color.page.attribute.line.comment=Line Comment
color.page.attribute.property.key=Property Key
color.page.attribute.invalid.escape.sequence=Invalid Escape Sequence
color.page.attribute.valid.escape.sequence=Valid Escape Sequence

qualified.name.qualified=qualified name
qualified.name.pointer=JSON pointer

schema.of.version=JSON Schema version {0}

schema.configuration.error.empty.file.path=Empty file path matches nothing
schema.configuration.error.empty.pattern=Empty pattern matches nothing
schema.configuration.error.unknown.mapping=Unknown mapping kind
schema.configuration.project.directory={0}[Project Directory]

schema.configuration.error.empty.path=Schema path is empty
schema.configuration.error.invalid.url=Invalid schema URL
schema.configuration.error.invalid.url.resource=Invalid URL resource
schema.configuration.error.file.does.not.exist=Schema file does not exist
schema.configuration.error.empty.name=Schema name is empty
schema.configuration.error.duplicate.name=Duplicate schema name: ''{0}''
schema.configuration.error.conflicting.mappings.title=Conflicting mappings:\n{0}
schema.configuration.error.conflicting.mappings.desc=''{0}'' for schema ''{1}'' and ''{2}'' for schema ''{3}''


schema.configuration.mapping.empty.area.string=Select a JSON Schema to view
schema.configuration.mapping.empty.area.alt.string=Please add a JSON Schema file and configure its usage
schema.configuration.mapping.remote=Remote Schema URLs

schema.mapping.file=file
schema.mapping.pattern=file path pattern
schema.mapping.directory=directory

schema.catalog.hint=Schemas will be downloaded and assigned using the <a href="http://schemastore.org/json/">SchemaStore API</a>
schema.catalog.remote.hint=Schemas will always be downloaded from the SchemaStore, even if some of them are bundled with the IDE

schema.widget.registered.schemas=Registered schemas
schema.widget.store.schemas=SchemaStore.org schemas
schema.widget.add.mapping=New Schema Mapping\u2026
schema.widget.edit.mappings=Edit Schema Mappings\u2026
schema.widget.load.mappings=Load SchemaStore Mappings
schema.widget.prefix.json.files=JSON: 
schema.widget.prefix.other.files=Schema: 
schema.widget.display.name=JSON Schema
schema.widget.tooltip.json.files=JSON Schema: 
schema.widget.tooltip.other.files=Validated by JSON Schema: 
schema.widget.service=JSON Schema Service
schema.widget.conflict.message.prefix=There are several JSON Schemas mapped to this file:<br/>
schema.widget.conflict.message.postfix=schemas (!)
schema.widget.download.in.progress.tooltip=Download is scheduled or in progress
schema.widget.download.in.progress.label=Downloading JSON schema
schema.widget.error.label=JSON schema error
schema.widget.error.not.a.schema=File is not a schema
schema.widget.error.cant.download=Error downloading schema
schema.widget.bundled.postfix= (bundled)
schema.widget.no.schema.label=No JSON schema
schema.widget.no.schema.tooltip=No JSON Schema defined
schema.widget.package.postfix=(Package: ''{0}'')
schema.widget.conflict.popup.title=JSON Schema conflicting mappings

schema.reader.cant.load.file=Cannot load JSON Schema file ''{0}''
schema.reader.cant.load.model=Cannot load code model for JSON Schema file ''{0}''
schema.reader.file.too.large=JSON schema was not loaded from ''{0}'' because it's too large (file size is {1} bytes)
schema.reader.file.empty=JSON schema was not loaded from ''{0}''. File is empty
schema.reader.file.not.found.or.error=JSON Schema not found or contains error in '{0}': {1}

schema.documentation.deprecated.postfix= (deprecated)

schema.validation.property=property {0}
schema.validation.properties=properties {0}

schema.validation.array.shorter.than=Array is shorter than {0}
schema.validation.array.longer.than=Array is longer than {0}
schema.validation.array.not.contains=No match for 'contains' rule
schema.validation.array.no.extra=Additional items are not allowed
schema.validation.not.unique=Item is not unique
schema.validation.enum.mismatch=Value should be one of: {0}
schema.validation.against.not=Validates against 'not' schema
schema.validation.integer.expected=Integer value expected
schema.validation.number.expected=Double value expected
schema.validation.not.multiple.of=Is not multiple of {0}
schema.validation.greater.than.exclusive.maximum=Greater than the exclusive maximum {0}
schema.validation.greater.than.maximum=Greater than the maximum {0}
schema.validation.less.than.exclusive.minimum=Less than the exclusive minimum {0}
schema.validation.less.than.minimum=Less than the minimum {0}
schema.validation.missing.required.property.or.properties=Missing required {0}
schema.validation.number.of.props.less.than=Number of properties is less than {0}
schema.validation.number.of.props.greater.than=Number of properties is greater than {0}
schema.validation.violated.dependency=Dependency is violated: {0} must be specified, since ''{1}'' is specified
schema.validation.string.shorter.than=String is shorter than {0}
schema.validation.string.longer.than=String is longer than {0}
schema.validation.invalid.string.pattern=Cannot check the string by pattern because of an error: {0}
schema.validation.string.violates.pattern=String violates the pattern: ''{0}''
schema.validation.actual=Actual: 
schema.validation.incompatible.types=Incompatible types.
schema.validation.required.one=Required: {0}.{1}
schema.validation.required.one.of=Required one of: {0}.{1}
schema.validation.to.more.than.one=Validates to more than one variant
schema.validation.one.of.property.sets.required=One of the following property sets is required: {0}
schema.validation.at.least.one.of.property.sets.required=Should have at least one of the following property sets: {0}